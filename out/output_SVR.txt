no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([2.57432612, 1.23400394, 2.24888635, 5.63828564, 5.06898038,
       3.24009824, 5.75792448, 3.94427816, 4.88226954, 4.73751211,
       2.4519829 , 4.80431636, 2.46931815, 4.31552029, 4.57724659,
       4.22458736, 5.19488764, 4.50529528, 4.92756263, 4.08828799,
       4.29974596, 4.74790438, 4.26211953, 4.69199045, 5.06106162,
       3.67356515, 5.53179971, 4.50598971, 4.80188632, 4.07867416,
       4.29126048, 4.38486664, 4.31664801, 4.32151222, 4.61225732,
       4.10717225, 4.56851761, 4.53086662, 4.42695006, 4.71087511,
       4.35389455, 4.87281084, 4.41582195, 4.09997352, 4.6409893 ,
       4.93698454, 4.93018087, 4.52196829, 4.42877626, 4.22441904]), 'std_fit_time': array([0.31859611, 0.26060677, 0.16310857, 0.77422039, 0.07686589,
       0.16499574, 1.06066866, 0.12091646, 0.27344655, 0.33242156,
       0.05603339, 0.63691811, 0.17958234, 0.3742837 , 0.0497998 ,
       0.31787534, 0.84782353, 0.1218911 , 0.69966388, 0.15536511,
       0.31916337, 0.14672081, 0.34559241, 0.03694589, 0.57614927,
       0.81890473, 0.95739988, 0.13551315, 0.57894943, 0.10866437,
       0.31095805, 0.31340489, 0.27867151, 0.34306267, 0.09870191,
       0.13439839, 0.17976853, 0.16742703, 0.21637177, 0.33900935,
       0.16574597, 0.32234162, 0.33004755, 0.09594313, 0.44243504,
       0.77109732, 0.65048893, 0.14277398, 0.23993156, 0.27823781]), 'mean_score_time': array([ 1.07060822,  0.45463149,  1.05844061,  2.28501185,  2.46913958,
        8.86306461,  2.82592765, 10.18685579,  2.37928891, 11.58789229,
        6.23805984, 10.43419361,  6.19681032, 11.76084352, 11.48089051,
       11.52208726, 12.84344284, 11.55613534, 11.56564442, 11.39725733,
       11.55312618, 11.59908557, 11.54268567, 12.45169497, 11.50923657,
        6.36934408, 11.85545739, 11.61607448, 11.26216197, 11.42783928,
       11.50540535, 11.64137657, 11.55667178, 11.73021364, 11.61403116,
       11.77607902, 11.45250376, 11.8283085 , 11.30935399, 11.74422391,
       11.31209175, 11.56484993, 11.49046516, 11.85961262, 11.55547094,
       11.68146547, 11.52243225, 11.67521914, 11.2734925 , 11.77104934]), 'std_score_time': array([0.0566499 , 0.15317388, 0.06834904, 0.15724528, 0.04422448,
       0.36275627, 0.4898195 , 0.17252435, 0.11659156, 0.17133999,
       0.14467361, 0.20481032, 0.14070635, 0.40336683, 0.36060546,
       0.12617878, 1.1866579 , 0.3355088 , 0.23429457, 0.17675692,
       0.32010295, 0.43316694, 0.40264394, 1.06391537, 0.08292826,
       0.28627594, 0.46272545, 0.20924965, 0.14801818, 0.12694072,
       0.22525778, 0.3448965 , 0.21832317, 0.13609487, 0.44602132,
       0.42481414, 0.22181655, 0.55513282, 0.31816436, 0.19104463,
       0.05740337, 0.19444411, 0.34958872, 0.11434867, 0.33271814,
       0.24969951, 0.13673707, 0.47651703, 0.22223588, 0.31886644]), 'param_C': masked_array(data=[14.571428571428573, 9.142857142857142, 10.5,
                   7.7857142857142865, 14.571428571428573,
                   6.428571428571429, 14.571428571428573,
                   11.857142857142858, 6.428571428571429,
                   14.571428571428573, 5.071428571428571,
                   14.571428571428573, 14.571428571428573,
                   11.857142857142858, 11.857142857142858,
                   11.857142857142858, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   11.857142857142858, 6.428571428571429,
                   6.428571428571429, 6.428571428571429,
                   6.428571428571429],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[4, 3, 3, 8, 8, 7, 4, 6, 8, 3, 8, 6, 7, 3, 3, 3, 3, 3,
                   3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 2, 6, 6, 6, 8, 5,
                   9, 4, 4, 4, 6, 2, 8, 5, 5, 6, 9, 2, 8, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_epsilon': masked_array(data=[2.778222222222222, 4.444555555555556,
                   2.2227777777777775, 4.444555555555556,
                   4.444555555555556, 1.6673333333333331, 0.001,
                   1.1118888888888887, 0.5564444444444444,
                   0.5564444444444444, 2.778222222222222,
                   1.1118888888888887, 2.778222222222222,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   2.778222222222222, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444, 0.5564444444444444,
                   0.5564444444444444],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=[0.35807142857142854, 2.1434285714285712,
                   4.285857142857143, 3.2146428571428567,
                   1.0722142857142856, 2.5004999999999997,
                   2.857571428571428, 3.9287857142857137,
                   1.7863571428571425, 3.9287857142857137,
                   1.0722142857142856, 2.5004999999999997,
                   3.9287857142857137, 1.0722142857142856, 5.0,
                   2.5004999999999997, 5.0, 0.35807142857142854,
                   2.5004999999999997, 1.429285714285714,
                   0.7151428571428571, 2.857571428571428,
                   4.285857142857143, 2.1434285714285712,
                   1.7863571428571425, 3.9287857142857137,
                   1.7863571428571425, 4.285857142857143,
                   0.35807142857142854, 3.571714285714285,
                   2.1434285714285712, 2.1434285714285712,
                   3.2146428571428567, 4.6429285714285715,
                   2.857571428571428, 2.857571428571428,
                   2.857571428571428, 0.001, 1.0722142857142856,
                   2.857571428571428, 1.429285714285714,
                   0.7151428571428571, 5.0, 0.001, 0.7151428571428571,
                   0.7151428571428571, 0.35807142857142854,
                   1.0722142857142856, 3.2146428571428567,
                   4.6429285714285715],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['poly', 'poly', 'poly', 'sigmoid', 'sigmoid', 'rbf',
                   'sigmoid', 'rbf', 'sigmoid', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('C', 14.571428571428573), ('degree', 4), ('epsilon', 2.778222222222222), ('gamma', 0.35807142857142854), ('kernel', 'poly')]), OrderedDict([('C', 9.142857142857142), ('degree', 3), ('epsilon', 4.444555555555556), ('gamma', 2.1434285714285712), ('kernel', 'poly')]), OrderedDict([('C', 10.5), ('degree', 3), ('epsilon', 2.2227777777777775), ('gamma', 4.285857142857143), ('kernel', 'poly')]), OrderedDict([('C', 7.7857142857142865), ('degree', 8), ('epsilon', 4.444555555555556), ('gamma', 3.2146428571428567), ('kernel', 'sigmoid')]), OrderedDict([('C', 14.571428571428573), ('degree', 8), ('epsilon', 4.444555555555556), ('gamma', 1.0722142857142856), ('kernel', 'sigmoid')]), OrderedDict([('C', 6.428571428571429), ('degree', 7), ('epsilon', 1.6673333333333331), ('gamma', 2.5004999999999997), ('kernel', 'rbf')]), OrderedDict([('C', 14.571428571428573), ('degree', 4), ('epsilon', 0.001), ('gamma', 2.857571428571428), ('kernel', 'sigmoid')]), OrderedDict([('C', 11.857142857142858), ('degree', 6), ('epsilon', 1.1118888888888887), ('gamma', 3.9287857142857137), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 8), ('epsilon', 0.5564444444444444), ('gamma', 1.7863571428571425), ('kernel', 'sigmoid')]), OrderedDict([('C', 14.571428571428573), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 3.9287857142857137), ('kernel', 'rbf')]), OrderedDict([('C', 5.071428571428571), ('degree', 8), ('epsilon', 2.778222222222222), ('gamma', 1.0722142857142856), ('kernel', 'rbf')]), OrderedDict([('C', 14.571428571428573), ('degree', 6), ('epsilon', 1.1118888888888887), ('gamma', 2.5004999999999997), ('kernel', 'rbf')]), OrderedDict([('C', 14.571428571428573), ('degree', 7), ('epsilon', 2.778222222222222), ('gamma', 3.9287857142857137), ('kernel', 'rbf')]), OrderedDict([('C', 11.857142857142858), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 1.0722142857142856), ('kernel', 'rbf')]), OrderedDict([('C', 11.857142857142858), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 5.0), ('kernel', 'rbf')]), OrderedDict([('C', 11.857142857142858), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 2.5004999999999997), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 5.0), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 0.35807142857142854), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 2.5004999999999997), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 1.429285714285714), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 0.7151428571428571), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 2.857571428571428), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 4.285857142857143), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 2.1434285714285712), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 0.5564444444444444), ('gamma', 1.7863571428571425), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 3), ('epsilon', 2.778222222222222), ('gamma', 3.9287857142857137), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 1.7863571428571425), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 4.285857142857143), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 0.35807142857142854), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 3.571714285714285), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 2), ('epsilon', 0.5564444444444444), ('gamma', 2.1434285714285712), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 2.1434285714285712), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 3.2146428571428567), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 4.6429285714285715), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 8), ('epsilon', 0.5564444444444444), ('gamma', 2.857571428571428), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 5), ('epsilon', 0.5564444444444444), ('gamma', 2.857571428571428), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 9), ('epsilon', 0.5564444444444444), ('gamma', 2.857571428571428), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 4), ('epsilon', 0.5564444444444444), ('gamma', 0.001), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 4), ('epsilon', 0.5564444444444444), ('gamma', 1.0722142857142856), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 4), ('epsilon', 0.5564444444444444), ('gamma', 2.857571428571428), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 1.429285714285714), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 2), ('epsilon', 0.5564444444444444), ('gamma', 0.7151428571428571), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 8), ('epsilon', 0.5564444444444444), ('gamma', 5.0), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 5), ('epsilon', 0.5564444444444444), ('gamma', 0.001), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 5), ('epsilon', 0.5564444444444444), ('gamma', 0.7151428571428571), ('kernel', 'rbf')]), OrderedDict([('C', 11.857142857142858), ('degree', 6), ('epsilon', 0.5564444444444444), ('gamma', 0.7151428571428571), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 9), ('epsilon', 0.5564444444444444), ('gamma', 0.35807142857142854), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 2), ('epsilon', 0.5564444444444444), ('gamma', 1.0722142857142856), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 8), ('epsilon', 0.5564444444444444), ('gamma', 3.2146428571428567), ('kernel', 'rbf')]), OrderedDict([('C', 6.428571428571429), ('degree', 4), ('epsilon', 0.5564444444444444), ('gamma', 4.6429285714285715), ('kernel', 'rbf')])], 'split0_test_score': array([  -3.01581479,   -2.67914952,   -2.54677747, -390.3025088 ,
       -728.98593187,   -2.71331083, -730.34423447,   -2.69425225,
       -319.71774026,   -2.67498258,   -2.78155183,   -2.69425225,
         -2.79489587,   -2.67498258,   -2.67498258,   -2.67498258,
         -2.66360542,   -2.66360542,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66360542,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.79130201,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66360542,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66360542,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66351495,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66360542,   -2.66360542,   -2.66351495,
         -2.66360542,   -2.67498258,   -2.66360542,   -2.66360542,
         -2.66360542,   -2.66360542]), 'split1_test_score': array([  -3.27559807,   -2.8814068 ,   -2.5652336 , -367.41018487,
       -692.39952537,   -3.02365817, -687.5046287 ,   -3.01455985,
       -305.17133875,   -3.00392302,   -3.06266974,   -3.01455985,
         -3.0743914 ,   -3.00392302,   -3.00392302,   -3.00392302,
         -2.99772361,   -2.99772361,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99772361,   -2.99772361,   -2.99772361,
         -2.99772361,   -3.06961523,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99772361,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99772361,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99766965,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99772361,   -2.99772361,   -2.99766965,
         -2.99772361,   -3.00392302,   -2.99772361,   -2.99772361,
         -2.99772361,   -2.99772361]), 'split2_test_score': array([  -8.00749226,   -3.17562862,   -3.51964127, -365.4154891 ,
       -682.87970282,   -2.89684265, -682.47970285,   -2.8766617 ,
       -301.17287159,   -2.85086385,   -2.96884772,   -2.8766617 ,
         -2.98403508,   -2.85086385,   -2.85086385,   -2.85086385,
         -2.83431389,   -2.83431389,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83431389,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.97974015,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83431389,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83431389,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83421627,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83431389,   -2.83431389,   -2.83421627,
         -2.83431389,   -2.85086385,   -2.83431389,   -2.83431389,
         -2.83431389,   -2.83431389]), 'mean_test_score': array([  -4.76630171,   -2.91206165,   -2.87721745, -374.37606092,
       -701.42172002,   -2.87793722, -700.10952201,   -2.8618246 ,
       -308.68731687,   -2.84325648,   -2.93768976,   -2.8618246 ,
         -2.95110745,   -2.84325648,   -2.84325648,   -2.84325648,
         -2.83188097,   -2.83188097,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83188097,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.9468858 ,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83188097,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83188097,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83180029,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83188097,   -2.83188097,   -2.83180029,
         -2.83188097,   -2.84325648,   -2.83188097,   -2.83188097,
         -2.83188097,   -2.83188097]), 'std_test_score': array([ 2.29432038,  0.20384253,  0.45432473, 11.29110297, 19.87454128,
        0.12740207, 21.47736558,  0.13118523,  7.96867263,  0.13439706,
        0.11686155,  0.13118523,  0.11645488,  0.13439706,  0.13439706,
        0.13439706,  0.13641403,  0.13641403,  0.13641403,  0.13641403,
        0.13641403,  0.13641403,  0.13641403,  0.13641403,  0.13641403,
        0.1159716 ,  0.13641403,  0.13641403,  0.13641403,  0.13641403,
        0.13641403,  0.13641403,  0.13641403,  0.13641403,  0.13641403,
        0.13641403,  0.13641403,  0.13642878,  0.13641403,  0.13641403,
        0.13641403,  0.13641403,  0.13641403,  0.13642878,  0.13641403,
        0.13439706,  0.13641403,  0.13641403,  0.13641403,  0.13641403]), 'rank_test_score': array([46, 42, 40, 48, 50, 41, 49, 38, 47, 33, 43, 38, 45, 33, 33, 33,  3,
        3,  3,  3,  3,  3,  3,  3,  3, 44,  3,  3,  3,  3,  3,  3,  3,  3,
        3,  3,  3,  1,  3,  3,  3,  3,  3,  1,  3, 33,  3,  3,  3,  3],
      dtype=int32)}
-2.831800287664134
OrderedDict([('C', 6.428571428571429), ('degree', 4), ('epsilon', 0.5564444444444444), ('gamma', 0.001), ('kernel', 'rbf')])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
