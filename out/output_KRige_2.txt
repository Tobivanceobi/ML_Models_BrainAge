no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.16259551, 0.13998993, 0.1390152 , 0.13907401, 0.13993971,
       0.13923685, 0.13915507, 0.14021993, 0.14065123, 0.1400044 ,
       0.13920951, 0.13940263, 0.13939063, 0.13921992, 0.14126126,
       0.13987398, 0.13985507, 0.14098271, 0.13983838, 0.13953455,
       0.13723906, 0.13884679, 0.13651705, 0.14857332, 0.14537628,
       0.14736652, 0.1441927 , 0.13766042, 0.13562489, 0.14100488,
       0.13177355, 0.13763611, 0.13345337, 0.13147036, 0.13019768,
       0.12985428, 0.12923137, 0.12917622, 0.13131237, 0.13031602,
       0.13074541, 0.13104995, 0.13009326, 0.13095085, 0.13156335,
       0.13011074, 0.13002547, 0.12984395, 0.12844928, 0.12911757,
       0.13130903, 0.12860481, 0.13019991, 0.12940518, 0.13054427,
       0.13024139, 0.12944396, 0.12871464, 0.13078205, 0.12871146,
       0.12932205, 0.1323278 , 0.12976011, 0.13057144, 0.1314791 ,
       0.12931895, 0.12922708, 0.12922001, 0.12902912, 0.12923384,
       0.12840231, 0.13244454, 0.13008364, 0.1318891 , 0.13058527,
       0.12876519, 0.1288933 , 0.12816389, 0.12914451, 0.13109938,
       0.12912798, 0.13214493, 0.12837132, 0.12937077, 0.12985071,
       0.12920324, 0.12991675, 0.12930258, 0.12963287, 0.12958646,
       0.13162176, 0.13329466, 0.13243087, 0.13328902, 0.13127685,
       0.13223799, 0.13156295, 0.13048108, 0.13199123, 0.13076297,
       0.13311728, 0.13015795, 0.13374408, 0.13101164, 0.13262614,
       0.13360532, 0.13535237, 0.13588174, 0.13186908, 0.13471413,
       0.13357274, 0.13425438, 0.13625622, 0.13515846, 0.13673703,
       0.13450019, 0.13379749, 0.13462631, 0.13523229, 0.13358339,
       0.13365809, 0.13189133, 0.13560303, 0.13294951, 0.13263496,
       0.13184921, 0.13227383, 0.13246282]), 'std_fit_time': array([1.13608058e-04, 4.61572718e-04, 5.37046127e-04, 3.49049215e-04,
       1.30032424e-03, 7.11087168e-04, 1.10653487e-03, 1.33446328e-03,
       2.62522133e-04, 4.16271875e-04, 4.43298685e-04, 5.00260246e-04,
       1.42948406e-03, 4.97437015e-04, 8.66109066e-05, 1.39422376e-03,
       1.12861467e-03, 6.06339973e-04, 8.92393753e-04, 2.77420436e-04,
       6.12418898e-04, 1.33621100e-03, 4.09469728e-03, 4.98976646e-03,
       3.61261674e-03, 7.41764916e-04, 4.52082070e-03, 4.14833810e-03,
       2.45886169e-03, 1.46946728e-03, 1.63865376e-03, 2.37128523e-03,
       3.52860039e-03, 2.22344380e-03, 5.48631918e-04, 1.11364986e-03,
       8.52058799e-04, 3.83359497e-04, 5.06482811e-04, 1.03192548e-03,
       1.06428314e-03, 1.58493121e-03, 1.74661479e-03, 2.34248053e-03,
       9.97933411e-04, 2.28582227e-03, 1.97439624e-03, 2.97510059e-03,
       2.02989285e-03, 1.30587915e-03, 4.28581431e-04, 1.35257383e-03,
       1.55940103e-03, 2.24449077e-03, 1.15203749e-03, 2.07174330e-03,
       1.59532255e-03, 1.55028803e-03, 1.39199089e-03, 1.36805488e-03,
       1.16442737e-03, 3.61266225e-04, 1.87031610e-03, 1.75280296e-03,
       1.28096298e-03, 1.41436601e-03, 1.54869604e-03, 1.58361254e-03,
       1.16300875e-03, 1.64934686e-03, 1.48360141e-03, 2.39131842e-03,
       1.62997284e-03, 1.71721555e-03, 1.99582227e-03, 2.11157024e-03,
       1.26713001e-03, 1.64746831e-03, 6.06148509e-04, 2.73988566e-03,
       1.53973816e-03, 8.29271526e-04, 1.42008505e-03, 4.22552898e-04,
       1.18552938e-03, 1.67274495e-03, 1.14003660e-03, 1.80979618e-03,
       1.38705124e-03, 2.08544247e-03, 2.57542371e-03, 8.87286849e-04,
       2.10289181e-04, 1.78863809e-03, 1.99042422e-03, 1.64950360e-03,
       1.83180956e-03, 1.60777160e-03, 1.39238124e-03, 7.06291298e-04,
       1.53717165e-03, 1.53321293e-03, 3.16685312e-03, 1.11116776e-03,
       1.92025219e-03, 1.82769236e-03, 1.56828622e-03, 1.77194181e-03,
       1.16617136e-03, 2.82725355e-03, 2.87620493e-03, 2.29311651e-03,
       2.67773613e-03, 1.28584375e-03, 2.51844989e-03, 4.18159412e-03,
       1.91901171e-03, 2.65004292e-03, 2.15499484e-03, 2.79547563e-03,
       1.04378498e-03, 3.00309587e-04, 2.18996505e-03, 1.03529778e-03,
       2.11329592e-03, 1.71418305e-03, 8.21208891e-04, 1.02449885e-03]), 'mean_score_time': array([0.08440113, 0.08193994, 0.08172433, 0.0816292 , 0.08186944,
       0.08172242, 0.08162109, 0.08227372, 0.08223097, 0.08183964,
       0.08189646, 0.08177789, 0.08170088, 0.08178655, 0.08225091,
       0.08198659, 0.08195186, 0.08214378, 0.08182446, 0.081858  ,
       0.08227928, 0.08207568, 0.08237569, 0.08393041, 0.08252931,
       0.08309507, 0.08244967, 0.08225163, 0.08238475, 0.08228906,
       0.08243871, 0.08264319, 0.08200328, 0.08318416, 0.08170271,
       0.08314196, 0.08232562, 0.0822049 , 0.08298469, 0.08247368,
       0.08271488, 0.08185299, 0.08313926, 0.08249124, 0.08289806,
       0.08200781, 0.08178576, 0.08192348, 0.08201853, 0.08185959,
       0.08212344, 0.08174014, 0.08179498, 0.08195742, 0.08171964,
       0.08173299, 0.08163913, 0.08151356, 0.08182573, 0.08138148,
       0.08162657, 0.08294376, 0.0815444 , 0.08235431, 0.08170557,
       0.08178727, 0.08146946, 0.08224511, 0.08162332, 0.08147446,
       0.08145118, 0.08192547, 0.08291849, 0.08170581, 0.08190838,
       0.08146938, 0.08167791, 0.08154448, 0.08170867, 0.08202004,
       0.08156117, 0.08473436, 0.08171519, 0.08157007, 0.08251476,
       0.08630363, 0.08277504, 0.08209117, 0.08266107, 0.08169317,
       0.0821712 , 0.08261132, 0.08345548, 0.0829037 , 0.0877707 ,
       0.08178027, 0.08408316, 0.08279339, 0.08707929, 0.08299692,
       0.08160408, 0.08296188, 0.08258049, 0.08279713, 0.08385984,
       0.08427731, 0.0840385 , 0.08599361, 0.08387566, 0.08656343,
       0.08493002, 0.08437181, 0.08689825, 0.08389934, 0.08775934,
       0.08278314, 0.08603414, 0.08712657, 0.08393606, 0.08435837,
       0.08499503, 0.08152739, 0.08669734, 0.08549563, 0.08291952,
       0.08175039, 0.0820659 , 0.08239245]), 'std_score_time': array([2.28181486e-04, 3.52348514e-04, 3.92364326e-04, 2.94669439e-04,
       3.84060947e-04, 2.22426461e-04, 2.96571012e-04, 6.78780193e-04,
       5.26980943e-04, 2.61000027e-04, 2.81418255e-04, 3.96852211e-04,
       4.13499130e-04, 2.16588929e-04, 2.47196290e-04, 1.58663380e-04,
       4.72230153e-04, 1.79252828e-04, 3.09478357e-04, 1.86478726e-04,
       1.17490344e-03, 8.83985024e-04, 3.20245195e-04, 4.92093842e-04,
       2.05287765e-04, 2.98742951e-04, 7.51067796e-04, 4.91036028e-04,
       3.44200763e-04, 6.52566251e-04, 9.47107615e-04, 8.56603290e-04,
       4.87869522e-04, 5.71480145e-04, 3.93718862e-04, 1.93595234e-04,
       2.41186944e-04, 3.84618279e-04, 5.10295189e-04, 8.17800271e-04,
       1.02655012e-03, 3.87005785e-04, 3.98954595e-04, 2.79911964e-04,
       7.32825501e-04, 1.73169191e-04, 1.28166391e-04, 5.63921313e-04,
       2.47907965e-04, 2.44293392e-04, 4.82899605e-04, 1.68472153e-04,
       2.62827910e-04, 2.22127169e-04, 5.59469741e-05, 3.35507100e-04,
       1.85651628e-04, 2.69651472e-04, 1.79747476e-04, 2.76588319e-04,
       1.69416752e-04, 5.74868358e-04, 3.03874183e-04, 4.37648069e-04,
       3.28131244e-04, 1.29712173e-04, 2.80931579e-04, 5.79198474e-04,
       1.48012819e-04, 2.41361443e-04, 2.38428195e-04, 3.49943485e-04,
       1.20146501e-03, 4.11776059e-04, 6.66317167e-04, 2.34285316e-04,
       3.63459147e-04, 2.38677308e-04, 4.25933173e-04, 2.89987045e-04,
       4.22374796e-04, 8.49796247e-04, 3.37846801e-04, 3.95549588e-04,
       1.09714761e-03, 4.54392473e-03, 1.38695004e-03, 7.33552258e-04,
       1.20832961e-03, 5.11131290e-04, 3.87583018e-04, 9.08911310e-04,
       1.08211345e-03, 8.44360945e-04, 4.47090329e-03, 3.97176746e-04,
       9.83021522e-04, 1.01155734e-03, 3.09324263e-03, 1.03414465e-03,
       3.19317717e-04, 8.31942272e-04, 6.91190561e-04, 8.76610990e-04,
       2.02040224e-03, 7.92158812e-04, 1.41149292e-03, 1.05505488e-03,
       3.02154323e-03, 2.77250555e-03, 2.56527999e-03, 2.54090920e-03,
       3.29636444e-03, 3.01666016e-04, 1.68329332e-03, 1.73723372e-03,
       2.66185157e-03, 4.26459120e-03, 1.68168411e-03, 1.92594151e-03,
       1.72174212e-03, 2.75635617e-04, 6.17902798e-04, 5.19793380e-04,
       1.57165272e-03, 2.49505015e-04, 2.39048946e-04, 2.52161285e-04]), 'param_alpha': masked_array(data=[0.20185838596674427, 0.009056738008876635,
                   0.5418346287170345, 0.22246657992099744,
                   0.00024889842006072297, 0.09306309746609896,
                   0.01934067881689512, 0.0020077069127146644,
                   3.045294886903818, 0.013749337447204156, 0.0001,
                   0.16295491593787498, 0.169682262596869,
                   0.0007140788940733849, 0.18667970101706732,
                   0.1860540553802639, 0.18200631307810003,
                   0.18501009349466457, 0.1819278904863809,
                   0.18484729199302488, 0.0482565531764928,
                   0.0037906596304341194, 7.582211225270246,
                   0.18414789539253154, 0.00010011511355694369,
                   0.3297632812061486, 0.10969709753704102,
                   0.18673430543563926, 0.00052021687797607,
                   0.28350557224460254, 0.859953234709134,
                   0.18490978703630126, 0.18023301594234076,
                   0.041314206111638635, 0.00099062445933281,
                   0.00017977902692758869, 0.18119581559860118,
                   0.1586540840055454, 0.151171697543668,
                   0.18083787952622316, 0.18290424840659125,
                   0.18469082873635165, 0.15463161847659804,
                   0.187341938861454, 0.18537361850466177,
                   0.1821464946951892, 0.18785151837908387,
                   0.18612483404163244, 0.18491191772934382,
                   0.17741107302598907, 0.20480018933297175,
                   1.1834933429300518, 0.18909621489938352,
                   0.1774422190780569, 0.18465117723032573,
                   0.20770659916194031, 0.19331504878020003,
                   0.16858291631700525, 0.19283074090552754,
                   0.1823559413009665, 0.18103764165185907,
                   0.18283216192599103, 0.12569896298799357,
                   0.16555791322919824, 0.19049504542539683,
                   0.18447709115740168, 0.15163517867313756,
                   0.19074907218204423, 0.18260596155087594,
                   0.18939771664541405, 0.018259662844154066,
                   0.18312439171853723, 0.1863304840103329,
                   0.18972926815382868, 0.17877962938143266,
                   0.1825005104114388, 0.1905912760287772,
                   0.21113529514758042, 0.1943173227551675,
                   0.17929168858588596, 0.1827497864692117,
                   0.1881427230118549, 0.18231843540266143,
                   0.14892248749316572, 0.17237611025445468,
                   0.1827063103254422, 0.15083200151969656,
                   0.16036829762249716, 0.19610196028937715,
                   0.18472519386085884, 0.19227548288871887,
                   0.196304059131329, 0.17908282590998748,
                   0.16339529325209798, 0.1936563000418747,
                   0.1864058035338406, 0.17055186530011832,
                   0.18491308132203413, 0.16707026568551622,
                   0.18148114801566978, 0.1574943556047292,
                   0.18601716197482532, 0.18462099451033565,
                   0.1895674768847408, 0.19632244121935263,
                   0.22828883135310526, 0.1852520484238338,
                   0.1761862342393307, 0.1787813352087495,
                   0.18417793117484482, 0.1924867129351678,
                   0.18065115793232078, 0.16265668162714758,
                   0.21018416122483413, 0.19090473513637926,
                   0.18049163894269502, 0.1818705078991953,
                   0.18143547100095814, 0.17910473348951075,
                   0.15780887477827385, 0.19209161735605376,
                   0.2370169865872227, 0.1845558712605886,
                   0.19087426661218432, 0.18338312640226576,
                   0.1747859824631631, 0.17973722749049037,
                   0.17918866169729755],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[5, 6, 2, 4, 4, 6, 4, 6, 4, 3, 2, 2, 6, 2, 2, 2, 6, 2,
                   6, 2, 2, 5, 5, 6, 6, 6, 2, 6, 6, 2, 6, 4, 6, 6, 4, 5,
                   6, 2, 6, 6, 4, 4, 3, 6, 6, 4, 3, 4, 3, 3, 2, 5, 4, 4,
                   4, 6, 3, 3, 3, 4, 4, 5, 4, 2, 4, 6, 4, 3, 4, 3, 3, 4,
                   3, 5, 5, 5, 3, 6, 3, 4, 5, 3, 5, 2, 3, 3, 6, 4, 4, 5,
                   4, 5, 4, 5, 6, 3, 5, 3, 5, 6, 2, 4, 5, 4, 6, 3, 4, 4,
                   4, 5, 3, 6, 3, 5, 5, 4, 3, 3, 6, 4, 2, 5, 3, 3, 5, 3,
                   3, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.20185838596674427), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.009056738008876635), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.5418346287170345), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.22246657992099744), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00024889842006072297), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09306309746609896), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.01934067881689512), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0020077069127146644), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.045294886903818), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.013749337447204156), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16295491593787498), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.169682262596869), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0007140788940733849), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18667970101706732), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1860540553802639), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18200631307810003), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18501009349466457), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1819278904863809), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18484729199302488), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0482565531764928), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0037906596304341194), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 7.582211225270246), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18414789539253154), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010011511355694369), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.3297632812061486), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10969709753704102), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18673430543563926), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00052021687797607), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.28350557224460254), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.859953234709134), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18490978703630126), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18023301594234076), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041314206111638635), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00099062445933281), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00017977902692758869), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18119581559860118), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1586540840055454), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.151171697543668), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18083787952622316), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18290424840659125), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18469082873635165), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.15463161847659804), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.187341938861454), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18537361850466177), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1821464946951892), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18785151837908387), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18612483404163244), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18491191772934382), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17741107302598907), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.20480018933297175), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.1834933429300518), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18909621489938352), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1774422190780569), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18465117723032573), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.20770659916194031), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19331504878020003), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16858291631700525), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19283074090552754), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1823559413009665), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18103764165185907), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18283216192599103), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12569896298799357), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16555791322919824), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19049504542539683), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18447709115740168), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.15163517867313756), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19074907218204423), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18260596155087594), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18939771664541405), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.018259662844154066), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18312439171853723), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1863304840103329), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18972926815382868), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17877962938143266), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1825005104114388), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1905912760287772), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.21113529514758042), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1943173227551675), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17929168858588596), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1827497864692117), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1881427230118549), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18231843540266143), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.14892248749316572), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17237611025445468), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1827063103254422), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.15083200151969656), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16036829762249716), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19610196028937715), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18472519386085884), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19227548288871887), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.196304059131329), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17908282590998748), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16339529325209798), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1936563000418747), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1864058035338406), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17055186530011832), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18491308132203413), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16707026568551622), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18148114801566978), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1574943556047292), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18601716197482532), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18462099451033565), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1895674768847408), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19632244121935263), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.22828883135310526), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1852520484238338), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1761862342393307), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1787813352087495), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18417793117484482), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1924867129351678), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18065115793232078), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16265668162714758), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.21018416122483413), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19090473513637926), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18049163894269502), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1818705078991953), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18143547100095814), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17910473348951075), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.15780887477827385), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19209161735605376), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2370169865872227), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1845558712605886), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.19087426661218432), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18338312640226576), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1747859824631631), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17973722749049037), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17918866169729755), ('degree', 3), ('kernel', 'rbf')])], 'split0_test_score': array([-2.37611968, -2.42848265, -2.41726006, -2.37696828, -2.43907864,
       -2.38545489, -2.41835067, -2.43685977, -2.68657792, -2.42355712,
       -2.43926902, -2.37606668, -2.37586886, -2.43848643, -2.37569623,
       -2.3756798 , -2.37564833, -2.37565257, -2.37564829, -2.37565109,
       -2.40081421, -2.43466516, -2.94474253, -2.37565019, -2.43926887,
       -2.38625255, -2.38207533, -2.37569766, -2.43873276, -2.38070794,
       -2.46369263, -2.37565118, -2.37564785, -2.40392101, -2.43813621,
       -2.43916696, -2.37564799, -2.37627408, -2.37692348, -2.3756479 ,
       -2.37564894, -2.37565088, -2.37661742, -2.37571371, -2.37566203,
       -2.37564841, -2.37572722, -2.37568165, -2.37565119, -2.37566619,
       -2.37620701, -2.50684011, -2.37576047, -2.37566542, -2.37565083,
       -2.37629486, -2.37587558, -2.3758998 , -2.37586218, -2.37564854,
       -2.37564795, -2.37564888, -2.37960064, -2.37598771, -2.37579823,
       -2.3756506 , -2.3768819 , -2.37580513, -2.37564871, -2.37576857,
       -2.41932447, -2.37564913, -2.37568705, -2.37577751, -2.37564818,
       -2.37564863, -2.37580084, -2.37640048, -2.37590346, -2.37564799,
       -2.37564882, -2.37573497, -2.37564851, -2.37712793, -2.37579531,
       -2.37564878, -2.37695408, -2.37614828, -2.37595362, -2.37565093,
       -2.37584687, -2.37595934, -2.37564806, -2.3760531 , -2.37588505,
       -2.37568902, -2.37584477, -2.37565119, -2.37594324, -2.37564808,
       -2.37637172, -2.37567883, -2.37565079, -2.37577315, -2.37595986,
       -2.37729042, -2.37565886, -2.37569661, -2.37564818, -2.37565022,
       -2.37585269, -2.37564787, -2.37607593, -2.37637097, -2.37580936,
       -2.37564786, -2.37564826, -2.37564807, -2.37564805, -2.37634513,
       -2.37584182, -2.37777961, -2.3756507 , -2.37580853, -2.37564936,
       -2.37573217, -2.37564789, -2.37564802]), 'split1_test_score': array([-2.46244167, -2.49298266, -2.49049515, -2.46303131, -2.49832985,
       -2.46752666, -2.48768557, -2.49719655, -2.70472984, -2.49042343,
       -2.49842663, -2.46263131, -2.46247598, -2.49802833, -2.46224047,
       -2.46223221, -2.46221591, -2.46221843, -2.46221662, -2.46221628,
       -2.47744   , -2.49606594, -2.93778728, -2.46221195, -2.49842656,
       -2.46992468, -2.46553754, -2.46224119, -2.49815383, -2.46674218,
       -2.52329925, -2.4622171 , -2.46224224, -2.47950257, -2.49784969,
       -2.49837476, -2.46222323, -2.462735  , -2.46301281, -2.46222921,
       -2.46220785, -2.46221421, -2.46288348, -2.46224921, -2.46222322,
       -2.46221465, -2.46225594, -2.46223314, -2.46221713, -2.46230356,
       -2.46248095, -2.5564554 , -2.46227239, -2.46230288, -2.4622138 ,
       -2.46251989, -2.46232819, -2.46250103, -2.46232178, -2.46221277,
       -2.46222492, -2.46220849, -2.46419156, -2.46257063, -2.46229088,
       -2.46221316, -2.4629954 , -2.46229424, -2.46221052, -2.46227637,
       -2.48818227, -2.46220818, -2.46223586, -2.46228075, -2.46227371,
       -2.46221147, -2.46229215, -2.46258768, -2.46234146, -2.4622626 ,
       -2.46220923, -2.46225979, -2.4622131 , -2.46309766, -2.46241514,
       -2.46220962, -2.46302558, -2.46269232, -2.46236512, -2.46221467,
       -2.46231443, -2.46236781, -2.46226713, -2.462621  , -2.46233271,
       -2.46223685, -2.46245625, -2.46221715, -2.46253571, -2.46222065,
       -2.4627776 , -2.46223172, -2.46221369, -2.46227862, -2.46236805,
       -2.46330401, -2.46222162, -2.46233045, -2.46227368, -2.46221206,
       -2.46231722, -2.46223323, -2.46263831, -2.46256062, -2.46229629,
       -2.46223667, -2.46221714, -2.46222106, -2.46226665, -2.46276603,
       -2.46231199, -2.46370717, -2.46221345, -2.46229589, -2.46220913,
       -2.46236139, -2.46225295, -2.46226483]), 'split2_test_score': array([-2.31117822, -2.34094326, -2.33448201, -2.311857  , -2.34673899,
       -2.31710821, -2.33558127, -2.34552001, -2.56289306, -2.33823158,
       -2.34684329, -2.31139535, -2.31117098, -2.34641425, -2.31093935,
       -2.31093477, -2.31090709, -2.31092731, -2.31090658, -2.31092616,
       -2.32557417, -2.34430834, -2.79926196, -2.31092131, -2.34684321,
       -2.31673523, -2.31512147, -2.31093975, -2.34654938, -2.31444987,
       -2.37004904, -2.3109266 , -2.31089604, -2.32743444, -2.346222  ,
       -2.34678738, -2.31090195, -2.31154621, -2.31182317, -2.31089973,
       -2.31091293, -2.31092507, -2.31169275, -2.31094428, -2.31092988,
       -2.31090799, -2.31094814, -2.31093529, -2.31092662, -2.31092982,
       -2.31125361, -2.40462545, -2.31095778, -2.31092888, -2.31092479,
       -2.31132904, -2.3109927 , -2.31120671, -2.31098851, -2.31090934,
       -2.31090097, -2.31091246, -2.31359685, -2.31130689, -2.31096897,
       -2.31092358, -2.31180546, -2.31097105, -2.31091097, -2.31096016,
       -2.33606598, -2.31091439, -2.31093678, -2.3109628 , -2.31088889,
       -2.31091028, -2.31096976, -2.31141918, -2.3110015 , -2.31089045,
       -2.31091192, -2.31095037, -2.3109091 , -2.31191017, -2.31108496,
       -2.31091163, -2.31183619, -2.31148537, -2.31103357, -2.31092531,
       -2.31098377, -2.31103858, -2.31088923, -2.31138024, -2.31099567,
       -2.31093734, -2.31114298, -2.31092663, -2.31125645, -2.31090374,
       -2.31158791, -2.3109345 , -2.31092458, -2.31096151, -2.31103904,
       -2.31208484, -2.31092902, -2.3109669 , -2.31088884, -2.31092152,
       -2.31098557, -2.31089858, -2.31140562, -2.31139405, -2.31097232,
       -2.31089761, -2.31090622, -2.31090346, -2.31088936, -2.31157655,
       -2.31098222, -2.31242898, -2.31092413, -2.31097207, -2.31091612,
       -2.3110098 , -2.31089307, -2.31088984]), 'mean_test_score': array([-2.38324653, -2.42080285, -2.41407908, -2.3839522 , -2.42804916,
       -2.39002992, -2.4138725 , -2.42652545, -2.65140027, -2.41740404,
       -2.42817965, -2.38336445, -2.38317194, -2.427643  , -2.38295868,
       -2.38294893, -2.38292378, -2.38293277, -2.38292383, -2.38293118,
       -2.40127613, -2.42501314, -2.89393059, -2.38292782, -2.42817955,
       -2.39097082, -2.38757811, -2.38295954, -2.42781199, -2.3873    ,
       -2.45234697, -2.38293163, -2.38292871, -2.40361934, -2.42740263,
       -2.4281097 , -2.38292439, -2.38351843, -2.38391982, -2.38292562,
       -2.38292324, -2.38293005, -2.38373122, -2.38296907, -2.38293838,
       -2.38292368, -2.3829771 , -2.38295003, -2.38293164, -2.38296652,
       -2.38331386, -2.48930699, -2.38299688, -2.38296573, -2.38292981,
       -2.38338126, -2.38306549, -2.38320251, -2.38305749, -2.38292355,
       -2.38292461, -2.38292328, -2.38579635, -2.38328841, -2.38301936,
       -2.38292911, -2.38389425, -2.38302347, -2.3829234 , -2.3830017 ,
       -2.41452424, -2.3829239 , -2.38295323, -2.38300702, -2.38293693,
       -2.38292346, -2.38302091, -2.38346911, -2.38308214, -2.38293368,
       -2.38292332, -2.38298171, -2.38292357, -2.38404525, -2.38309847,
       -2.38292334, -2.38393862, -2.38344199, -2.38311744, -2.3829303 ,
       -2.38304836, -2.38312191, -2.3829348 , -2.38335145, -2.38307114,
       -2.3829544 , -2.383148  , -2.38293165, -2.38324514, -2.38292416,
       -2.38357908, -2.38294835, -2.38292969, -2.38300442, -2.38312231,
       -2.38422642, -2.3829365 , -2.38299799, -2.3829369 , -2.38292793,
       -2.38305183, -2.38292656, -2.38337329, -2.38344188, -2.38302599,
       -2.38292738, -2.38292387, -2.3829242 , -2.38293469, -2.38356257,
       -2.38304534, -2.38463858, -2.38292943, -2.3830255 , -2.38292487,
       -2.38303445, -2.3829313 , -2.38293423]), 'std_test_score': array([0.06195833, 0.06230693, 0.0637318 , 0.06191391, 0.06237619,
       0.06149323, 0.062177  , 0.06235138, 0.06302126, 0.06228421,
       0.06237846, 0.06195709, 0.06198549, 0.06236929, 0.06198153,
       0.06198042, 0.06198543, 0.0619785 , 0.06198592, 0.06197808,
       0.06199982, 0.06232957, 0.06700103, 0.06197815, 0.06237846,
       0.06262826, 0.06153026, 0.06198162, 0.06237214, 0.06234756,
       0.0630764 , 0.06197826, 0.06200095, 0.06208192, 0.0623653 ,
       0.06237724, 0.06199055, 0.06193477, 0.06192085, 0.06199396,
       0.0619797 , 0.06197764, 0.06192799, 0.06198266, 0.06197918,
       0.06198453, 0.06198351, 0.06198055, 0.06197827, 0.0620133 ,
       0.06194249, 0.06321203, 0.06198549, 0.0620134 , 0.06197757,
       0.06192647, 0.06199128, 0.06198113, 0.06199069, 0.0619832 ,
       0.06199165, 0.06198016, 0.06163593, 0.06196857, 0.06198757,
       0.06197777, 0.06192188, 0.06198793, 0.06198161, 0.06198595,
       0.06219391, 0.06197927, 0.06198091, 0.06198645, 0.06201712,
       0.06198228, 0.06198771, 0.06191636, 0.06199245, 0.06201179,
       0.06198069, 0.06198399, 0.06198344, 0.06191554, 0.06199574,
       0.06198096, 0.06192009, 0.06194505, 0.06198817, 0.06197773,
       0.06198999, 0.06198715, 0.06201419, 0.06195908, 0.06199169,
       0.06198105, 0.06198887, 0.06197827, 0.06197495, 0.06198875,
       0.06193298, 0.06198035, 0.06197761, 0.06198621, 0.06198706,
       0.06192948, 0.06197895, 0.06200921, 0.06201713, 0.06197812,
       0.06199026, 0.06199612, 0.06195574, 0.0619157 , 0.06198815,
       0.06199796, 0.06198629, 0.06198904, 0.06201394, 0.06193347,
       0.06198975, 0.06194921, 0.06197768, 0.06198811, 0.06197899,
       0.0620044 , 0.06200666, 0.06201297]), 'rank_test_score': array([ 83, 115, 112, 100, 121, 107, 111, 117, 127, 114, 124,  87,  80,
       119,  50,  46,  10,  36,  11,  31, 109, 116, 128,  22, 123, 108,
       106,  51, 120, 105, 125,  33,  24, 110, 118, 122,  16,  93,  98,
        19,   1,  29,  96,  54,  44,   9,  55,  47,  34,  53,  85, 126,
        57,  52,  28,  89,  72,  81,  71,   7,  17,   2, 104,  84,  62,
        25,  97,  64,   5,  59, 113,  13,  48,  61,  43,   6,  63,  92,
        74,  37,   3,  56,   8, 101,  75,   4,  99,  91,  76,  30,  69,
        77,  40,  86,  73,  49,  79,  35,  82,  14,  95,  45,  27,  60,
        78, 102,  41,  58,  42,  23,  70,  20,  88,  90,  66,  21,  12,
        15,  39,  94,  68, 103,  26,  65,  18,  67,  32,  38], dtype=int32)}
-2.382923238927128
OrderedDict([('alpha', 0.18290424840659125), ('degree', 4), ('kernel', 'rbf')])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([1.15830191, 1.15726805, 1.15811523, 1.15588347, 1.20367893,
       1.16246573, 1.15736039, 1.15702367, 1.15752808, 1.16662129,
       1.16877659, 1.16192341, 1.16796239, 1.16459672, 1.17127705,
       1.16543039, 1.16709375, 1.16864085, 1.16114767, 1.18136525,
       1.18184161, 1.16423567, 1.17097394, 1.16019432, 1.17627549,
       1.13862062, 1.15758133, 1.15715559, 1.15743025, 1.15753142,
       1.15608613, 1.16226753, 1.15803178, 1.15546767, 1.13531415,
       1.15489403, 1.15559459, 1.15417862, 1.15270273, 1.15570768,
       1.17969791, 1.16977008, 1.15975841, 1.15782706, 1.15930359,
       1.16597486, 1.12847145, 1.15815941, 1.15859222, 1.15805817,
       1.15943336, 1.13003381, 1.15809194, 1.15737319, 1.15887292,
       1.16718769, 1.16089678, 1.15515089, 1.15802964, 1.15604281,
       1.1578544 , 1.12824575, 1.1276598 , 1.15759309, 1.15662599,
       1.15826392, 1.14180994, 1.16037718, 1.15741309, 1.15423799,
       1.15550017, 1.13058543, 1.15694499, 1.15665213, 1.15490397,
       1.15709631, 1.15986562, 1.15633416, 1.15753293, 1.15543755,
       1.15630873, 1.15693498, 1.12536526, 1.15790145, 1.15746117,
       1.15672366, 1.15534655, 1.1418314 , 1.16149195, 1.15903298,
       1.15518411, 1.15768321, 1.12765106, 1.15800365, 1.15837375,
       1.15648047, 1.15816665, 1.15983319, 1.15613643, 1.15749168,
       1.1592555 , 1.15839911, 1.15997561, 1.12697117, 1.15502103,
       1.15650288, 1.15792688, 1.12788622, 1.12798405, 1.16719596,
       1.15849686, 1.15749153, 1.13120619, 1.15732876, 1.15613087,
       1.15702065, 1.15597486, 1.15568908, 1.16324313, 1.15428019,
       1.15603129, 1.15508064, 1.15733695, 1.12890824, 1.16105787,
       1.15471252, 1.15768425, 1.15721083]), 'std_fit_time': array([0.00616307, 0.00400261, 0.00485277, 0.004548  , 0.0113582 ,
       0.00495289, 0.00466612, 0.00373557, 0.00494968, 0.00413683,
       0.00379856, 0.0129567 , 0.00553592, 0.00621922, 0.01226063,
       0.00251709, 0.0070538 , 0.01059021, 0.00143873, 0.02596251,
       0.02857817, 0.00419466, 0.00857902, 0.00366051, 0.01593988,
       0.00771971, 0.00804388, 0.00336886, 0.01084954, 0.0065889 ,
       0.01575242, 0.00423159, 0.00413948, 0.00368726, 0.00614452,
       0.00576295, 0.00271417, 0.00696789, 0.00479697, 0.00678281,
       0.04054316, 0.01187881, 0.00453866, 0.00616375, 0.00415553,
       0.01154428, 0.00201541, 0.00721627, 0.00406594, 0.0045443 ,
       0.00468609, 0.00904309, 0.00496633, 0.00500117, 0.00493708,
       0.0110424 , 0.00554318, 0.0039955 , 0.00466387, 0.00486287,
       0.00526748, 0.00765507, 0.00857641, 0.00437649, 0.00538764,
       0.00423143, 0.01462293, 0.00480788, 0.00426764, 0.00383379,
       0.00449547, 0.00249485, 0.00419646, 0.00577997, 0.00531251,
       0.0050171 , 0.00457337, 0.00431441, 0.00450251, 0.00512175,
       0.004691  , 0.00409308, 0.0091783 , 0.00422106, 0.00544734,
       0.00443262, 0.00452193, 0.01925233, 0.00648481, 0.00511979,
       0.00497871, 0.00490475, 0.00775586, 0.00444305, 0.00440589,
       0.00526795, 0.00498175, 0.00445762, 0.00454904, 0.00449434,
       0.00457027, 0.00566229, 0.00454937, 0.0025434 , 0.00478081,
       0.00454504, 0.00449542, 0.00104711, 0.00855069, 0.01118026,
       0.00635505, 0.00462313, 0.00176219, 0.00401323, 0.00533049,
       0.00507257, 0.00492554, 0.00480707, 0.00627238, 0.00406513,
       0.00484736, 0.00413969, 0.00393986, 0.00096996, 0.01131658,
       0.00425451, 0.00497223, 0.00476321]), 'mean_score_time': array([0.98807724, 0.98997275, 0.98832655, 0.98914377, 1.01617583,
       0.99071089, 0.98899555, 0.99077559, 0.98860995, 0.98876023,
       0.99173387, 0.98330704, 0.99245914, 0.99312989, 0.98994788,
       0.98601818, 0.99335035, 0.98921029, 0.98623864, 0.98693808,
       0.98576752, 0.99287685, 0.99122151, 0.99296705, 0.9796265 ,
       0.97775006, 0.98789795, 0.99055847, 0.98744146, 0.98689731,
       0.98524316, 0.99125274, 0.98988255, 0.98953883, 0.97815124,
       0.98763601, 0.98955655, 0.98845116, 0.98464108, 0.98525556,
       0.98123129, 0.9832054 , 0.98850242, 0.98800246, 0.98858921,
       0.98327446, 0.97651927, 0.98882302, 0.98906295, 0.98925853,
       0.98835921, 0.97559706, 0.98893905, 0.98895192, 0.98801359,
       0.98279619, 0.98899055, 0.98946921, 0.98880696, 0.9895068 ,
       0.98871978, 0.97669172, 0.97657744, 0.99176407, 0.98963539,
       0.99103864, 0.98126562, 1.00091084, 0.9900891 , 0.99036447,
       0.98926441, 0.97761281, 0.98937726, 0.98901137, 0.98932044,
       0.98905985, 0.99554006, 0.98907685, 0.98980792, 0.98936995,
       0.98930462, 0.98813367, 0.97562774, 0.98966479, 0.98784184,
       0.98868688, 0.9882346 , 0.98049712, 0.99398327, 0.98933411,
       0.99000017, 0.98873846, 0.97630183, 0.98872614, 0.99019448,
       0.98954463, 0.98928515, 1.00522796, 0.98813844, 0.98963801,
       0.98962156, 0.9894611 , 0.98999747, 0.97780124, 0.98954638,
       0.98885703, 0.98968164, 0.97753477, 0.97785473, 0.98559952,
       0.98898093, 0.99008369, 0.97765843, 0.99094709, 0.9899528 ,
       0.99008783, 0.99030558, 0.98995217, 0.98575409, 0.99094892,
       0.99089511, 0.99130281, 0.99009275, 0.97689136, 0.97584144,
       0.9902939 , 0.98853461, 0.9881343 ]), 'std_score_time': array([0.00413212, 0.003824  , 0.00458038, 0.0044108 , 0.00276301,
       0.00379105, 0.00390489, 0.00321218, 0.00430339, 0.00319442,
       0.00363469, 0.00504125, 0.00386744, 0.00279933, 0.00387753,
       0.00507765, 0.00428693, 0.00540746, 0.00447392, 0.0016873 ,
       0.00064604, 0.00422877, 0.00326624, 0.00369931, 0.00409832,
       0.00240368, 0.00484533, 0.00368548, 0.00291234, 0.00351051,
       0.00337053, 0.00345305, 0.00401695, 0.00305279, 0.00330494,
       0.00477505, 0.00353535, 0.00501203, 0.00540337, 0.00585955,
       0.00614706, 0.0069165 , 0.00462735, 0.00346595, 0.00437665,
       0.00578668, 0.00328157, 0.00338958, 0.00307231, 0.00334711,
       0.00436877, 0.00654501, 0.00404364, 0.0033079 , 0.00372021,
       0.0050164 , 0.0040477 , 0.00199798, 0.00513261, 0.00221987,
       0.00462146, 0.00405824, 0.00415759, 0.00304684, 0.00283599,
       0.00381764, 0.00916685, 0.01733072, 0.0021089 , 0.00333161,
       0.00317094, 0.00345374, 0.00334434, 0.0037054 , 0.00487335,
       0.00516763, 0.01157652, 0.00338627, 0.00315739, 0.00339557,
       0.00466245, 0.00447333, 0.00462409, 0.0039698 , 0.00263315,
       0.00364977, 0.00419852, 0.00826973, 0.01487488, 0.0031381 ,
       0.00304101, 0.00468561, 0.00610347, 0.00414979, 0.00325347,
       0.00384645, 0.00420681, 0.02285949, 0.0031327 , 0.00394342,
       0.00344669, 0.00386027, 0.00340121, 0.00362359, 0.00418515,
       0.0041722 , 0.00401805, 0.00254472, 0.00445219, 0.00726918,
       0.00445044, 0.003897  , 0.00328674, 0.00305646, 0.00273948,
       0.00421857, 0.00392021, 0.00351017, 0.0074429 , 0.00418755,
       0.00375707, 0.00259152, 0.00332918, 0.00291559, 0.00523365,
       0.00285988, 0.00386528, 0.00425838]), 'param_alpha': masked_array(data=[0.23694444234243514, 0.40363083721608917,
                   0.09294315197908312, 0.6110111696463744,
                   0.03244145516505185, 0.0001273684655309429,
                   1.0766091793074388, 0.00010918920680400101,
                   0.002130857013895778, 0.002944512570584048, 0.0001,
                   0.0007032343543066685, 10.0, 0.011006725166674476,
                   0.05690492133987333, 0.0003392559398393356,
                   0.06164520365907854, 0.07145156738016352,
                   0.00733727270104548, 0.004964971233514024,
                   0.12066987125452362, 0.0231175411211601,
                   0.0009535283175047179, 0.06823399359188924,
                   0.017139230812941483, 0.00022865314803753126,
                   0.0014342730816673383, 0.04165701949305615,
                   0.06866612838279493, 0.1273465411479787,
                   0.011854127840815479, 0.06718108330689242,
                   0.06747690816850425, 3.3931045529709576,
                   0.06973121604707634, 0.00016672601009618023,
                   0.040202308049435864, 0.07148460944448276,
                   0.07834225277831755, 0.06981267306993834,
                   0.051104226634784276, 0.0018171978298912777,
                   0.0004856914605719231, 0.06426978447118663,
                   0.0021716441713350416, 0.053485347713488056,
                   0.0708767489627973, 0.06632091354452987,
                   0.00048570917903947673, 0.718671595603143,
                   0.0537771718966639, 0.07654057308991345,
                   0.06962277674189951, 0.0816420815877149,
                   0.06392135777845431, 0.06492820708299821,
                   0.06444441003649176, 0.06486657397057333,
                   0.06134414008607796, 0.054037775595263925,
                   0.0704584360815753, 0.06757965859242508,
                   0.05654140186132213, 0.041443430423651735,
                   0.0803856440984901, 0.07469842817763674,
                   0.0912387626672602, 0.07532893188111743,
                   0.06977162837689335, 0.06755248349773058,
                   0.045444779324298266, 0.0677159282175282,
                   0.07243384820168595, 0.0590162462056512,
                   0.08515755015045011, 0.0781768300651514,
                   0.05359976240155276, 0.06767812297738383,
                   0.06046121171323227, 0.06411270939021409,
                   0.04702355869593251, 0.053478124231738686,
                   0.06281988403067752, 0.06793465666745689,
                   0.06933522637611654, 0.07165952255067168,
                   0.04446258054652334, 0.06793743957463422,
                   0.06858201236172153, 0.06730416193092897,
                   0.05551357472203324, 0.06428849290337806,
                   0.06676301376193393, 0.07613575650716536,
                   0.08321477698347739, 0.0879077145838283,
                   0.02011325108344431, 0.07589554698831456,
                   0.05172269656064247, 0.09994868020927564,
                   0.06404384858681417, 0.06566567488323156,
                   0.0725066803119746, 0.06951922931034764,
                   0.05254283954329538, 0.0715679368595275,
                   0.00011389872995202402, 0.05992894524140198,
                   0.07369000252576006, 0.057878303219061025,
                   0.07595800023399743, 0.0646392064265906,
                   0.06526620681397226, 0.07746775082000965,
                   0.05897274536290556, 0.0640331302658132,
                   0.04274977875472978, 0.0659577391293954,
                   0.06754777977503537, 0.059842229713113974,
                   0.06500057593638073, 0.06669936152284107,
                   0.057191796357005026, 0.059169926155457485,
                   0.0733917748940628, 0.06199777559422401,
                   5.011104432102846, 0.0643501943456716],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 3, 2, 6, 2, 3, 5, 6, 5, 3, 4, 2, 2, 6, 6, 6, 2, 6,
                   2, 6, 6, 6, 6, 2, 2, 2, 2, 6, 6, 2, 5, 2, 6, 6, 4, 6,
                   2, 4, 4, 2, 4, 5, 4, 5, 3, 3, 5, 4, 2, 4, 3, 3, 4, 5,
                   4, 2, 5, 3, 3, 5, 5, 5, 3, 4, 6, 5, 4, 5, 6, 5, 2, 5,
                   2, 4, 3, 5, 2, 4, 6, 3, 5, 2, 2, 3, 6, 5, 6, 3, 5, 6,
                   6, 5, 5, 3, 3, 5, 5, 5, 3, 6, 3, 5, 2, 6, 3, 4, 2, 3,
                   6, 5, 4, 3, 3, 3, 6, 5, 4, 6, 4, 6, 4, 2, 3, 4, 5, 6,
                   4, 5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.23694444234243514), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.40363083721608917), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09294315197908312), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.6110111696463744), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03244145516505185), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001273684655309429), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.0766091793074388), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010918920680400101), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.002130857013895778), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.002944512570584048), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0007032343543066685), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 10.0), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.011006725166674476), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05690492133987333), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0003392559398393356), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06164520365907854), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07145156738016352), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00733727270104548), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.004964971233514024), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12066987125452362), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0231175411211601), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0009535283175047179), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06823399359188924), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.017139230812941483), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00022865314803753126), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0014342730816673383), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04165701949305615), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06866612838279493), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1273465411479787), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.011854127840815479), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06718108330689242), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06747690816850425), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.3931045529709576), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06973121604707634), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00016672601009618023), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.040202308049435864), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07148460944448276), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07834225277831755), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06981267306993834), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.051104226634784276), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0018171978298912777), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0004856914605719231), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06426978447118663), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0021716441713350416), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053485347713488056), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0708767489627973), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06632091354452987), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00048570917903947673), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.718671595603143), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0537771718966639), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07654057308991345), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06962277674189951), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0816420815877149), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06392135777845431), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06492820708299821), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06444441003649176), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06486657397057333), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06134414008607796), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054037775595263925), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0704584360815753), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06757965859242508), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05654140186132213), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041443430423651735), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0803856440984901), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07469842817763674), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0912387626672602), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07532893188111743), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06977162837689335), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06755248349773058), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.045444779324298266), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0677159282175282), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07243384820168595), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0590162462056512), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08515755015045011), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0781768300651514), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05359976240155276), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06767812297738383), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06046121171323227), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06411270939021409), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04702355869593251), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053478124231738686), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06281988403067752), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06793465666745689), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06933522637611654), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07165952255067168), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04446258054652334), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06793743957463422), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06858201236172153), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06730416193092897), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05551357472203324), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06428849290337806), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06676301376193393), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07613575650716536), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08321477698347739), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0879077145838283), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02011325108344431), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07589554698831456), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05172269656064247), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09994868020927564), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06404384858681417), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06566567488323156), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0725066803119746), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06951922931034764), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05254283954329538), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0715679368595275), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00011389872995202402), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05992894524140198), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07369000252576006), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.057878303219061025), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07595800023399743), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0646392064265906), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06526620681397226), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07746775082000965), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05897274536290556), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0640331302658132), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04274977875472978), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0659577391293954), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06754777977503537), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.059842229713113974), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06500057593638073), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06669936152284107), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.057191796357005026), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.059169926155457485), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0733917748940628), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06199777559422401), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.011104432102846), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0643501943456716), ('degree', 5), ('kernel', 'rbf')])], 'split0_test_score': array([-2.2501074 , -2.27847962, -2.23083535, -2.31231687, -2.22815191,
       -2.23424834, -2.37764337, -2.23425361, -2.23367515, -2.23344626,
       -2.23425627, -2.23408218, -2.82155343, -2.23145698, -2.227721  ,
       -2.23418707, -2.22800097, -2.22871695, -2.2322969 , -2.23288731,
       -2.23401342, -2.22932023, -2.23401032, -2.22844157, -2.23021029,
       -2.23421903, -2.23387289, -2.22739722, -2.22847848, -2.23483766,
       -2.23127889, -2.22835865, -2.22837793, -2.5686391 , -2.22856956,
       -2.23423695, -2.22741763, -2.22871978, -2.22937021, -2.22857653,
       -2.22750918, -2.23376399, -2.23414482, -2.22816979, -2.23366363,
       -2.22759469, -2.22866766, -2.22830268, -2.23414481, -2.32830061,
       -2.22760531, -2.22918935, -2.22856028, -2.22970145, -2.2281473 ,
       -2.22821236, -2.22818107, -2.22820837, -2.2279817 , -2.22761482,
       -2.22863182, -2.22838571, -2.22770738, -2.22740013, -2.22957533,
       -2.22900445, -2.23066443, -2.22906773, -2.22857302, -2.2283834 ,
       -2.22735036, -2.22839734, -2.22880126, -2.22783328, -2.23005429,
       -2.2293536 , -2.22759885, -2.22839412, -2.22792527, -2.22815965,
       -2.22738097, -2.22759443, -2.22807636, -2.22841601, -2.22853568,
       -2.22873479, -2.22736164, -2.22841625, -2.22847129, -2.22836667,
       -2.22766911, -2.228171  , -2.22833143, -2.22914872, -2.22985931,
       -2.23033027, -2.22974801, -2.22912461, -2.22753119, -2.23153733,
       -2.22815521, -2.22826014, -2.22880751, -2.22855142, -2.2275606 ,
       -2.22872693, -2.23425224, -2.22789134, -2.22890923, -2.22776114,
       -2.22913088, -2.22819367, -2.22823424, -2.22928242, -2.22783052,
       -2.22815451, -2.22738277, -2.22827909, -2.22838299, -2.22788581,
       -2.22821704, -2.22832729, -2.22773178, -2.22784304, -2.22888358,
       -2.22802357, -2.65197025, -2.22817499]), 'split1_test_score': array([-2.41637494, -2.43455157, -2.40064349, -2.46484961, -2.39857418,
       -2.40100717, -2.52004857, -2.40100964, -2.40074226, -2.40063871,
       -2.40101089, -2.40092956, -2.92609109, -2.39983484, -2.39875103,
       -2.40097848, -2.39893466, -2.39936547, -2.40015817, -2.40039127,
       -2.40292892, -2.39900498, -2.4008962 , -2.39921708, -2.39937227,
       -2.40099344, -2.40083275, -2.39849103, -2.39923663, -2.40363957,
       -2.39976532, -2.39916996, -2.39918312, -2.68484456, -2.39928532,
       -2.40100183, -2.39849361, -2.39936703, -2.39970412, -2.39928907,
       -2.39855118, -2.40078279, -2.40095874, -2.39904354, -2.40073701,
       -2.39862973, -2.39933849, -2.39913201, -2.40095874, -2.47940159,
       -2.3986397 , -2.39961297, -2.39928033, -2.39989695, -2.3990288 ,
       -2.39907163, -2.39905096, -2.39906898, -2.39892249, -2.39864866,
       -2.39931898, -2.39918771, -2.39873768, -2.39849124, -2.39981728,
       -2.39952164, -2.40052769, -2.39955268, -2.39928718, -2.3991865 ,
       -2.39849692, -2.3991938 , -2.39941206, -2.39883068, -2.4001236 ,
       -2.39969567, -2.39863363, -2.39919211, -2.39888718, -2.39903689,
       -2.39850452, -2.39862948, -2.39898278, -2.39920361, -2.39926713,
       -2.39937529, -2.3984937 , -2.39920373, -2.39923281, -2.39917543,
       -2.3987005 , -2.39904434, -2.39915145, -2.39959274, -2.39999768,
       -2.40030453, -2.39917989, -2.39958077, -2.3985711 , -2.40113006,
       -2.39903398, -2.39910343, -2.39941553, -2.39927557, -2.39859804,
       -2.39937096, -2.401009  , -2.39886618, -2.39947247, -2.39878731,
       -2.39958388, -2.39905926, -2.39908616, -2.39965965, -2.398829  ,
       -2.39903352, -2.3984909 , -2.39911613, -2.39918629, -2.39886278,
       -2.39907473, -2.39914864, -2.39876165, -2.39883661, -2.39945804,
       -2.398949  , -2.76478674, -2.39904696]), 'split2_test_score': array([-2.18918959, -2.21319469, -2.173383  , -2.24152988, -2.1832201 ,
       -2.20125432, -2.29864548, -2.20126784, -2.19978557, -2.1992005 ,
       -2.20127467, -2.20082799, -2.77030892, -2.19372932, -2.17631261,
       -2.20109706, -2.17539715, -2.17413804, -2.19614904, -2.19777501,
       -2.17448101, -2.18716112, -2.20064375, -2.1744808 , -2.1901466 ,
       -2.20117909, -2.20029165, -2.18025563, -2.1744229 , -2.1750328 ,
       -2.19318612, -2.17462297, -2.17458287, -2.48804062, -2.17429641,
       -2.20122508, -2.18067211, -2.17413504, -2.17372866, -2.17428882,
       -2.17769898, -2.20001285, -2.20098864, -2.17502441, -2.19975609,
       -2.17709227, -2.17419053, -2.1747403 , -2.20098863, -2.25524607,
       -2.17701889, -2.17382678, -2.17430652, -2.17360324, -2.17507329,
       -2.17493254, -2.17499998, -2.17494111, -2.17544058, -2.17695354,
       -2.174229  , -2.17456897, -2.17639285, -2.18031638, -2.17364989,
       -2.17393447, -2.17340433, -2.17389721, -2.17429264, -2.17457264,
       -2.17920064, -2.17455056, -2.17407183, -2.17585577, -2.17349732,
       -2.1737352 , -2.17706348, -2.17455566, -2.17556877, -2.17504643,
       -2.178773  , -2.17709409, -2.17522902, -2.17452106, -2.17433376,
       -2.17412009, -2.17947022, -2.17452068, -2.17443415, -2.17460627,
       -2.17662131, -2.17502179, -2.17467986, -2.17385014, -2.17354671,
       -2.17345192, -2.18856662, -2.17386408, -2.17754001, -2.17336172,
       -2.17505609, -2.17483039, -2.17406733, -2.17431619, -2.17733071,
       -2.17412747, -2.20126434, -2.17566672, -2.17399495, -2.17609914,
       -2.17386045, -2.17497278, -2.17488562, -2.17377391, -2.17586482,
       -2.17505759, -2.17994696, -2.17479016, -2.17457328, -2.17568461,
       -2.17492248, -2.17468855, -2.17624948, -2.17582381, -2.17401305,
       -2.17534646, -2.57648378, -2.17501316]), 'mean_test_score': array([-2.28522397, -2.30874196, -2.26828728, -2.33956545, -2.26998206,
       -2.27883661, -2.39877914, -2.2788437 , -2.27806766, -2.27776182,
       -2.27884728, -2.27861324, -2.83931781, -2.27500705, -2.26759488,
       -2.2787542 , -2.26744426, -2.26740682, -2.27620137, -2.27701786,
       -2.27047445, -2.27182878, -2.27851675, -2.26737981, -2.27324305,
       -2.27879719, -2.27833243, -2.26871463, -2.26737933, -2.27117001,
       -2.27474344, -2.26738386, -2.26738131, -2.58050809, -2.26738376,
       -2.27882129, -2.26886112, -2.26740728, -2.26760099, -2.26738481,
       -2.26791978, -2.27818654, -2.2786974 , -2.26741258, -2.27805224,
       -2.26777223, -2.2673989 , -2.26739166, -2.27869739, -2.35431609,
       -2.26775463, -2.26754303, -2.26738237, -2.26773388, -2.26741647,
       -2.26740551, -2.26741067, -2.26740615, -2.26744826, -2.26773901,
       -2.26739327, -2.2673808 , -2.26761264, -2.26873592, -2.26768083,
       -2.26748685, -2.26819882, -2.26750588, -2.26738428, -2.26738084,
       -2.26834931, -2.26738057, -2.26742838, -2.26750658, -2.26789174,
       -2.26759482, -2.26776532, -2.26738063, -2.26746041, -2.26741432,
       -2.26821949, -2.26777267, -2.26742939, -2.26738022, -2.26737886,
       -2.26741005, -2.26844185, -2.26738022, -2.26737942, -2.26738279,
       -2.26766364, -2.26741238, -2.26738758, -2.26753053, -2.26780123,
       -2.26802891, -2.27249817, -2.26752315, -2.26788077, -2.26867637,
       -2.26741509, -2.26739799, -2.26743012, -2.26738106, -2.26782978,
       -2.26740845, -2.27884186, -2.26747475, -2.26745888, -2.2675492 ,
       -2.26752507, -2.26740857, -2.26740201, -2.267572  , -2.26750811,
       -2.26741521, -2.26860688, -2.26739513, -2.26738085, -2.26747773,
       -2.26740475, -2.26738816, -2.26758097, -2.26750116, -2.26745156,
       -2.26743968, -2.66441359, -2.2674117 ]), 'std_test_score': array([0.0960145 , 0.09286755, 0.09648426, 0.09318365, 0.09276014,
       0.08743144, 0.09161467, 0.0874277 , 0.08784046, 0.0880047 ,
       0.08742581, 0.08754969, 0.06482644, 0.08960033, 0.09508648,
       0.08747501, 0.09542566, 0.09593237, 0.08888432, 0.08840802,
       0.09676145, 0.09155941, 0.08760091, 0.09579053, 0.09067418,
       0.08745228, 0.087699  , 0.09376218, 0.09581322, 0.09679977,
       0.08976123, 0.09573422, 0.0957506 , 0.08078202, 0.09586417,
       0.08743954, 0.09362949, 0.09593367, 0.09613332, 0.09586741,
       0.09458219, 0.08777686, 0.08750508, 0.09557245, 0.08784871,
       0.09479939, 0.09590962, 0.09568654, 0.08750509, 0.09334177,
       0.09482588, 0.09608366, 0.09585986, 0.09621871, 0.09555302,
       0.09560913, 0.09558219, 0.0956057 , 0.09540876, 0.09484951,
       0.09589304, 0.09575614, 0.09505657, 0.09374274, 0.09618366,
       0.09603147, 0.09644645, 0.09604935, 0.09586578, 0.09575471,
       0.0941042 , 0.0957633 , 0.09596387, 0.0952538 , 0.09631068,
       0.09612952, 0.09480978, 0.09576132, 0.09535914, 0.09556369,
       0.09423843, 0.09479874, 0.09549147, 0.0957748 , 0.09584832,
       0.09594029, 0.09401599, 0.09577495, 0.09580881, 0.09574104,
       0.0949718 , 0.09557349, 0.09571106, 0.0960722 , 0.0962625 ,
       0.09637225, 0.09114154, 0.0960654 , 0.09463879, 0.09662327,
       0.09555985, 0.09565015, 0.09596608, 0.09585575, 0.09471365,
       0.09593697, 0.08742867, 0.09532273, 0.09600203, 0.0951659 ,
       0.09606717, 0.09559304, 0.09562794, 0.09610987, 0.09525051,
       0.09555925, 0.09386136, 0.09566638, 0.09575446, 0.09531619,
       0.09561316, 0.09570753, 0.09511006, 0.09526542, 0.09599298,
       0.09544543, 0.07737626, 0.09557693]), 'rank_test_score': array([121, 122,  87, 123,  95, 117, 125, 119, 107, 105, 120, 111, 128,
       102,  68, 114,  48,  31, 103, 104,  96,  98, 110,   4, 100, 115,
       109,  92,   2,  97, 101,  17,  13, 126,  16, 116,  94,  32,  69,
        19,  83, 108, 113,  39, 106,  77,  26,  22, 112, 124,  75,  63,
        14,  73,  43,  29,  36,  30,  49,  74,  23,   9,  70,  93,  72,
        55,  85,  57,  18,  10,  88,   7,  44,  58,  82,  67,  76,   8,
        52,  40,  86,  78,  45,   6,   1,  35,  89,   5,   3,  15,  71,
        38,  20,  62,  79,  84,  99,  60,  81,  91,  41,  25,  46,  12,
        80,  33, 118,  53,  51,  64,  61,  34,  27,  65,  59,  42,  90,
        24,  11,  54,  28,  21,  66,  56,  50,  47, 127,  37], dtype=int32)}
-2.2673788577033664
OrderedDict([('alpha', 0.06933522637611654), ('degree', 6), ('kernel', 'rbf')])
[CV 1/3] END alpha=3.045294886903818, degree=4, kernel=rbf;, score=-2.687 total time=   0.2s
[CV 3/3] END alpha=0.00052021687797607, degree=6, kernel=rbf;, score=-2.347 total time=   0.2s
[CV 2/3] END alpha=0.17741107302598907, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.018259662844154066, degree=3, kernel=rbf;, score=-2.419 total time=   0.2s
[CV 3/3] END alpha=0.19227548288871887, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18065115793232078, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.03244145516505185, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.00022865314803753126, degree=2, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 1/3] END alpha=0.0708767489627973, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.0912387626672602, degree=4, kernel=rbf;, score=-2.173 total time=   2.1s
[CV 1/3] END alpha=0.06793743957463422, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.05992894524140198, degree=3, kernel=rbf;, score=-2.176 total time=   2.1s
[CV 2/3] END alpha=0.013749337447204156, degree=3, kernel=rbf;, score=-2.490 total time=   0.2s
[CV 3/3] END alpha=0.28350557224460254, degree=2, kernel=rbf;, score=-2.314 total time=   0.2s
[CV 2/3] END alpha=0.20480018933297175, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18312439171853723, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.196304059131329, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.16265668162714758, degree=3, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.0001273684655309429, degree=3, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.00022865314803753126, degree=2, kernel=rbf;, score=-2.201 total time=   2.1s
[CV 3/3] END alpha=0.053485347713488056, degree=3, kernel=rbf;, score=-2.177 total time=   2.1s
[CV 1/3] END alpha=0.0912387626672602, degree=4, kernel=rbf;, score=-2.231 total time=   2.1s
[CV 3/3] END alpha=0.04446258054652334, degree=6, kernel=rbf;, score=-2.179 total time=   2.2s
[CV 2/3] END alpha=0.05992894524140198, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.013749337447204156, degree=3, kernel=rbf;, score=-2.338 total time=   0.2s
[CV 1/3] END alpha=0.859953234709134, degree=6, kernel=rbf;, score=-2.464 total time=   0.2s
[CV 3/3] END alpha=0.20480018933297175, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18312439171853723, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.17908282590998748, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16265668162714758, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.0001273684655309429, degree=3, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.0014342730816673383, degree=2, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.0708767489627973, degree=5, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 1/3] END alpha=0.07532893188111743, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06793743957463422, degree=3, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 1/3] END alpha=0.07369000252576006, degree=6, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 2/3] END alpha=3.045294886903818, degree=4, kernel=rbf;, score=-2.705 total time=   0.2s
[CV 1/3] END alpha=0.28350557224460254, degree=2, kernel=rbf;, score=-2.381 total time=   0.2s
[CV 3/3] END alpha=0.17741107302598907, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.018259662844154066, degree=3, kernel=rbf;, score=-2.488 total time=   0.2s
[CV 1/3] END alpha=0.196304059131329, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18065115793232078, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.03244145516505185, degree=2, kernel=rbf;, score=-2.228 total time=   2.2s
[CV 3/3] END alpha=0.017139230812941483, degree=2, kernel=rbf;, score=-2.190 total time=   2.2s
[CV 2/3] END alpha=0.053485347713488056, degree=3, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.0912387626672602, degree=4, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 2/3] END alpha=0.06793743957463422, degree=3, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.07369000252576006, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.013749337447204156, degree=3, kernel=rbf;, score=-2.424 total time=   0.2s
[CV 2/3] END alpha=0.859953234709134, degree=6, kernel=rbf;, score=-2.523 total time=   0.2s
[CV 1/3] END alpha=1.1834933429300518, degree=5, kernel=rbf;, score=-2.507 total time=   0.2s
[CV 3/3] END alpha=0.18312439171853723, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17908282590998748, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.21018416122483413, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.0001273684655309429, degree=3, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.0014342730816673383, degree=2, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06632091354452987, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07532893188111743, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 1/3] END alpha=0.06858201236172153, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07369000252576006, degree=6, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 3/3] END alpha=0.859953234709134, degree=6, kernel=rbf;, score=-2.370 total time=   0.2s
[CV 2/3] END alpha=1.1834933429300518, degree=5, kernel=rbf;, score=-2.556 total time=   0.2s
[CV 1/3] END alpha=0.1863304840103329, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17908282590998748, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.21018416122483413, degree=5, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=1.0766091793074388, degree=5, kernel=rbf;, score=-2.378 total time=   2.1s
[CV 3/3] END alpha=0.0014342730816673383, degree=2, kernel=rbf;, score=-2.200 total time=   2.1s
[CV 2/3] END alpha=0.06632091354452987, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06977162837689335, degree=6, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06858201236172153, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 1/3] END alpha=0.057878303219061025, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 1/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.439 total time=   0.2s
[CV 1/3] END alpha=0.18490978703630126, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=1.1834933429300518, degree=5, kernel=rbf;, score=-2.405 total time=   0.2s
[CV 2/3] END alpha=0.1863304840103329, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.16339529325209798, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.21018416122483413, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=1.0766091793074388, degree=5, kernel=rbf;, score=-2.520 total time=   2.1s
[CV 1/3] END alpha=0.04165701949305615, degree=6, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.06632091354452987, degree=4, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06977162837689335, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06730416193092897, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.057878303219061025, degree=5, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 3/3] END alpha=3.045294886903818, degree=4, kernel=rbf;, score=-2.563 total time=   0.2s
[CV 2/3] END alpha=0.28350557224460254, degree=2, kernel=rbf;, score=-2.467 total time=   0.2s
[CV 1/3] END alpha=0.20480018933297175, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.018259662844154066, degree=3, kernel=rbf;, score=-2.336 total time=   0.2s
[CV 2/3] END alpha=0.196304059131329, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.16265668162714758, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.03244145516505185, degree=2, kernel=rbf;, score=-2.183 total time=   2.2s
[CV 2/3] END alpha=0.00022865314803753126, degree=2, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 2/3] END alpha=0.0708767489627973, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.07532893188111743, degree=5, kernel=rbf;, score=-2.400 total time=   2.2s
[CV 2/3] END alpha=0.06858201236172153, degree=5, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.057878303219061025, degree=5, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.16295491593787498, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.18023301594234076, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.1774422190780569, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18972926815382868, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1936563000418747, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18049163894269502, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.00010918920680400101, degree=6, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06866612838279493, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.718671595603143, degree=4, kernel=rbf;, score=-2.328 total time=   2.1s
[CV 3/3] END alpha=0.06755248349773058, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.05551357472203324, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0646392064265906, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.347 total time=   0.2s
[CV 2/3] END alpha=0.18490978703630126, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18909621489938352, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1863304840103329, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.16339529325209798, degree=5, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.19090473513637926, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=1.0766091793074388, degree=5, kernel=rbf;, score=-2.299 total time=   2.2s
[CV 2/3] END alpha=0.04165701949305615, degree=6, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.00048570917903947673, degree=2, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.06977162837689335, degree=6, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.06730416193092897, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.07595800023399743, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.16295491593787498, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18023301594234076, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.18909621489938352, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18972926815382868, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1936563000418747, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19090473513637926, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.00010918920680400101, degree=6, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06866612838279493, degree=6, kernel=rbf;, score=-2.228 total time=   2.2s
[CV 3/3] END alpha=0.00048570917903947673, degree=2, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06755248349773058, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.05551357472203324, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07595800023399743, degree=4, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.16295491593787498, degree=2, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 3/3] END alpha=0.18490978703630126, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18909621489938352, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18972926815382868, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16339529325209798, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19090473513637926, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.00010918920680400101, degree=6, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.04165701949305615, degree=6, kernel=rbf;, score=-2.180 total time=   2.2s
[CV 2/3] END alpha=0.00048570917903947673, degree=2, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06755248349773058, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06730416193092897, degree=6, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.07595800023399743, degree=4, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.169682262596869, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.041314206111638635, degree=6, kernel=rbf;, score=-2.404 total time=   0.2s
[CV 3/3] END alpha=0.1774422190780569, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17877962938143266, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1864058035338406, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18049163894269502, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.002130857013895778, degree=5, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.06866612838279493, degree=6, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.718671595603143, degree=4, kernel=rbf;, score=-2.479 total time=   2.1s
[CV 1/3] END alpha=0.045444779324298266, degree=2, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.05551357472203324, degree=6, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 2/3] END alpha=0.0646392064265906, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.0007140788940733849, degree=2, kernel=rbf;, score=-2.346 total time=   0.2s
[CV 3/3] END alpha=0.041314206111638635, degree=6, kernel=rbf;, score=-2.327 total time=   0.2s
[CV 2/3] END alpha=0.18465117723032573, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1825005104114388, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1864058035338406, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1818705078991953, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.002130857013895778, degree=5, kernel=rbf;, score=-2.200 total time=   2.2s
[CV 2/3] END alpha=0.1273465411479787, degree=2, kernel=rbf;, score=-2.404 total time=   2.1s
[CV 1/3] END alpha=0.0537771718966639, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.045444779324298266, degree=2, kernel=rbf;, score=-2.179 total time=   2.2s
[CV 2/3] END alpha=0.06428849290337806, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06526620681397226, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 2/3] END alpha=0.169682262596869, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.18023301594234076, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1774422190780569, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.17877962938143266, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1936563000418747, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18049163894269502, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.002130857013895778, degree=5, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.1273465411479787, degree=2, kernel=rbf;, score=-2.235 total time=   2.1s
[CV 3/3] END alpha=0.718671595603143, degree=4, kernel=rbf;, score=-2.255 total time=   2.2s
[CV 2/3] END alpha=0.045444779324298266, degree=2, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.06428849290337806, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0646392064265906, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 1/3] END alpha=0.0007140788940733849, degree=2, kernel=rbf;, score=-2.438 total time=   0.2s
[CV 2/3] END alpha=0.00099062445933281, degree=4, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 1/3] END alpha=0.20770659916194031, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1825005104114388, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17055186530011832, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18143547100095814, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.002944512570584048, degree=3, kernel=rbf;, score=-2.199 total time=   2.2s
[CV 2/3] END alpha=0.011854127840815479, degree=5, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.07654057308991345, degree=3, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.0677159282175282, degree=5, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 1/3] END alpha=0.06676301376193393, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06526620681397226, degree=3, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 3/3] END alpha=0.169682262596869, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.041314206111638635, degree=6, kernel=rbf;, score=-2.480 total time=   0.2s
[CV 1/3] END alpha=0.18465117723032573, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17877962938143266, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1864058035338406, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1818705078991953, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.002944512570584048, degree=3, kernel=rbf;, score=-2.233 total time=   2.1s
[CV 3/3] END alpha=0.1273465411479787, degree=2, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 2/3] END alpha=0.0537771718966639, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0677159282175282, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06428849290337806, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06526620681397226, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.0007140788940733849, degree=2, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 1/3] END alpha=0.00099062445933281, degree=4, kernel=rbf;, score=-2.438 total time=   0.2s
[CV 3/3] END alpha=0.18465117723032573, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1825005104114388, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.17055186530011832, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1818705078991953, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.002944512570584048, degree=3, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.011854127840815479, degree=5, kernel=rbf;, score=-2.231 total time=   2.2s
[CV 2/3] END alpha=0.07654057308991345, degree=3, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.07243384820168595, degree=2, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06676301376193393, degree=5, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 2/3] END alpha=0.07746775082000965, degree=3, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 2/3] END alpha=0.18667970101706732, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.00017977902692758869, degree=5, kernel=rbf;, score=-2.439 total time=   0.2s
[CV 3/3] END alpha=0.20770659916194031, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1905912760287772, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18491308132203413, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18143547100095814, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.0001, degree=4, kernel=rbf;, score=-2.234 total time=   2.2s
[CV 3/3] END alpha=0.011854127840815479, degree=5, kernel=rbf;, score=-2.193 total time=   2.1s
[CV 3/3] END alpha=0.0537771718966639, degree=3, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 2/3] END alpha=0.0677159282175282, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.06676301376193393, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.07746775082000965, degree=3, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.18667970101706732, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 3/3] END alpha=0.00099062445933281, degree=4, kernel=rbf;, score=-2.346 total time=   0.2s
[CV 2/3] END alpha=0.20770659916194031, degree=6, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.1905912760287772, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17055186530011832, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18143547100095814, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.0001, degree=4, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.06718108330689242, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07654057308991345, degree=3, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.07243384820168595, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.07613575650716536, degree=3, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.07746775082000965, degree=3, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 1/3] END alpha=0.18667970101706732, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 2/3] END alpha=0.00017977902692758869, degree=5, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 1/3] END alpha=0.19331504878020003, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1905912760287772, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18491308132203413, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.17910473348951075, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.0001, degree=4, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06718108330689242, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.06962277674189951, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.07243384820168595, degree=2, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.07613575650716536, degree=3, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.05897274536290556, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 2/3] END alpha=0.1860540553802639, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18119581559860118, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19331504878020003, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.21113529514758042, degree=6, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.16707026568551622, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17910473348951075, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.0007032343543066685, degree=2, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.06718108330689242, degree=2, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06962277674189951, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0590162462056512, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07613575650716536, degree=3, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.05897274536290556, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.1860540553802639, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 3/3] END alpha=0.00017977902692758869, degree=5, kernel=rbf;, score=-2.347 total time=   0.2s
[CV 2/3] END alpha=0.19331504878020003, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.21113529514758042, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18491308132203413, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17910473348951075, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.0007032343543066685, degree=2, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.06747690816850425, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06962277674189951, degree=4, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.0590162462056512, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.08321477698347739, degree=3, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.05897274536290556, degree=6, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 1/3] END alpha=0.1860540553802639, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 2/3] END alpha=0.18119581559860118, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.16858291631700525, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.21113529514758042, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.16707026568551622, degree=5, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.15780887477827385, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.0007032343543066685, degree=2, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06747690816850425, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0816420815877149, degree=5, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.0590162462056512, degree=4, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 2/3] END alpha=0.08321477698347739, degree=3, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.0640331302658132, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.18200631307810003, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.1586540840055454, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16858291631700525, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1943173227551675, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18148114801566978, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.15780887477827385, degree=4, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 1/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.822 total time=   2.2s
[CV 3/3] END alpha=0.06747690816850425, degree=6, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.0816420815877149, degree=5, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.08515755015045011, degree=3, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.08321477698347739, degree=3, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.0640331302658132, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.18501009349466457, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.1586540840055454, degree=2, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.19283074090552754, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.17929168858588596, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18148114801566978, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19209161735605376, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.770 total time=   2.2s
[CV 2/3] END alpha=3.3931045529709576, degree=6, kernel=rbf;, score=-2.685 total time=   2.1s
[CV 1/3] END alpha=0.06392135777845431, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.08515755015045011, degree=3, kernel=rbf;, score=-2.173 total time=   2.2s
[CV 2/3] END alpha=0.0879077145838283, degree=5, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.04274977875472978, degree=4, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 1/3] END alpha=0.18200631307810003, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18119581559860118, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.16858291631700525, degree=3, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.1943173227551675, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16707026568551622, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.15780887477827385, degree=4, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 2/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.926 total time=   2.2s
[CV 1/3] END alpha=3.3931045529709576, degree=6, kernel=rbf;, score=-2.569 total time=   2.1s
[CV 3/3] END alpha=0.0816420815877149, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.08515755015045011, degree=3, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.0879077145838283, degree=5, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.0640331302658132, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 3/3] END alpha=0.18501009349466457, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.151171697543668, degree=6, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.1823559413009665, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17929168858588596, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1574943556047292, degree=2, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.2370169865872227, degree=5, kernel=rbf;, score=-2.378 total time=   0.2s
[CV 3/3] END alpha=0.011006725166674476, degree=6, kernel=rbf;, score=-2.194 total time=   2.2s
[CV 1/3] END alpha=0.06973121604707634, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06392135777845431, degree=4, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.0781768300651514, degree=5, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.02011325108344431, degree=5, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.04274977875472978, degree=4, kernel=rbf;, score=-2.180 total time=   2.2s
[CV 2/3] END alpha=0.18200631307810003, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.1586540840055454, degree=2, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.19283074090552754, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1943173227551675, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18148114801566978, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19209161735605376, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.011006725166674476, degree=6, kernel=rbf;, score=-2.231 total time=   2.2s
[CV 3/3] END alpha=3.3931045529709576, degree=6, kernel=rbf;, score=-2.488 total time=   2.2s
[CV 2/3] END alpha=0.06392135777845431, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0781768300651514, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.0879077145838283, degree=5, kernel=rbf;, score=-2.173 total time=   2.2s
[CV 2/3] END alpha=0.04274977875472978, degree=4, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.18501009349466457, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.151171697543668, degree=6, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.19283074090552754, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17929168858588596, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1574943556047292, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19209161735605376, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.011006725166674476, degree=6, kernel=rbf;, score=-2.400 total time=   2.2s
[CV 2/3] END alpha=0.06973121604707634, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06492820708299821, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0781768300651514, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.02011325108344431, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0659577391293954, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.1819278904863809, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.18083787952622316, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1823559413009665, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1827497864692117, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18601716197482532, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.2370169865872227, degree=5, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.05690492133987333, degree=6, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.00016672601009618023, degree=6, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.06492820708299821, degree=2, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 1/3] END alpha=0.05359976240155276, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.02011325108344431, degree=5, kernel=rbf;, score=-2.189 total time=   2.2s
[CV 2/3] END alpha=0.0659577391293954, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.1819278904863809, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 2/3] END alpha=0.18083787952622316, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18103764165185907, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1827497864692117, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18601716197482532, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1845558712605886, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.05690492133987333, degree=6, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 2/3] END alpha=0.00016672601009618023, degree=6, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06444441003649176, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.05359976240155276, degree=2, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 1/3] END alpha=0.07589554698831456, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.0659577391293954, degree=6, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 1/3] END alpha=0.18484729199302488, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18083787952622316, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18103764165185907, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1881427230118549, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18601716197482532, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1845558712605886, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.0003392559398393356, degree=6, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.00016672601009618023, degree=6, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06444441003649176, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06767812297738383, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07589554698831456, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 1/3] END alpha=0.06754777977503537, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.18484729199302488, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.18290424840659125, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18103764165185907, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1881427230118549, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18462099451033565, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1845558712605886, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.0003392559398393356, degree=6, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.040202308049435864, degree=2, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.06444441003649176, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06767812297738383, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.05172269656064247, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06754777977503537, degree=4, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.20185838596674427, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.0482565531764928, degree=2, kernel=rbf;, score=-2.326 total time=   0.2s
[CV 3/3] END alpha=0.18290424840659125, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18283216192599103, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18231843540266143, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18462099451033565, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19087426661218432, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.06164520365907854, degree=2, kernel=rbf;, score=-2.228 total time=   2.2s
[CV 3/3] END alpha=0.040202308049435864, degree=2, kernel=rbf;, score=-2.181 total time=   2.2s
[CV 2/3] END alpha=0.06486657397057333, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06046121171323227, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.05172269656064247, degree=3, kernel=rbf;, score=-2.178 total time=   2.2s
[CV 2/3] END alpha=0.059842229713113974, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.1819278904863809, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.151171697543668, degree=6, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.1823559413009665, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1827497864692117, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1574943556047292, degree=2, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.2370169865872227, degree=5, kernel=rbf;, score=-2.464 total time=   0.2s
[CV 1/3] END alpha=0.05690492133987333, degree=6, kernel=rbf;, score=-2.228 total time=   2.2s
[CV 3/3] END alpha=0.06973121604707634, degree=4, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.06492820708299821, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.05359976240155276, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.07589554698831456, degree=5, kernel=rbf;, score=-2.400 total time=   2.2s
[CV 2/3] END alpha=0.06754777977503537, degree=4, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.18484729199302488, degree=2, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.18290424840659125, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18283216192599103, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1881427230118549, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18462099451033565, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19087426661218432, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.0003392559398393356, degree=6, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.040202308049435864, degree=2, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.06486657397057333, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06767812297738383, degree=4, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.05172269656064247, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.059842229713113974, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 1/3] END alpha=0.0482565531764928, degree=2, kernel=rbf;, score=-2.401 total time=   0.2s
[CV 1/3] END alpha=0.18469082873635165, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18283216192599103, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18231843540266143, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1895674768847408, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19087426661218432, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.06164520365907854, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.07148460944448276, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06486657397057333, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06046121171323227, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.09994868020927564, degree=6, kernel=rbf;, score=-2.232 total time=   2.1s
[CV 3/3] END alpha=0.059842229713113974, degree=6, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 1/3] END alpha=0.20185838596674427, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.0037906596304341194, degree=5, kernel=rbf;, score=-2.435 total time=   0.2s
[CV 3/3] END alpha=0.18469082873635165, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.12569896298799357, degree=4, kernel=rbf;, score=-2.464 total time=   0.2s
[CV 1/3] END alpha=0.14892248749316572, degree=2, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.1895674768847408, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18338312640226576, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.06164520365907854, degree=2, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.07148460944448276, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06134414008607796, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06046121171323227, degree=6, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 2/3] END alpha=0.09994868020927564, degree=6, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06500057593638073, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.20185838596674427, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.0037906596304341194, degree=5, kernel=rbf;, score=-2.496 total time=   0.2s
[CV 1/3] END alpha=0.15463161847659804, degree=3, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.12569896298799357, degree=4, kernel=rbf;, score=-2.314 total time=   0.2s
[CV 2/3] END alpha=0.14892248749316572, degree=2, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.19632244121935263, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18338312640226576, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.07145156738016352, degree=6, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.07834225277831755, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06134414008607796, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06411270939021409, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06404384858681417, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06500057593638073, degree=4, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.009056738008876635, degree=6, kernel=rbf;, score=-2.493 total time=   0.2s
[CV 1/3] END alpha=7.582211225270246, degree=5, kernel=rbf;, score=-2.945 total time=   0.2s
[CV 3/3] END alpha=0.15463161847659804, degree=3, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.16555791322919824, degree=2, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.17237611025445468, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19632244121935263, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1747859824631631, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.00733727270104548, degree=2, kernel=rbf;, score=-2.232 total time=   2.1s
[CV 3/3] END alpha=0.07834225277831755, degree=4, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.054037775595263925, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.04702355869593251, degree=5, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.06404384858681417, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06669936152284107, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.0482565531764928, degree=2, kernel=rbf;, score=-2.477 total time=   0.2s
[CV 2/3] END alpha=0.18469082873635165, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.12569896298799357, degree=4, kernel=rbf;, score=-2.380 total time=   0.2s
[CV 3/3] END alpha=0.18231843540266143, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1895674768847408, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18338312640226576, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.07145156738016352, degree=6, kernel=rbf;, score=-2.229 total time=   2.2s
[CV 3/3] END alpha=0.07148460944448276, degree=4, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.06134414008607796, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06411270939021409, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.09994868020927564, degree=6, kernel=rbf;, score=-2.173 total time=   2.2s
[CV 2/3] END alpha=0.06500057593638073, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.5418346287170345, degree=2, kernel=rbf;, score=-2.417 total time=   0.2s
[CV 3/3] END alpha=7.582211225270246, degree=5, kernel=rbf;, score=-2.799 total time=   0.2s
[CV 1/3] END alpha=0.187341938861454, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16555791322919824, degree=2, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.17237611025445468, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.22828883135310526, degree=3, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.1747859824631631, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.00733727270104548, degree=2, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.06981267306993834, degree=2, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.054037775595263925, degree=5, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 2/3] END alpha=0.04702355869593251, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06566567488323156, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06669936152284107, degree=2, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 1/3] END alpha=0.009056738008876635, degree=6, kernel=rbf;, score=-2.428 total time=   0.2s
[CV 3/3] END alpha=0.0037906596304341194, degree=5, kernel=rbf;, score=-2.344 total time=   0.2s
[CV 2/3] END alpha=0.15463161847659804, degree=3, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.16555791322919824, degree=2, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.14892248749316572, degree=2, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.19632244121935263, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1747859824631631, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.07145156738016352, degree=6, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.07834225277831755, degree=4, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.054037775595263925, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06411270939021409, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.06404384858681417, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06669936152284107, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.009056738008876635, degree=6, kernel=rbf;, score=-2.341 total time=   0.2s
[CV 2/3] END alpha=7.582211225270246, degree=5, kernel=rbf;, score=-2.938 total time=   0.2s
[CV 2/3] END alpha=0.187341938861454, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19049504542539683, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17237611025445468, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.22828883135310526, degree=3, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.17973722749049037, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.00733727270104548, degree=2, kernel=rbf;, score=-2.196 total time=   2.2s
[CV 2/3] END alpha=0.06981267306993834, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0704584360815753, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.04702355869593251, degree=5, kernel=rbf;, score=-2.179 total time=   2.2s
[CV 2/3] END alpha=0.06566567488323156, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.057191796357005026, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 2/3] END alpha=0.5418346287170345, degree=2, kernel=rbf;, score=-2.490 total time=   0.2s
[CV 1/3] END alpha=0.18414789539253154, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 1/3] END alpha=0.18537361850466177, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19049504542539683, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1827063103254422, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1852520484238338, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17973722749049037, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.004964971233514024, degree=6, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 3/3] END alpha=0.06981267306993834, degree=2, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.0704584360815753, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.053478124231738686, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06566567488323156, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.057191796357005026, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 2/3] END alpha=0.22246657992099744, degree=4, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.00010011511355694369, degree=6, kernel=rbf;, score=-2.439 total time=   0.2s
[CV 3/3] END alpha=0.18537361850466177, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18447709115740168, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.15083200151969656, degree=6, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.1852520484238338, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.17918866169729755, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.004964971233514024, degree=6, kernel=rbf;, score=-2.198 total time=   2.2s
[CV 1/3] END alpha=0.051104226634784276, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0704584360815753, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.053478124231738686, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0725066803119746, degree=2, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.057191796357005026, degree=3, kernel=rbf;, score=-2.176 total time=   2.2s
[CV 2/3] END alpha=0.00024889842006072297, degree=4, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 1/3] END alpha=0.3297632812061486, degree=6, kernel=rbf;, score=-2.386 total time=   0.2s
[CV 3/3] END alpha=0.1821464946951892, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.15163517867313756, degree=4, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.16036829762249716, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1761862342393307, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.23694444234243514, degree=3, kernel=rbf;, score=-2.250 total time=   2.1s
[CV 3/3] END alpha=0.12066987125452362, degree=6, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 1/3] END alpha=0.0018171978298912777, degree=5, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.06757965859242508, degree=5, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 2/3] END alpha=0.06281988403067752, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.0725066803119746, degree=2, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.059169926155457485, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.5418346287170345, degree=2, kernel=rbf;, score=-2.334 total time=   0.2s
[CV 2/3] END alpha=0.18414789539253154, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 3/3] END alpha=0.187341938861454, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19049504542539683, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1827063103254422, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.22828883135310526, degree=3, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.17973722749049037, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.004964971233514024, degree=6, kernel=rbf;, score=-2.233 total time=   2.2s
[CV 2/3] END alpha=0.051104226634784276, degree=4, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 2/3] END alpha=0.06757965859242508, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06281988403067752, degree=2, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 1/3] END alpha=0.06951922931034764, degree=6, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.059169926155457485, degree=4, kernel=rbf;, score=-2.176 total time=   2.1s
[CV 1/3] END alpha=0.00024889842006072297, degree=4, kernel=rbf;, score=-2.439 total time=   0.2s
[CV 3/3] END alpha=0.00010011511355694369, degree=6, kernel=rbf;, score=-2.347 total time=   0.2s
[CV 1/3] END alpha=0.1821464946951892, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18447709115740168, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.15083200151969656, degree=6, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.1761862342393307, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.17918866169729755, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.12066987125452362, degree=6, kernel=rbf;, score=-2.403 total time=   2.2s
[CV 3/3] END alpha=0.051104226634784276, degree=4, kernel=rbf;, score=-2.178 total time=   2.1s
[CV 1/3] END alpha=0.06757965859242508, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.053478124231738686, degree=2, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 2/3] END alpha=0.0725066803119746, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.059169926155457485, degree=4, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.22246657992099744, degree=4, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.00010011511355694369, degree=6, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 2/3] END alpha=0.1821464946951892, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.15163517867313756, degree=4, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.15083200151969656, degree=6, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.1761862342393307, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.23694444234243514, degree=3, kernel=rbf;, score=-2.416 total time=   2.1s
[CV 1/3] END alpha=0.0231175411211601, degree=6, kernel=rbf;, score=-2.229 total time=   2.2s
[CV 3/3] END alpha=0.0018171978298912777, degree=5, kernel=rbf;, score=-2.200 total time=   2.2s
[CV 1/3] END alpha=0.05654140186132213, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 1/3] END alpha=0.06793465666745689, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.06951922931034764, degree=6, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 2/3] END alpha=0.0733917748940628, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.22246657992099744, degree=4, kernel=rbf;, score=-2.377 total time=   0.2s
[CV 3/3] END alpha=0.18414789539253154, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18537361850466177, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18447709115740168, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1827063103254422, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1852520484238338, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.17918866169729755, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.12066987125452362, degree=6, kernel=rbf;, score=-2.234 total time=   2.2s
[CV 2/3] END alpha=0.0018171978298912777, degree=5, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 2/3] END alpha=0.05654140186132213, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.06281988403067752, degree=2, kernel=rbf;, score=-2.175 total time=   2.1s
[CV 2/3] END alpha=0.06951922931034764, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0733917748940628, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.00024889842006072297, degree=4, kernel=rbf;, score=-2.347 total time=   0.2s
[CV 2/3] END alpha=0.3297632812061486, degree=6, kernel=rbf;, score=-2.470 total time=   0.2s
[CV 1/3] END alpha=0.18785151837908387, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.15163517867313756, degree=4, kernel=rbf;, score=-2.312 total time=   0.2s
[CV 2/3] END alpha=0.16036829762249716, degree=4, kernel=rbf;, score=-2.463 total time=   0.2s
[CV 1/3] END alpha=0.1787813352087495, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.23694444234243514, degree=3, kernel=rbf;, score=-2.189 total time=   2.2s
[CV 2/3] END alpha=0.0231175411211601, degree=6, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.0004856914605719231, degree=4, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.05654140186132213, degree=3, kernel=rbf;, score=-2.176 total time=   2.1s
[CV 2/3] END alpha=0.06793465666745689, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.05254283954329538, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0733917748940628, degree=5, kernel=rbf;, score=-2.174 total time=   2.1s
[CV 1/3] END alpha=0.09306309746609896, degree=6, kernel=rbf;, score=-2.385 total time=   0.2s
[CV 3/3] END alpha=0.3297632812061486, degree=6, kernel=rbf;, score=-2.317 total time=   0.2s
[CV 2/3] END alpha=0.18785151837908387, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19074907218204423, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.16036829762249716, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1787813352087495, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.40363083721608917, degree=3, kernel=rbf;, score=-2.278 total time=   2.1s
[CV 3/3] END alpha=0.0231175411211601, degree=6, kernel=rbf;, score=-2.187 total time=   2.2s
[CV 2/3] END alpha=0.0004856914605719231, degree=4, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.041443430423651735, degree=4, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.06793465666745689, degree=3, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.05254283954329538, degree=3, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.06199777559422401, degree=6, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 2/3] END alpha=0.09306309746609896, degree=6, kernel=rbf;, score=-2.468 total time=   0.2s
[CV 1/3] END alpha=0.10969709753704102, degree=2, kernel=rbf;, score=-2.382 total time=   0.2s
[CV 3/3] END alpha=0.18785151837908387, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19074907218204423, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19610196028937715, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1787813352087495, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.40363083721608917, degree=3, kernel=rbf;, score=-2.435 total time=   2.1s
[CV 1/3] END alpha=0.0009535283175047179, degree=6, kernel=rbf;, score=-2.234 total time=   2.2s
[CV 3/3] END alpha=0.0004856914605719231, degree=4, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.041443430423651735, degree=4, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.06933522637611654, degree=6, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.05254283954329538, degree=3, kernel=rbf;, score=-2.177 total time=   2.2s
[CV 2/3] END alpha=0.06199777559422401, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.01934067881689512, degree=4, kernel=rbf;, score=-2.418 total time=   0.2s
[CV 3/3] END alpha=0.10969709753704102, degree=2, kernel=rbf;, score=-2.315 total time=   0.2s
[CV 1/3] END alpha=0.18612483404163244, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19074907218204423, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19610196028937715, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18417793117484482, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.40363083721608917, degree=3, kernel=rbf;, score=-2.213 total time=   2.2s
[CV 2/3] END alpha=0.0009535283175047179, degree=6, kernel=rbf;, score=-2.401 total time=   2.2s
[CV 1/3] END alpha=0.06426978447118663, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.041443430423651735, degree=4, kernel=rbf;, score=-2.180 total time=   2.2s
[CV 2/3] END alpha=0.06933522637611654, degree=6, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0715679368595275, degree=4, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.06199777559422401, degree=6, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 3/3] END alpha=0.09306309746609896, degree=6, kernel=rbf;, score=-2.317 total time=   0.2s
[CV 2/3] END alpha=0.10969709753704102, degree=2, kernel=rbf;, score=-2.466 total time=   0.2s
[CV 2/3] END alpha=0.18612483404163244, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18260596155087594, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.19610196028937715, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18417793117484482, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.09294315197908312, degree=2, kernel=rbf;, score=-2.231 total time=   2.1s
[CV 3/3] END alpha=0.0009535283175047179, degree=6, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.06426978447118663, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.0803856440984901, degree=6, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.06933522637611654, degree=6, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.0715679368595275, degree=4, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=5.011104432102846, degree=4, kernel=rbf;, score=-2.652 total time=   2.1s
[CV 2/3] END alpha=0.01934067881689512, degree=4, kernel=rbf;, score=-2.488 total time=   0.2s
[CV 1/3] END alpha=0.18673430543563926, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18612483404163244, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18260596155087594, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18472519386085884, degree=5, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18417793117484482, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.09294315197908312, degree=2, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.06823399359188924, degree=2, kernel=rbf;, score=-2.228 total time=   2.2s
[CV 3/3] END alpha=0.06426978447118663, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
[CV 2/3] END alpha=0.0803856440984901, degree=6, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.07165952255067168, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.0715679368595275, degree=4, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=5.011104432102846, degree=4, kernel=rbf;, score=-2.765 total time=   2.1s
[CV 3/3] END alpha=0.01934067881689512, degree=4, kernel=rbf;, score=-2.336 total time=   0.2s
[CV 2/3] END alpha=0.18673430543563926, degree=6, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18491191772934382, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18260596155087594, degree=4, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18472519386085884, degree=5, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.1924867129351678, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.09294315197908312, degree=2, kernel=rbf;, score=-2.173 total time=   2.2s
[CV 2/3] END alpha=0.06823399359188924, degree=2, kernel=rbf;, score=-2.399 total time=   2.2s
[CV 1/3] END alpha=0.0021716441713350416, degree=3, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=0.0803856440984901, degree=6, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.07165952255067168, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.00011389872995202402, degree=2, kernel=rbf;, score=-2.234 total time=   2.1s
[CV 3/3] END alpha=5.011104432102846, degree=4, kernel=rbf;, score=-2.576 total time=   2.2s
[CV 2/3] END alpha=0.0020077069127146644, degree=6, kernel=rbf;, score=-2.497 total time=   0.2s
[CV 1/3] END alpha=0.00052021687797607, degree=6, kernel=rbf;, score=-2.439 total time=   0.2s
[CV 3/3] END alpha=0.18491191772934382, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18939771664541405, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.19227548288871887, degree=4, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.1924867129351678, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 1/3] END alpha=0.6110111696463744, degree=6, kernel=rbf;, score=-2.312 total time=   2.1s
[CV 3/3] END alpha=0.06823399359188924, degree=2, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.0021716441713350416, degree=3, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.07469842817763674, degree=5, kernel=rbf;, score=-2.229 total time=   2.1s
[CV 3/3] END alpha=0.07165952255067168, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.00011389872995202402, degree=2, kernel=rbf;, score=-2.401 total time=   2.1s
[CV 1/3] END alpha=0.0643501943456716, degree=5, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 1/3] END alpha=0.0020077069127146644, degree=6, kernel=rbf;, score=-2.437 total time=   0.2s
[CV 3/3] END alpha=0.18673430543563926, degree=6, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.18491191772934382, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18939771664541405, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18472519386085884, degree=5, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.1924867129351678, degree=3, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 2/3] END alpha=0.6110111696463744, degree=6, kernel=rbf;, score=-2.465 total time=   2.1s
[CV 1/3] END alpha=0.017139230812941483, degree=2, kernel=rbf;, score=-2.230 total time=   2.1s
[CV 3/3] END alpha=0.0021716441713350416, degree=3, kernel=rbf;, score=-2.200 total time=   2.2s
[CV 2/3] END alpha=0.07469842817763674, degree=5, kernel=rbf;, score=-2.400 total time=   2.1s
[CV 1/3] END alpha=0.04446258054652334, degree=6, kernel=rbf;, score=-2.227 total time=   2.1s
[CV 3/3] END alpha=0.00011389872995202402, degree=2, kernel=rbf;, score=-2.201 total time=   2.2s
[CV 2/3] END alpha=0.0643501943456716, degree=5, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 3/3] END alpha=0.0020077069127146644, degree=6, kernel=rbf;, score=-2.346 total time=   0.2s
[CV 2/3] END alpha=0.00052021687797607, degree=6, kernel=rbf;, score=-2.498 total time=   0.2s
[CV 1/3] END alpha=0.17741107302598907, degree=3, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.18939771664541405, degree=3, kernel=rbf;, score=-2.311 total time=   0.2s
[CV 2/3] END alpha=0.19227548288871887, degree=4, kernel=rbf;, score=-2.462 total time=   0.2s
[CV 1/3] END alpha=0.18065115793232078, degree=6, kernel=rbf;, score=-2.376 total time=   0.2s
[CV 3/3] END alpha=0.6110111696463744, degree=6, kernel=rbf;, score=-2.242 total time=   2.2s
[CV 2/3] END alpha=0.017139230812941483, degree=2, kernel=rbf;, score=-2.399 total time=   2.1s
[CV 1/3] END alpha=0.053485347713488056, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.07469842817763674, degree=5, kernel=rbf;, score=-2.174 total time=   2.2s
[CV 2/3] END alpha=0.04446258054652334, degree=6, kernel=rbf;, score=-2.398 total time=   2.1s
[CV 1/3] END alpha=0.05992894524140198, degree=3, kernel=rbf;, score=-2.228 total time=   2.1s
[CV 3/3] END alpha=0.0643501943456716, degree=5, kernel=rbf;, score=-2.175 total time=   2.2s
