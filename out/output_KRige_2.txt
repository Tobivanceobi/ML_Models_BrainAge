no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.06613461, 0.04327861, 0.04388507, 0.04372581, 0.04117298,
       0.04350082, 0.04294093, 0.04311228, 0.04300849, 0.04382809,
       0.04287243, 0.04344241, 0.04441293, 0.04401151, 0.04506445,
       0.04434236, 0.04404449, 0.04315805, 0.04322306, 0.04421894,
       0.04770295, 0.05105424, 0.06164344, 0.0515821 , 0.05201793,
       0.05683772, 0.05495453, 0.05134368, 0.0546031 , 0.05418436,
       0.05520368, 0.07328494, 0.04077975, 0.05524   , 0.05868522,
       0.08048701, 0.06451114, 0.0558238 , 0.05461971, 0.05289531,
       0.05764508, 0.04946502, 0.05280956, 0.05654422, 0.05606087,
       0.05611523, 0.06139183, 0.05156096, 0.05476356, 0.05874523,
       0.05194298, 0.05500603, 0.06464736, 0.05921737, 0.05356542,
       0.04922787, 0.05397232, 0.05437024, 0.05641301, 0.05957389,
       0.05626615, 0.05151765, 0.05247132, 0.04988964, 0.04634309,
       0.04485981, 0.04119007, 0.06043625, 0.04239225, 0.04693365,
       0.04229506, 0.04040448, 0.04000775, 0.0405678 , 0.04095674,
       0.04165514, 0.04033995, 0.04408956, 0.04049826, 0.04077975,
       0.03897087, 0.03889982, 0.03983506, 0.0393707 , 0.03915127,
       0.03842107, 0.04093107, 0.04153736, 0.04009565, 0.03863843,
       0.0402046 , 0.04086121, 0.039107  , 0.03928073, 0.04015239,
       0.03988965, 0.03823932, 0.03973945, 0.04213484, 0.04082346,
       0.04085827, 0.04188927, 0.04215042, 0.04142952, 0.04182998,
       0.0391953 , 0.04213969, 0.04115876, 0.04143818, 0.0413119 ,
       0.04182537, 0.04193823, 0.04137206, 0.04184993, 0.04159975,
       0.0420529 , 0.04180813, 0.04240298, 0.04190207, 0.04150494,
       0.04171483, 0.04106895, 0.04155151, 0.04103851, 0.04152536,
       0.04200244, 0.04143953, 0.04210766]), 'std_fit_time': array([1.46096106e-05, 1.91108450e-04, 1.20770928e-04, 3.41338162e-04,
       2.82309995e-03, 3.52808015e-04, 1.01237506e-04, 4.84293848e-04,
       3.51612703e-04, 2.73854042e-04, 3.10671942e-04, 6.06269721e-04,
       6.22573360e-05, 3.39506568e-04, 4.05986028e-04, 1.93044500e-04,
       6.37278278e-04, 2.69991821e-04, 8.49066580e-04, 7.08508839e-04,
       5.63789894e-03, 7.48287251e-03, 3.45429380e-03, 8.27817320e-03,
       1.51779552e-02, 2.47305876e-04, 1.06872084e-02, 7.75452463e-03,
       1.11299897e-02, 5.27327825e-03, 1.02643327e-02, 1.23113560e-02,
       1.70824920e-03, 1.08347956e-02, 1.22254964e-02, 9.04985554e-03,
       5.09409888e-03, 1.16721744e-02, 1.09609991e-02, 8.64949921e-03,
       7.67313039e-03, 7.12114689e-03, 4.66762213e-03, 7.95582235e-03,
       1.92264994e-03, 1.10586529e-02, 6.64684546e-03, 8.61653411e-03,
       1.04387264e-02, 5.87060282e-03, 7.59789848e-03, 9.13603392e-03,
       7.18156774e-03, 3.39740236e-03, 9.53423784e-03, 9.37559645e-03,
       6.26675898e-03, 3.38090865e-03, 2.75215584e-03, 8.16772586e-03,
       1.55486800e-03, 2.67256151e-03, 1.63775955e-03, 3.65324873e-03,
       4.44411060e-03, 1.14711938e-03, 9.56771160e-04, 1.52591303e-03,
       4.51825658e-03, 5.56429148e-03, 2.39646262e-03, 2.30599812e-04,
       1.42291928e-03, 1.80755460e-03, 1.56111927e-04, 1.48609722e-03,
       6.90436412e-04, 4.25054588e-03, 3.48582041e-04, 4.04492857e-04,
       4.75667087e-04, 4.82000110e-05, 6.57021228e-04, 1.46721131e-03,
       1.46378437e-04, 6.04493631e-04, 1.43938009e-04, 1.92160675e-04,
       1.14182595e-03, 3.08263104e-04, 3.92688709e-04, 1.09664264e-03,
       3.25467724e-04, 4.27084738e-04, 1.02151453e-03, 9.08831804e-04,
       8.17719661e-04, 7.37228114e-04, 5.99585907e-04, 3.72511615e-04,
       3.16177436e-04, 3.35737627e-04, 4.08629568e-04, 6.80711835e-05,
       2.52677980e-04, 4.61382067e-04, 2.56322507e-04, 2.50974133e-04,
       3.64514606e-04, 4.95163202e-04, 4.01206703e-04, 5.55113323e-04,
       5.83987901e-04, 4.57370167e-04, 1.11320287e-04, 4.48385903e-04,
       2.09118602e-04, 2.66172820e-04, 3.04004600e-04, 6.34371652e-04,
       2.03990313e-04, 4.66292063e-04, 7.87167655e-04, 6.47022868e-04,
       2.16002584e-04, 3.42132295e-04, 2.25381695e-04, 3.26849428e-04]), 'mean_score_time': array([0.02541558, 0.02322412, 0.02344116, 0.02332894, 0.02317818,
       0.02343917, 0.02323882, 0.02324963, 0.02329588, 0.02345721,
       0.02321903, 0.0234321 , 0.0234379 , 0.02341   , 0.02373274,
       0.02329127, 0.02349067, 0.02345363, 0.02330057, 0.02345673,
       0.03057766, 0.03651547, 0.03337916, 0.03648019, 0.02396321,
       0.04094442, 0.03300412, 0.03552175, 0.03003097, 0.03439403,
       0.03278804, 0.03022408, 0.02439475, 0.02758972, 0.03057059,
       0.02654823, 0.02947529, 0.02674063, 0.02824616, 0.02770503,
       0.02917369, 0.02429875, 0.03070362, 0.02699645, 0.03001396,
       0.02678021, 0.02426513, 0.02663112, 0.0269618 , 0.02659265,
       0.02926532, 0.02503467, 0.02346539, 0.02409903, 0.02536996,
       0.0247403 , 0.02435939, 0.02428865, 0.02409093, 0.02382716,
       0.02770527, 0.02513957, 0.02432775, 0.02361917, 0.02357682,
       0.02763057, 0.02409442, 0.02374236, 0.02358961, 0.02465844,
       0.02415625, 0.02369444, 0.02449314, 0.02378003, 0.02372416,
       0.0237387 , 0.02375666, 0.02460178, 0.02378964, 0.02373791,
       0.02350291, 0.02331209, 0.02349798, 0.02378297, 0.02325066,
       0.02406518, 0.02426322, 0.02508497, 0.02382159, 0.02320608,
       0.02393715, 0.02416817, 0.02376556, 0.02383129, 0.02403752,
       0.02355464, 0.02362156, 0.02374919, 0.02612297, 0.0244658 ,
       0.02393945, 0.02717129, 0.02509856, 0.02483837, 0.02714618,
       0.02382286, 0.02564255, 0.02472854, 0.02511112, 0.0254732 ,
       0.02475142, 0.02534437, 0.02400247, 0.0248332 , 0.02506383,
       0.02497339, 0.02554639, 0.02559845, 0.02522747, 0.02518129,
       0.02492889, 0.02500017, 0.02481111, 0.02667546, 0.02468204,
       0.02480483, 0.02455306, 0.02486412]), 'std_score_time': array([1.16108515e-04, 1.57052889e-04, 2.31472750e-04, 2.56475036e-04,
       2.18887849e-04, 2.09978425e-04, 1.75985250e-04, 2.81742373e-04,
       2.42258697e-04, 1.66704018e-04, 2.48414108e-04, 2.21767844e-04,
       2.08892080e-04, 2.37150023e-04, 1.79836142e-04, 2.54863575e-04,
       3.28919723e-05, 1.20828493e-04, 2.59200388e-04, 1.79873225e-04,
       1.03584513e-02, 8.67845765e-03, 6.90823692e-03, 8.52016994e-03,
       5.84606926e-04, 3.02609648e-03, 6.78333323e-03, 7.78993387e-03,
       4.35387572e-03, 6.64962813e-03, 6.86678484e-03, 7.54714892e-03,
       9.34979446e-04, 3.67132151e-03, 4.46492652e-03, 3.44110718e-03,
       3.57331532e-03, 2.83745145e-03, 5.55107225e-03, 3.46314082e-03,
       2.82323936e-03, 4.42422034e-04, 3.88875031e-03, 3.60305642e-03,
       3.40417867e-03, 3.70591372e-03, 1.13491555e-03, 3.60488822e-03,
       4.00914503e-03, 2.85489911e-03, 3.67764638e-03, 1.61776043e-03,
       5.08999936e-05, 5.85692902e-04, 1.07709222e-03, 2.02762383e-04,
       1.40381558e-05, 7.99561958e-04, 7.24891719e-04, 3.59274587e-04,
       1.50912061e-03, 1.32227341e-03, 8.66637685e-04, 7.64643733e-05,
       3.56370056e-04, 2.77786667e-03, 2.30350216e-04, 4.68767967e-04,
       2.21844612e-05, 9.85303098e-04, 3.32560010e-04, 1.59188443e-04,
       9.70180916e-04, 2.49542780e-04, 2.95609640e-04, 1.64090345e-04,
       2.50858974e-04, 3.63546788e-04, 2.54339401e-04, 1.34743415e-05,
       4.65438514e-04, 3.08399078e-04, 2.35359139e-04, 5.45003839e-04,
       2.92723216e-04, 4.88813224e-04, 3.26076456e-04, 1.46789965e-04,
       3.61475014e-04, 2.44999140e-04, 1.82091486e-04, 3.39874546e-04,
       6.20863618e-04, 4.90690124e-04, 7.37428070e-04, 3.60911255e-04,
       3.20684481e-04, 2.75838470e-04, 1.61067274e-04, 6.05419499e-04,
       5.56838364e-04, 3.52501491e-04, 1.61515874e-04, 1.02242444e-04,
       1.80710359e-03, 6.95044269e-04, 4.45780279e-04, 3.55228161e-04,
       3.35454480e-04, 7.91826887e-04, 1.25455001e-04, 5.75943395e-04,
       3.51262632e-04, 1.37085638e-04, 2.05825470e-04, 2.78040022e-04,
       6.12744850e-04, 2.27601085e-04, 2.47648423e-04, 3.31458823e-04,
       6.72870942e-05, 6.78665269e-04, 2.12320398e-04, 1.31664242e-03,
       2.97818368e-04, 1.56993279e-04, 2.19912503e-04, 1.60504919e-04]), 'param_alpha': masked_array(data=[0.007415996930946248, 0.10844852766896036,
                   0.0036543554356017745, 0.00034890466791556474,
                   0.002206381446402118, 0.001382895550024558,
                   3.3240996512502616, 0.1969137452682661,
                   0.015919950476852764, 0.9664750089814659,
                   0.2880219163836826, 0.39336450577943866,
                   0.26694111185805924, 0.2505854306724498,
                   0.00010032031805861906, 9.958940942385151,
                   0.2645935684779781, 0.053592696636314476,
                   0.25347390877670795, 0.41395807538994206,
                   0.6100255549654917, 0.2657056097455096,
                   0.25969904985898823, 0.26364669133060914,
                   0.17490931354945502, 0.25813372377207366,
                   0.25809102958987845, 0.2637716348163903,
                   0.260746345658873, 0.00010003932627085652,
                   0.26378709214324497, 0.26288445034576374,
                   0.00848346361097487, 0.26530017723148247,
                   0.26238636186673103, 0.26685743213139135,
                   0.2621495750521851, 0.2642474213977335,
                   0.2581918861200376, 0.25725187117179815,
                   0.26702675272053134, 0.00018603799488347352,
                   0.2740264887507161, 0.26867298007669865,
                   0.2562231503551595, 0.2678850235393402,
                   0.00010202197121689435, 0.26761947642230466,
                   0.264466923993487, 0.2680096982208293,
                   0.26116427532880837, 0.2622977702885637,
                   0.274065247686657, 0.262809972055412,
                   0.26067538953778996, 0.25774918062339863,
                   0.27247572221474736, 0.25696152686458623,
                   0.26537356900584785, 0.2570968383628279,
                   0.2647450254686788, 0.2626698681177135,
                   0.25953877067213527, 0.26626256874280496,
                   0.2555246189786122, 0.264569094200565,
                   0.2624576644929919, 0.263968783720418,
                   0.27004478996759207, 0.2756249594475844,
                   0.26758004135210345, 0.25430557123493064,
                   0.2590024791783643, 0.258128615219651,
                   0.26665264677986933, 0.2634114262959121,
                   0.24996394388819776, 0.25041107919387856,
                   0.26013698519198586, 0.25513340544394053,
                   0.2699458012496296, 0.2567888378482598,
                   0.26488118487126056, 0.2698408850838567,
                   0.25884445741327133, 0.2721081057904869,
                   0.24851957823906975, 0.26417503512159185,
                   0.27229134319436876, 0.25910469937855585,
                   0.26157832479351184, 0.26738851798091734,
                   0.2737996303219965, 0.2641930167768227,
                   0.26099556632886817, 0.2594497498848656,
                   0.2677786606418569, 0.25989504003853753,
                   0.26370936820481516, 0.26087342013300074,
                   0.2748811647884216, 0.26865226469215553,
                   0.26973458035433023, 0.2599394018169485,
                   0.26265038681141506, 0.2635263419995578,
                   0.2677600110778633, 0.25556913120616315,
                   0.2655263471274298, 0.27950241719832125,
                   0.2752241872144021, 0.2650193707817598,
                   0.25965654856506437, 0.26168542259839894,
                   0.2554685935023447, 0.2544053241777613,
                   0.2750821197379381, 0.26897641568274794,
                   0.2639473073927643, 0.254903862729017,
                   0.25652814051138995, 0.2541228881429458,
                   0.2671781024049463, 0.263585694201946,
                   0.26028843380883054, 0.2635489830594473,
                   0.25917556792372143, 0.2634857126795371],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[4, 4, 4, 5, 4, 2, 2, 2, 5, 6, 6, 2, 2, 6, 2, 5, 2, 2,
                   6, 6, 2, 2, 6, 2, 6, 6, 4, 5, 6, 6, 2, 6, 6, 6, 3, 3,
                   4, 6, 2, 6, 3, 2, 3, 3, 5, 5, 2, 5, 5, 3, 2, 4, 5, 5,
                   4, 6, 5, 4, 4, 4, 3, 5, 5, 2, 3, 4, 3, 6, 3, 3, 6, 5,
                   3, 6, 5, 6, 2, 4, 3, 5, 2, 5, 3, 5, 2, 5, 5, 6, 5, 5,
                   3, 2, 6, 4, 6, 2, 3, 3, 4, 2, 2, 2, 5, 5, 4, 4, 3, 3,
                   6, 5, 5, 2, 3, 5, 3, 3, 4, 2, 4, 5, 3, 5, 5, 3, 6, 6,
                   4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.007415996930946248), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10844852766896036), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0036543554356017745), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00034890466791556474), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.002206381446402118), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.001382895550024558), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.3240996512502616), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1969137452682661), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.015919950476852764), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.9664750089814659), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2880219163836826), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.39336450577943866), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26694111185805924), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2505854306724498), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010032031805861906), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.958940942385151), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2645935684779781), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053592696636314476), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25347390877670795), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.41395807538994206), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.6100255549654917), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2657056097455096), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25969904985898823), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26364669133060914), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17490931354945502), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25813372377207366), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25809102958987845), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2637716348163903), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.260746345658873), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010003932627085652), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26378709214324497), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26288445034576374), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00848346361097487), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26530017723148247), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26238636186673103), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26685743213139135), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2621495750521851), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2642474213977335), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2581918861200376), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25725187117179815), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26702675272053134), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00018603799488347352), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2740264887507161), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26867298007669865), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2562231503551595), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2678850235393402), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010202197121689435), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26761947642230466), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.264466923993487), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2680096982208293), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26116427532880837), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2622977702885637), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.274065247686657), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.262809972055412), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26067538953778996), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25774918062339863), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.27247572221474736), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25696152686458623), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26537356900584785), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2570968383628279), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2647450254686788), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2626698681177135), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25953877067213527), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26626256874280496), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2555246189786122), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.264569094200565), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2624576644929919), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.263968783720418), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.27004478996759207), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2756249594475844), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26758004135210345), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25430557123493064), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2590024791783643), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.258128615219651), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26665264677986933), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2634114262959121), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.24996394388819776), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25041107919387856), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26013698519198586), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25513340544394053), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2699458012496296), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2567888378482598), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26488118487126056), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2698408850838567), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25884445741327133), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2721081057904869), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.24851957823906975), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26417503512159185), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.27229134319436876), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25910469937855585), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26157832479351184), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26738851798091734), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2737996303219965), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2641930167768227), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26099556632886817), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2594497498848656), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2677786606418569), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25989504003853753), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26370936820481516), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26087342013300074), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2748811647884216), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26865226469215553), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26973458035433023), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2599394018169485), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26265038681141506), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2635263419995578), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2677600110778633), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25556913120616315), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2655263471274298), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.27950241719832125), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2752241872144021), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2650193707817598), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25965654856506437), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26168542259839894), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2554685935023447), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2544053241777613), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2750821197379381), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26897641568274794), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2639473073927643), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.254903862729017), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25652814051138995), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2541228881429458), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2671781024049463), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.263585694201946), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26028843380883054), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2635489830594473), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.25917556792372143), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2634857126795371), ('degree', 4), ('kernel', 'rbf')])], 'split0_test_score': array([-2.19956257, -2.13953142, -2.20912636, -2.21981912, -2.2135551 ,
       -2.21622212, -2.27790785, -2.13334493, -2.18367078, -2.17672134,
       -2.13404207, -2.13600927, -2.13364387, -2.13330692, -2.2207451 ,
       -2.46415266, -2.13359839, -2.15205365, -2.13336998, -2.13648495,
       -2.14948247, -2.13362005, -2.13350056, -2.13357979, -2.13392993,
       -2.13346839, -2.13346751, -2.13358225, -2.13352184, -2.22074615,
       -2.13358255, -2.1335647 , -2.19718745, -2.13361218, -2.13355479,
       -2.13364226, -2.13355006, -2.13359161, -2.13346959, -2.13345007,
       -2.13364551, -2.22042486, -2.13378049, -2.13367684, -2.13342852,
       -2.1336619 , -2.22073873, -2.13365684, -2.13359591, -2.13366427,
       -2.13353028, -2.13355302, -2.13378125, -2.13356322, -2.13352041,
       -2.13346042, -2.13374982, -2.13344401, -2.1336136 , -2.13344684,
       -2.13360135, -2.13356043, -2.13349729, -2.13363082, -2.13341378,
       -2.13359791, -2.13355621, -2.13358613, -2.13370261, -2.13381173,
       -2.13365609, -2.13338784, -2.1334863 , -2.13346828, -2.13363833,
       -2.13357514, -2.13329315, -2.13330307, -2.13350948, -2.13340548,
       -2.13370076, -2.1334404 , -2.13360401, -2.1336988 , -2.13348305,
       -2.13374249, -2.13326083, -2.13359019, -2.13374615, -2.1334884 ,
       -2.13353861, -2.13365243, -2.13377602, -2.13359054, -2.13352688,
       -2.13349547, -2.13365987, -2.13350456, -2.13358102, -2.13352441,
       -2.13379724, -2.13367645, -2.13369681, -2.13350546, -2.13356005,
       -2.13357741, -2.13365952, -2.13341472, -2.13361657, -2.13388602,
       -2.13380393, -2.13360671, -2.13349969, -2.13354076, -2.13341259,
       -2.13338997, -2.13380116, -2.13368256, -2.13358571, -2.1334006 ,
       -2.13343493, -2.13338392, -2.13364841, -2.13357858, -2.13351256,
       -2.13357786, -2.13348985, -2.13357661]), 'split1_test_score': array([-2.22057832, -2.13140319, -2.23331649, -2.24614767, -2.23875043,
       -2.24198253, -2.36309152, -2.12783992, -2.19923464, -2.19461059,
       -2.13287256, -2.14172334, -2.1314462 , -2.13050019, -2.24716956,
       -2.61375942, -2.13131027, -2.15323212, -2.13066706, -2.14364359,
       -2.1619432 , -2.13137466, -2.131027  , -2.13125545, -2.12735876,
       -2.13093646, -2.13093399, -2.13126269, -2.1310876 , -2.24717073,
       -2.13126358, -2.13121133, -2.21740038, -2.13135118, -2.1311825 ,
       -2.13144136, -2.1311688 , -2.13129023, -2.13093982, -2.13088546,
       -2.13145116, -2.24681545, -2.13187715, -2.13155035, -2.13082597,
       -2.13150225, -2.24716253, -2.13148604, -2.13130294, -2.13150986,
       -2.13111178, -2.13117738, -2.13187951, -2.13120702, -2.13108349,
       -2.13091422, -2.13178249, -2.13086867, -2.13135543, -2.13087649,
       -2.13131904, -2.13119891, -2.13101773, -2.13140691, -2.13078559,
       -2.13130885, -2.13118663, -2.1312741 , -2.1316341 , -2.13197471,
       -2.13148363, -2.13071512, -2.13098671, -2.13093616, -2.1314295 ,
       -2.13124183, -2.1304643 , -2.13049012, -2.13105234, -2.13076297,
       -2.13162806, -2.13085868, -2.13132692, -2.13162165, -2.13097757,
       -2.13176005, -2.1303809 , -2.13128604, -2.13177124, -2.13099262,
       -2.13113574, -2.13147211, -2.1318633 , -2.13128708, -2.13110202,
       -2.13101258, -2.13149576, -2.13103834, -2.13125908, -2.13109495,
       -2.13192932, -2.13154909, -2.13161516, -2.13104091, -2.13119778,
       -2.13124849, -2.13149462, -2.13078816, -2.13136428, -2.13221135,
       -2.13195025, -2.13133492, -2.13102454, -2.13114194, -2.13078235,
       -2.13072089, -2.13194158, -2.13156888, -2.13127286, -2.1307497 ,
       -2.13084361, -2.13070456, -2.13145993, -2.13125192, -2.1310611 ,
       -2.1312498 , -2.13099672, -2.13124613]), 'split2_test_score': array([-2.28526337, -2.14354512, -2.30093064, -2.31644907, -2.30753508,
       -2.31142825, -2.26418198, -2.11769945, -2.25705295, -2.12427906,
       -2.10815508, -2.10632626, -2.10953572, -2.11091323, -2.31767904,
       -2.5023108 , -2.10972402, -2.18563058, -2.11065824, -2.10657181,
       -2.10964676, -2.10963453, -2.11012427, -2.10980064, -2.12189946,
       -2.11025485, -2.1102585 , -2.1097905 , -2.11003774, -2.31768043,
       -2.10978925, -2.1098626 , -2.28119317, -2.10966709, -2.10990322,
       -2.10954239, -2.10992257, -2.10975198, -2.11024988, -2.11033045,
       -2.1095289 , -2.31725389, -2.10898923, -2.1093983 , -2.11041907,
       -2.10946067, -2.31767059, -2.10948174, -2.10973424, -2.10945078,
       -2.11000335, -2.10991046, -2.10898653, -2.10986866, -2.11004359,
       -2.11028777, -2.10910094, -2.11035541, -2.10966119, -2.11034377,
       -2.1097118 , -2.10988008, -2.11013756, -2.10958991, -2.11047952,
       -2.10972599, -2.1098974 , -2.10977453, -2.10929034, -2.10888893,
       -2.10948488, -2.11058553, -2.11018209, -2.11025529, -2.10955873,
       -2.10981973, -2.11097032, -2.11092875, -2.11008803, -2.11051347,
       -2.10929811, -2.11037028, -2.10970082, -2.10930634, -2.11019524,
       -2.10912943, -2.11111086, -2.10975784, -2.10911523, -2.11017359,
       -2.10996935, -2.1095001 , -2.10900506, -2.10975638, -2.11001723,
       -2.11014494, -2.10946911, -2.11010804, -2.10979555, -2.11002728,
       -2.1089346 , -2.10939994, -2.10931469, -2.11010437, -2.10988167,
       -2.1098104 , -2.10947059, -2.11047566, -2.10964892, -2.10865391,
       -2.10891352, -2.10968969, -2.11012779, -2.10996057, -2.11048437,
       -2.11057683, -2.10892225, -2.10937435, -2.10977627, -2.11053342,
       -2.11039275, -2.11060148, -2.10951684, -2.10980558, -2.11007552,
       -2.10980856, -2.1101677 , -2.1098137 ]), 'mean_test_score': array([-2.23513476, -2.13815991, -2.24779116, -2.26080529, -2.2532802 ,
       -2.2565443 , -2.30172712, -2.12629477, -2.21331946, -2.16520366,
       -2.12502324, -2.12801962, -2.12487526, -2.12490678, -2.26186457,
       -2.52674096, -2.12487756, -2.16363878, -2.12489842, -2.12890012,
       -2.14035748, -2.12487641, -2.12488394, -2.12487863, -2.12772939,
       -2.12488657, -2.12488666, -2.12487848, -2.12488239, -2.26186577,
       -2.12487846, -2.12487954, -2.231927  , -2.12487682, -2.12488017,
       -2.12487534, -2.12488048, -2.12487794, -2.12488643, -2.12488866,
       -2.12487519, -2.26149807, -2.12488229, -2.12487516, -2.12489119,
       -2.12487494, -2.26185728, -2.12487488, -2.1248777 , -2.12487497,
       -2.1248818 , -2.12488028, -2.12488243, -2.12487963, -2.1248825 ,
       -2.12488747, -2.12487775, -2.12488936, -2.12487674, -2.12488903,
       -2.1248774 , -2.12487981, -2.12488419, -2.12487588, -2.12489296,
       -2.12487759, -2.12488008, -2.12487825, -2.12487568, -2.12489179,
       -2.12487487, -2.12489616, -2.12488503, -2.12488658, -2.12487552,
       -2.1248789 , -2.12490925, -2.12490731, -2.12488328, -2.12489397,
       -2.12487564, -2.12488978, -2.12487725, -2.1248756 , -2.12488528,
       -2.12487732, -2.12491753, -2.12487802, -2.12487754, -2.12488487,
       -2.12488123, -2.12487488, -2.12488146, -2.124878  , -2.12488204,
       -2.12488433, -2.12487491, -2.12488365, -2.12487855, -2.12488221,
       -2.12488705, -2.12487516, -2.12487555, -2.12488358, -2.12487983,
       -2.12487877, -2.12487491, -2.12489285, -2.12487659, -2.12491709,
       -2.12488923, -2.12487711, -2.12488401, -2.12488109, -2.12489311,
       -2.1248959 , -2.12488833, -2.12487527, -2.12487828, -2.12489457,
       -2.12489043, -2.12489665, -2.12487506, -2.1248787 , -2.12488306,
       -2.12487874, -2.12488476, -2.12487881]), 'std_test_score': array([0.03646984, 0.0050509 , 0.03885137, 0.04078783, 0.03971897,
       0.04020851, 0.04375152, 0.00648001, 0.03157026, 0.02984542,
       0.01193714, 0.01551589, 0.01088374, 0.00996106, 0.04091458,
       0.06347267, 0.01075581, 0.01555799, 0.01012961, 0.0160567 ,
       0.02230364, 0.01081655, 0.01048541, 0.01070389, 0.00491841,
       0.01039769, 0.01039526, 0.01071075, 0.01054369, 0.04091472,
       0.0107116 , 0.01066196, 0.03580044, 0.01079444, 0.01063449,
       0.0108792 , 0.01062142, 0.01073685, 0.01040101, 0.01034732,
       0.01088838, 0.04087093, 0.01126492, 0.01097817, 0.01028834,
       0.01093514, 0.04091371, 0.01092061, 0.01074888, 0.01094196,
       0.01056688, 0.0106296 , 0.01126688, 0.01065786, 0.01053975,
       0.01037575, 0.01118476, 0.01033069, 0.01079844, 0.01033844,
       0.0107641 , 0.01065013, 0.01047647, 0.01084688, 0.01024817,
       0.01075447, 0.01063843, 0.01072157, 0.01105281, 0.01134056,
       0.01091845, 0.0101778 , 0.01044651, 0.0103974 , 0.01086808,
       0.01069096, 0.00992374, 0.00995082, 0.01050981, 0.01022562,
       0.01104743, 0.0103208 , 0.01077155, 0.01104174, 0.01043767,
       0.01116482, 0.00983333, 0.01073289, 0.01117476, 0.01045222,
       0.01058983, 0.01090799, 0.01125344, 0.01073387, 0.01055753,
       0.0104715 , 0.01092932, 0.01049633, 0.01070733, 0.01055075,
       0.01130583, 0.01097704, 0.01103596, 0.0104988 , 0.01064906,
       0.01069728, 0.0109283 , 0.01025073, 0.01080678, 0.01152011,
       0.01132186, 0.0107791 , 0.01048304, 0.01059575, 0.01024494,
       0.01018357, 0.01131522, 0.01099471, 0.0107204 , 0.01021238,
       0.01030585, 0.01016723, 0.01089659, 0.01070054, 0.01051824,
       0.01069852, 0.01045619, 0.01069505]), 'rank_test_score': array([118, 112, 119, 122, 120, 121, 127, 108, 116, 115, 107, 110,  12,
       102, 125, 128,  30, 114, 101, 111, 113,  21,  70,  42, 109,  79,
        81,  40,  63, 126,  39,  48, 117,  24,  53,  14,  55,  34,  78,
        85,  11, 123,  62,  10,  91,   6, 124,   2,  32,   7,  59,  54,
        64,  49,  65,  83,  33,  88,  23,  86,  28,  50,  72,  20,  94,
        31,  52,  37,  19,  92,   1,  99,  76,  80,  15,  47, 104, 103,
        67,  96,  18,  89,  26,  17,  77,  27, 106,  36,  29,  75,  57,
         3,  58,  35,  60,  73,   5,  69,  41,  61,  82,   9,  16,  68,
        51,  45,   4,  93,  22, 105,  87,  25,  71,  56,  95,  98,  84,
        13,  38,  97,  90, 100,   8,  43,  66,  44,  74,  46], dtype=int32)}
-2.1248748663186046
OrderedDict([('alpha', 0.26758004135210345), ('degree', 6), ('kernel', 'rbf')])
[CV 1/3] END alpha=0.17490931354945502, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.2678850235393402, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.2624576644929919, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.24851957823906975, degree=5, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 2/3] END alpha=0.25556913120616315, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.002206381446402118, degree=4, kernel=rbf;, score=-2.308 total time=   0.1s
[CV 2/3] END alpha=0.25813372377207366, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2678850235393402, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2624576644929919, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26417503512159185, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25556913120616315, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.001382895550024558, degree=2, kernel=rbf;, score=-2.216 total time=   0.1s
[CV 3/3] END alpha=0.25813372377207366, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.00010202197121689435, degree=2, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 3/3] END alpha=0.2624576644929919, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26417503512159185, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2655263471274298, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.002206381446402118, degree=4, kernel=rbf;, score=-2.214 total time=   0.1s
[CV 1/3] END alpha=0.25813372377207366, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.00010202197121689435, degree=2, kernel=rbf;, score=-2.221 total time=   0.1s
[CV 1/3] END alpha=0.263968783720418, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26417503512159185, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2655263471274298, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=3.3240996512502616, degree=2, kernel=rbf;, score=-2.278 total time=   0.1s
[CV 2/3] END alpha=0.2637716348163903, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.26761947642230466, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 3/3] END alpha=0.263968783720418, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.27229134319436876, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 3/3] END alpha=0.2655263471274298, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.001382895550024558, degree=2, kernel=rbf;, score=-2.311 total time=   0.1s
[CV 2/3] END alpha=0.25809102958987845, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.00010202197121689435, degree=2, kernel=rbf;, score=-2.318 total time=   0.1s
[CV 2/3] END alpha=0.263968783720418, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.27229134319436876, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.27950241719832125, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.001382895550024558, degree=2, kernel=rbf;, score=-2.242 total time=   0.1s
[CV 1/3] END alpha=0.25809102958987845, degree=4, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.26761947642230466, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.27004478996759207, degree=3, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 3/3] END alpha=0.27229134319436876, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.27950241719832125, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.1969137452682661, degree=2, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.260746345658873, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.264466923993487, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.27004478996759207, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 1/3] END alpha=0.25910469937855585, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.27950241719832125, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=3.3240996512502616, degree=2, kernel=rbf;, score=-2.363 total time=   0.1s
[CV 3/3] END alpha=0.25809102958987845, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26761947642230466, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.27004478996759207, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.25910469937855585, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2752241872144021, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.1969137452682661, degree=2, kernel=rbf;, score=-2.128 total time=   0.1s
[CV 3/3] END alpha=0.2637716348163903, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.264466923993487, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.2756249594475844, degree=3, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 3/3] END alpha=0.25910469937855585, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2752241872144021, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.015919950476852764, degree=5, kernel=rbf;, score=-2.184 total time=   0.1s
[CV 3/3] END alpha=0.260746345658873, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2680096982208293, degree=3, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 3/3] END alpha=0.2756249594475844, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 1/3] END alpha=0.26157832479351184, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2752241872144021, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 3/3] END alpha=3.3240996512502616, degree=2, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 1/3] END alpha=0.2637716348163903, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.264466923993487, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2756249594475844, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.26157832479351184, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2650193707817598, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.1969137452682661, degree=2, kernel=rbf;, score=-2.118 total time=   0.1s
[CV 2/3] END alpha=0.260746345658873, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2680096982208293, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.26758004135210345, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26157832479351184, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2650193707817598, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2880219163836826, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.26378709214324497, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.26116427532880837, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.26758004135210345, degree=6, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26738851798091734, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2650193707817598, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.015919950476852764, degree=5, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.00010003932627085652, degree=6, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 2/3] END alpha=0.26116427532880837, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.25430557123493064, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26738851798091734, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.25965654856506437, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.9664750089814659, degree=6, kernel=rbf;, score=-2.177 total time=   0.1s
[CV 3/3] END alpha=0.00010003932627085652, degree=6, kernel=rbf;, score=-2.318 total time=   0.1s
[CV 3/3] END alpha=0.2680096982208293, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26758004135210345, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26738851798091734, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.25965654856506437, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 2/3] END alpha=0.015919950476852764, degree=5, kernel=rbf;, score=-2.199 total time=   0.1s
[CV 1/3] END alpha=0.00010003932627085652, degree=6, kernel=rbf;, score=-2.221 total time=   0.1s
[CV 1/3] END alpha=0.26116427532880837, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.25430557123493064, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2737996303219965, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25965654856506437, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.9664750089814659, degree=6, kernel=rbf;, score=-2.195 total time=   0.1s
[CV 1/3] END alpha=0.26378709214324497, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2622977702885637, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25430557123493064, degree=5, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 2/3] END alpha=0.2737996303219965, degree=6, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.26168542259839894, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.2880219163836826, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.26288445034576374, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2622977702885637, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2590024791783643, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2737996303219965, degree=6, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26168542259839894, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.9664750089814659, degree=6, kernel=rbf;, score=-2.124 total time=   0.1s
[CV 2/3] END alpha=0.26378709214324497, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.2622977702885637, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.2590024791783643, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2641930167768227, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26168542259839894, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2880219163836826, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.26288445034576374, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.274065247686657, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2590024791783643, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2641930167768227, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2554685935023447, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.39336450577943866, degree=2, kernel=rbf;, score=-2.106 total time=   0.1s
[CV 1/3] END alpha=0.00848346361097487, degree=6, kernel=rbf;, score=-2.197 total time=   0.1s
[CV 3/3] END alpha=0.274065247686657, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.258128615219651, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2641930167768227, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2554685935023447, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.39336450577943866, degree=2, kernel=rbf;, score=-2.136 total time=   0.1s
[CV 3/3] END alpha=0.26288445034576374, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.274065247686657, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.258128615219651, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.26099556632886817, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2554685935023447, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26694111185805924, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.26530017723148247, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.262809972055412, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.258128615219651, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26099556632886817, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2544053241777613, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26694111185805924, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.00848346361097487, degree=6, kernel=rbf;, score=-2.281 total time=   0.1s
[CV 1/3] END alpha=0.262809972055412, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.26665264677986933, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26099556632886817, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2544053241777613, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.39336450577943866, degree=2, kernel=rbf;, score=-2.142 total time=   0.1s
[CV 2/3] END alpha=0.00848346361097487, degree=6, kernel=rbf;, score=-2.217 total time=   0.1s
[CV 2/3] END alpha=0.262809972055412, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.26665264677986933, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2594497498848656, degree=2, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2544053241777613, degree=3, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 1/3] END alpha=0.2505854306724498, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26530017723148247, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26067538953778996, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.26665264677986933, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2594497498848656, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2750821197379381, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2505854306724498, degree=6, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 1/3] END alpha=0.26238636186673103, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26067538953778996, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2634114262959121, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2594497498848656, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2750821197379381, degree=4, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.26694111185805924, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.26530017723148247, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.26067538953778996, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.2634114262959121, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2677786606418569, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2750821197379381, degree=4, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2505854306724498, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.26238636186673103, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.25774918062339863, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2634114262959121, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2677786606418569, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26897641568274794, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.00010032031805861906, degree=2, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 1/3] END alpha=0.26685743213139135, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25774918062339863, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.24996394388819776, degree=2, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2677786606418569, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26897641568274794, degree=2, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.00010032031805861906, degree=2, kernel=rbf;, score=-2.221 total time=   0.1s
[CV 3/3] END alpha=0.26238636186673103, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.25774918062339863, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 2/3] END alpha=0.24996394388819776, degree=2, kernel=rbf;, score=-2.130 total time=   0.1s
[CV 1/3] END alpha=0.25989504003853753, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26897641568274794, degree=2, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 3/3] END alpha=9.958940942385151, degree=5, kernel=rbf;, score=-2.502 total time=   0.1s
[CV 3/3] END alpha=0.26685743213139135, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.27247572221474736, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 3/3] END alpha=0.24996394388819776, degree=2, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 2/3] END alpha=0.25989504003853753, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2639473073927643, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.00010032031805861906, degree=2, kernel=rbf;, score=-2.318 total time=   0.1s
[CV 2/3] END alpha=0.26685743213139135, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.27247572221474736, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.25041107919387856, degree=4, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.25989504003853753, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2639473073927643, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.053592696636314476, degree=2, kernel=rbf;, score=-2.152 total time=   0.1s
[CV 3/3] END alpha=0.2642474213977335, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.25696152686458623, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.25041107919387856, degree=4, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 1/3] END alpha=0.26370936820481516, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2639473073927643, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2645935684779781, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2621495750521851, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.27247572221474736, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.25041107919387856, degree=4, kernel=rbf;, score=-2.130 total time=   0.1s
[CV 2/3] END alpha=0.26370936820481516, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.254903862729017, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=9.958940942385151, degree=5, kernel=rbf;, score=-2.464 total time=   0.1s
[CV 2/3] END alpha=0.2621495750521851, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.25696152686458623, degree=4, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.26013698519198586, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26370936820481516, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.254903862729017, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=9.958940942385151, degree=5, kernel=rbf;, score=-2.614 total time=   0.1s
[CV 1/3] END alpha=0.2621495750521851, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.25696152686458623, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.26013698519198586, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26087342013300074, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.254903862729017, degree=5, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 3/3] END alpha=0.2645935684779781, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2642474213977335, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26537356900584785, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26013698519198586, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26087342013300074, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.25652814051138995, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.25347390877670795, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2581918861200376, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.26537356900584785, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.25513340544394053, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26087342013300074, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.25652814051138995, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.053592696636314476, degree=2, kernel=rbf;, score=-2.186 total time=   0.1s
[CV 1/3] END alpha=0.2581918861200376, degree=2, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 1/3] END alpha=0.2570968383628279, degree=4, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.25513340544394053, degree=5, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 2/3] END alpha=0.2748811647884216, degree=2, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.2541228881429458, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 2/3] END alpha=0.2645935684779781, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2642474213977335, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.26537356900584785, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.25513340544394053, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2748811647884216, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25652814051138995, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.41395807538994206, degree=6, kernel=rbf;, score=-2.144 total time=   0.1s
[CV 3/3] END alpha=0.25725187117179815, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.2570968383628279, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2699458012496296, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2748811647884216, degree=2, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2541228881429458, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.053592696636314476, degree=2, kernel=rbf;, score=-2.153 total time=   0.1s
[CV 2/3] END alpha=0.2581918861200376, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.2570968383628279, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.2699458012496296, degree=2, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.26865226469215553, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2541228881429458, degree=5, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 3/3] END alpha=0.25347390877670795, degree=6, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 2/3] END alpha=0.25725187117179815, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2647450254686788, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2699458012496296, degree=2, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26865226469215553, degree=2, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.2671781024049463, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.25347390877670795, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.25725187117179815, degree=6, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 2/3] END alpha=0.2647450254686788, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2567888378482598, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26865226469215553, degree=2, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2671781024049463, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.41395807538994206, degree=6, kernel=rbf;, score=-2.136 total time=   0.1s
[CV 2/3] END alpha=0.26702675272053134, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2647450254686788, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2567888378482598, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26973458035433023, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2671781024049463, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.007415996930946248, degree=4, kernel=rbf;, score=-2.200 total time=   0.1s
[CV 3/3] END alpha=0.6100255549654917, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.26702675272053134, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2626698681177135, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2567888378482598, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26973458035433023, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.263585694201946, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.6100255549654917, degree=2, kernel=rbf;, score=-2.149 total time=   0.1s
[CV 2/3] END alpha=0.00018603799488347352, degree=2, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 3/3] END alpha=0.2626698681177135, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.26488118487126056, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.26973458035433023, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.263585694201946, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.41395807538994206, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.26702675272053134, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.2626698681177135, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.26488118487126056, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2599394018169485, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.263585694201946, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.007415996930946248, degree=4, kernel=rbf;, score=-2.221 total time=   0.1s
[CV 2/3] END alpha=0.2657056097455096, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.00018603799488347352, degree=2, kernel=rbf;, score=-2.317 total time=   0.1s
[CV 2/3] END alpha=0.25953877067213527, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.26488118487126056, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2599394018169485, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.26028843380883054, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.007415996930946248, degree=4, kernel=rbf;, score=-2.285 total time=   0.1s
[CV 1/3] END alpha=0.2657056097455096, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2740264887507161, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.26626256874280496, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2698408850838567, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.26265038681141506, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.26028843380883054, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.10844852766896036, degree=4, kernel=rbf;, score=-2.140 total time=   0.1s
[CV 2/3] END alpha=0.25969904985898823, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2740264887507161, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 3/3] END alpha=0.25953877067213527, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.2698408850838567, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2599394018169485, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26028843380883054, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.6100255549654917, degree=2, kernel=rbf;, score=-2.162 total time=   0.1s
[CV 1/3] END alpha=0.00018603799488347352, degree=2, kernel=rbf;, score=-2.220 total time=   0.1s
[CV 1/3] END alpha=0.25953877067213527, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 2/3] END alpha=0.2698408850838567, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.26265038681141506, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2635489830594473, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 2/3] END alpha=0.10844852766896036, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.2657056097455096, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2740264887507161, degree=3, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.26626256874280496, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.25884445741327133, degree=2, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.26265038681141506, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2635489830594473, degree=6, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.0036543554356017745, degree=4, kernel=rbf;, score=-2.209 total time=   0.1s
[CV 2/3] END alpha=0.26364669133060914, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 3/3] END alpha=0.26867298007669865, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 3/3] END alpha=0.26626256874280496, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.25884445741327133, degree=2, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2635263419995578, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2635489830594473, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.10844852766896036, degree=4, kernel=rbf;, score=-2.144 total time=   0.1s
[CV 1/3] END alpha=0.25969904985898823, degree=6, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.26867298007669865, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2555246189786122, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.25884445741327133, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2635263419995578, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.25917556792372143, degree=4, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.0036543554356017745, degree=4, kernel=rbf;, score=-2.301 total time=   0.1s
[CV 3/3] END alpha=0.25969904985898823, degree=6, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.26867298007669865, degree=3, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 2/3] END alpha=0.2555246189786122, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2721081057904869, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.2635263419995578, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.25917556792372143, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.0036543554356017745, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.26364669133060914, degree=2, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.2562231503551595, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2555246189786122, degree=3, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2721081057904869, degree=5, kernel=rbf;, score=-2.132 total time=   0.1s
[CV 1/3] END alpha=0.2677600110778633, degree=3, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.25917556792372143, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.00034890466791556474, degree=5, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=0.17490931354945502, degree=6, kernel=rbf;, score=-2.127 total time=   0.1s
[CV 1/3] END alpha=0.2678850235393402, degree=5, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.264569094200565, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 3/3] END alpha=0.2721081057904869, degree=5, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2677600110778633, degree=3, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.2634857126795371, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 3/3] END alpha=0.00034890466791556474, degree=5, kernel=rbf;, score=-2.316 total time=   0.1s
[CV 3/3] END alpha=0.26364669133060914, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.2562231503551595, degree=5, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.264569094200565, degree=4, kernel=rbf;, score=-2.134 total time=   0.1s
[CV 1/3] END alpha=0.24851957823906975, degree=5, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2677600110778633, degree=3, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 2/3] END alpha=0.2634857126795371, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 1/3] END alpha=0.00034890466791556474, degree=5, kernel=rbf;, score=-2.220 total time=   0.1s
[CV 2/3] END alpha=0.002206381446402118, degree=4, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 3/3] END alpha=0.17490931354945502, degree=6, kernel=rbf;, score=-2.122 total time=   0.1s
[CV 3/3] END alpha=0.2562231503551595, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.264569094200565, degree=4, kernel=rbf;, score=-2.131 total time=   0.1s
[CV 2/3] END alpha=0.24851957823906975, degree=5, kernel=rbf;, score=-2.130 total time=   0.1s
[CV 1/3] END alpha=0.25556913120616315, degree=3, kernel=rbf;, score=-2.133 total time=   0.1s
[CV 3/3] END alpha=0.2634857126795371, degree=4, kernel=rbf;, score=-2.110 total time=   0.1s
