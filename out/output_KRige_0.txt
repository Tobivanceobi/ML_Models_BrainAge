no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.09291077, 0.07010015, 0.06941533, 0.06780593, 0.07019925,
       0.06906168, 0.06923294, 0.06927355, 0.06959955, 0.06919312,
       0.06880879, 0.06938982, 0.07034198, 0.07058382, 0.06875459,
       0.06934595, 0.07008227, 0.0693593 , 0.07033984, 0.06909553,
       0.06860201, 0.08990431, 0.08222667, 0.09717592, 0.09110943,
       0.08743699, 0.09026925, 0.08508722, 0.10160089, 0.08741331,
       0.08897789, 0.08334907, 0.08077844, 0.08265726, 0.09446756,
       0.0846289 , 0.09238203, 0.08960676, 0.085584  , 0.09964498,
       0.07698234, 0.09183216, 0.07610472, 0.08918007, 0.07928944,
       0.08307632, 0.08727686, 0.08051817, 0.06342745, 0.09172781,
       0.07854716, 0.07285015, 0.08474517, 0.08705449, 0.08328311,
       0.07098373, 0.0739851 , 0.08562636, 0.07637612, 0.0742058 ,
       0.08008019, 0.07664283, 0.06448698, 0.07679868, 0.07869124,
       0.06602184, 0.06349643, 0.06728395, 0.06389753, 0.06852277,
       0.07103332, 0.0649368 , 0.06448476, 0.06548977, 0.066926  ,
       0.06452831, 0.06485748, 0.06393027, 0.06867997, 0.06271593,
       0.06245971, 0.06462836, 0.06278499, 0.06300696, 0.06408421,
       0.06407968, 0.06450836, 0.06268104, 0.06419285, 0.06220039,
       0.06567852, 0.06572294, 0.06341982, 0.06661773, 0.06918399,
       0.06992245, 0.06671826, 0.0646588 , 0.06359315, 0.0662473 ,
       0.0628353 , 0.06218719, 0.06451178, 0.06264027, 0.06343611,
       0.06469107, 0.06341195, 0.06320397, 0.06298431, 0.06287479,
       0.06519636, 0.06696844, 0.06692171, 0.06673018, 0.07226729,
       0.07221516, 0.07120196, 0.07518037, 0.07023215, 0.06935183,
       0.07870126, 0.06739155, 0.06538955, 0.07368453, 0.06836375,
       0.07230345, 0.06897934, 0.06550336]), 'std_fit_time': array([2.89204783e-05, 5.62814527e-04, 6.85415751e-04, 1.60651522e-03,
       3.68654646e-04, 1.75283801e-04, 1.06621158e-03, 1.10026298e-03,
       2.48136541e-04, 5.88481324e-04, 2.20611878e-04, 6.39604221e-04,
       6.24179365e-04, 1.88954608e-04, 8.36435316e-04, 4.54419849e-04,
       1.40772033e-04, 3.48321466e-04, 8.74811978e-04, 2.35779889e-04,
       1.17537191e-03, 1.62677881e-02, 8.68079484e-03, 7.55072205e-03,
       1.71943174e-02, 7.57282388e-03, 1.57264612e-02, 1.23985944e-02,
       4.88753358e-04, 1.25708832e-02, 1.53520790e-02, 1.33722647e-02,
       1.48898201e-02, 1.34846359e-03, 9.11715983e-03, 1.20497096e-02,
       8.07453381e-03, 1.60178478e-02, 1.26408102e-02, 3.96542416e-03,
       1.13502950e-02, 3.48651486e-03, 1.50758000e-02, 1.31876007e-02,
       9.67741393e-03, 3.00239420e-03, 3.91429205e-03, 9.92160811e-03,
       1.58509450e-04, 3.14925576e-03, 1.02149876e-02, 4.62275247e-03,
       1.25654092e-03, 4.25719398e-03, 1.14026914e-03, 7.33934518e-03,
       2.02971922e-03, 6.17842442e-03, 5.62016000e-03, 6.39066222e-03,
       3.61102880e-03, 2.16540184e-03, 1.70179786e-03, 4.26579867e-03,
       1.21335572e-02, 7.06798577e-03, 8.00232165e-04, 6.16678537e-03,
       1.42014176e-03, 3.79860682e-03, 4.00519678e-03, 8.52785860e-04,
       2.64617404e-03, 2.13963717e-03, 2.78317667e-03, 1.78114724e-03,
       2.14269318e-03, 1.05280857e-03, 9.73882947e-04, 1.53930087e-04,
       6.52207376e-05, 2.31485747e-03, 2.40052216e-04, 2.04566044e-03,
       2.61244396e-03, 1.94394536e-03, 2.86579321e-03, 7.91201849e-04,
       1.73554954e-03, 4.03640628e-04, 1.83258020e-03, 2.38065022e-03,
       7.22160496e-04, 4.33293102e-03, 2.74058153e-03, 1.12270279e-03,
       2.85372985e-03, 2.33190592e-03, 2.00707722e-03, 1.67396866e-03,
       3.85848697e-04, 4.50683139e-04, 1.67810164e-03, 3.47748807e-04,
       1.97971526e-03, 1.79457891e-03, 1.93569843e-03, 1.27475702e-03,
       9.30774088e-04, 8.21825234e-04, 2.92097754e-03, 1.58976647e-03,
       2.09137209e-03, 2.02773409e-04, 2.91443498e-03, 1.88379755e-03,
       3.02208669e-03, 6.85397680e-04, 2.21764183e-03, 2.33741127e-03,
       3.33543267e-03, 4.51481327e-03, 4.91097301e-04, 2.40033587e-04,
       2.83640613e-03, 3.13799850e-03, 3.11572537e-03, 3.24485730e-04]), 'mean_score_time': array([0.04681524, 0.04480211, 0.04446785, 0.04454303, 0.0450418 ,
       0.04461137, 0.04425383, 0.04417388, 0.04438519, 0.04466955,
       0.04445299, 0.04443161, 0.04465389, 0.04439767, 0.04435492,
       0.04424294, 0.04418461, 0.04433091, 0.04485281, 0.04425534,
       0.04469244, 0.0468305 , 0.04548319, 0.04466629, 0.0474124 ,
       0.04525765, 0.04524533, 0.04523126, 0.04460263, 0.04489811,
       0.04506326, 0.04739992, 0.04545927, 0.04525224, 0.04562473,
       0.04515719, 0.04657316, 0.05311354, 0.04547262, 0.04812304,
       0.04498919, 0.04858343, 0.04599222, 0.04758088, 0.04721538,
       0.04821372, 0.04676811, 0.04555853, 0.0448854 , 0.05421948,
       0.0450929 , 0.04669913, 0.04637853, 0.04992127, 0.04709546,
       0.0452582 , 0.0469749 , 0.04798865, 0.04602512, 0.04530176,
       0.04743528, 0.04532321, 0.04590766, 0.04677518, 0.04795138,
       0.04619908, 0.0445927 , 0.04664977, 0.0446643 , 0.04974651,
       0.05055102, 0.04530303, 0.04721896, 0.047815  , 0.04816214,
       0.0462141 , 0.04637861, 0.04548502, 0.05264862, 0.04522061,
       0.04488007, 0.04707964, 0.04500723, 0.0457046 , 0.04660487,
       0.04616904, 0.04607415, 0.04523627, 0.04668967, 0.04483589,
       0.04776557, 0.04770168, 0.04543622, 0.04738959, 0.04870303,
       0.04777233, 0.0477345 , 0.04617906, 0.04512453, 0.04814458,
       0.04503385, 0.04452022, 0.04706987, 0.04444559, 0.04606104,
       0.04717048, 0.04573027, 0.04615831, 0.04583319, 0.04553374,
       0.04882034, 0.04757341, 0.04910572, 0.04746779, 0.05168295,
       0.04804182, 0.04904564, 0.05211981, 0.05007577, 0.04987884,
       0.04847209, 0.0486261 , 0.04693715, 0.04990363, 0.04876296,
       0.04649607, 0.0456833 , 0.04799453]), 'std_score_time': array([0.00052814, 0.00023947, 0.00054271, 0.00057312, 0.00068701,
       0.0004707 , 0.00050869, 0.00043255, 0.00057863, 0.0006834 ,
       0.00039583, 0.00040817, 0.00053317, 0.00044435, 0.00038252,
       0.00028078, 0.00038125, 0.00023368, 0.00033903, 0.00037539,
       0.00102958, 0.00244215, 0.00067537, 0.00063243, 0.00193607,
       0.00084572, 0.00078664, 0.00100381, 0.0004147 , 0.00056694,
       0.00011303, 0.00273845, 0.00104584, 0.00025243, 0.00095671,
       0.00057609, 0.00261689, 0.00410781, 0.00064582, 0.00213465,
       0.0006094 , 0.00227709, 0.00150933, 0.00165828, 0.00242493,
       0.00183494, 0.00202823, 0.00079289, 0.00037983, 0.00314883,
       0.0007047 , 0.00172002, 0.00186751, 0.00670204, 0.00181179,
       0.00049841, 0.00148277, 0.00237611, 0.00129543, 0.00081986,
       0.00215929, 0.00047432, 0.00197573, 0.00226596, 0.00216539,
       0.00290996, 0.00042593, 0.00190224, 0.00037751, 0.00352468,
       0.0036824 , 0.00075327, 0.00225379, 0.00239377, 0.00267026,
       0.00202964, 0.00182282, 0.00104959, 0.00303779, 0.00058597,
       0.00047313, 0.00166137, 0.00070456, 0.00216648, 0.00193006,
       0.00211772, 0.00217679, 0.00101942, 0.00198572, 0.00079488,
       0.00146704, 0.00158386, 0.00038734, 0.00193758, 0.00075577,
       0.00179094, 0.00225276, 0.0021168 , 0.00119304, 0.00158008,
       0.00047467, 0.00019463, 0.00160754, 0.00042898, 0.00217099,
       0.00173365, 0.00209514, 0.00179037, 0.00104019, 0.00114487,
       0.00429777, 0.00177651, 0.00141144, 0.00093362, 0.0021822 ,
       0.00239266, 0.00203506, 0.00129934, 0.00166249, 0.00220893,
       0.00077191, 0.00361546, 0.0006509 , 0.00083569, 0.00185712,
       0.00187816, 0.0021057 , 0.00074215]), 'param_alpha': masked_array(data=[0.01340841190241529, 0.553152040445465,
                   0.0012684250442402828, 3.1382423900377203,
                   0.17110275672818984, 1.2220478488978093,
                   0.07575793647454118, 9.615476303534052,
                   2.1580480971009406, 0.0005682821567047842, 0.0001,
                   0.05831280401891129, 0.09212349982727913,
                   0.09878731165906124, 0.00010045385044647252,
                   0.004644940663689575, 0.09017255356290463,
                   0.09108441177223199, 0.08993069302206534,
                   0.09068864889179667, 0.03181798469448478,
                   0.00020373041260026944, 0.20761817039784067,
                   0.08847760823457088, 0.09043980281062489,
                   0.003574496932199218, 0.08866039510415157,
                   0.031564341370345764, 0.09039703874775469,
                   0.08850439995403557, 0.053600847007433734,
                   0.09060766697236632, 0.0903678811365685,
                   0.0005965688636224555, 0.09021839939804556,
                   7.559024745166318, 0.09250055779721639,
                   0.12374547006262206, 0.09042880795748795,
                   0.09045594155841087, 2.0527422922264194,
                   0.009145548212313379, 0.09138395896752555,
                   0.08840961434829107, 6.845445626538012,
                   0.0018065576231433627, 0.09256864064867813,
                   0.08883564199000087, 1.4027155476426458,
                   0.09366282672810365, 0.08772945020107484,
                   0.08730821841227307, 0.0912491808517834,
                   0.08855889157344732, 0.08819089538715973,
                   0.0889341053148129, 0.09026245871798506,
                   0.0880353657039472, 0.08800232247935877,
                   0.08729855806418194, 0.09108610193437133,
                   0.08919336878302013, 1.2118284068656753,
                   0.08919045728545273, 0.08795412291933133,
                   0.0883812732650259, 0.09296963594091483,
                   0.09055296553500165, 0.08955293995456347,
                   0.09101987954379985, 0.08922648460941883,
                   0.08527395035246067, 0.08879568803988762,
                   0.09100077538723268, 0.09205946471350714,
                   0.08985877420422268, 0.08915143472948174,
                   0.09165769878665114, 0.09208327779833828,
                   0.08417676533104276, 0.09050638280633788,
                   0.09002581883532154, 0.08855484185425437,
                   0.09312881446274418, 0.09216098803610662,
                   0.09392535446265396, 0.08672122541725782,
                   0.0910627788111402, 0.09206893120318992,
                   0.09107330816009711, 0.0913151798030949,
                   0.09156922213691633, 0.0920849327181777,
                   0.07975026598141201, 0.09544704212994143,
                   0.09107859995523036, 0.08610226901029239,
                   0.08763901261148248, 0.08691999470947386,
                   0.09271587174133253, 0.09133953423966741,
                   0.08984444710524772, 0.08837220875255142,
                   0.08999146856108482, 0.09018532034379934,
                   0.0955566309463112, 0.08808110451288938,
                   0.09420175067424671, 0.09031698197206045,
                   0.0916292633638857, 0.09151701747473005,
                   0.0894641311596939, 0.08804533724037122,
                   0.09092799261679159, 0.08720490538541358,
                   0.09071831390004252, 0.0881664918836271,
                   0.08716147572766605, 0.0902428159135618,
                   0.09184592810186236, 0.0896250524116052,
                   0.0902466670764397, 0.08632449942973319,
                   0.09199775825293109, 0.09026338339703699,
                   0.09589696132726623, 0.09578814433128889,
                   0.08809094464022156],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 2, 3, 6, 2, 2, 5, 5, 3, 3, 6, 2, 2, 6, 2, 6, 2, 6,
                   2, 6, 6, 6, 6, 6, 2, 2, 6, 2, 2, 2, 6, 4, 4, 6, 6, 3,
                   6, 6, 3, 3, 2, 3, 3, 5, 2, 4, 5, 3, 2, 3, 4, 4, 2, 3,
                   5, 5, 3, 3, 4, 5, 4, 2, 5, 4, 6, 6, 4, 6, 5, 4, 2, 6,
                   4, 4, 3, 5, 3, 5, 5, 4, 2, 4, 5, 6, 4, 3, 5, 3, 2, 2,
                   3, 5, 3, 6, 3, 2, 3, 2, 4, 6, 3, 3, 3, 3, 4, 5, 3, 4,
                   6, 5, 5, 2, 4, 5, 2, 2, 4, 6, 4, 3, 4, 4, 5, 6, 4, 5,
                   2, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.01340841190241529), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.553152040445465), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0012684250442402828), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.1382423900377203), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17110275672818984), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.2220478488978093), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07575793647454118), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.615476303534052), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.1580480971009406), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005682821567047842), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05831280401891129), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09212349982727913), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09878731165906124), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010045385044647252), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.004644940663689575), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09017255356290463), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09108441177223199), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08993069302206534), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09068864889179667), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03181798469448478), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00020373041260026944), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.20761817039784067), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08847760823457088), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09043980281062489), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.003574496932199218), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08866039510415157), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.031564341370345764), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09039703874775469), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08850439995403557), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053600847007433734), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09060766697236632), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0903678811365685), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005965688636224555), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09021839939804556), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 7.559024745166318), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09250055779721639), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12374547006262206), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09042880795748795), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09045594155841087), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.0527422922264194), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.009145548212313379), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09138395896752555), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08840961434829107), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 6.845445626538012), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0018065576231433627), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09256864064867813), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08883564199000087), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.4027155476426458), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09366282672810365), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08772945020107484), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08730821841227307), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0912491808517834), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08855889157344732), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08819089538715973), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0889341053148129), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09026245871798506), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0880353657039472), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08800232247935877), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08729855806418194), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09108610193437133), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08919336878302013), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.2118284068656753), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08919045728545273), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08795412291933133), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0883812732650259), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09296963594091483), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09055296553500165), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08955293995456347), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09101987954379985), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08922648460941883), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08527395035246067), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08879568803988762), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09100077538723268), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09205946471350714), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08985877420422268), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08915143472948174), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09165769878665114), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09208327779833828), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08417676533104276), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09050638280633788), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09002581883532154), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08855484185425437), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09312881446274418), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09216098803610662), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09392535446265396), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08672122541725782), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0910627788111402), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09206893120318992), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09107330816009711), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0913151798030949), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09156922213691633), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0920849327181777), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07975026598141201), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09544704212994143), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09107859995523036), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08610226901029239), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08763901261148248), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08691999470947386), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09271587174133253), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09133953423966741), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08984444710524772), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08837220875255142), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08999146856108482), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09018532034379934), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0955566309463112), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08808110451288938), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09420175067424671), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09031698197206045), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0916292633638857), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09151701747473005), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0894641311596939), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08804533724037122), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09092799261679159), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08720490538541358), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09071831390004252), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0881664918836271), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08716147572766605), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0902428159135618), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09184592810186236), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0896250524116052), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0902466670764397), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08632449942973319), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09199775825293109), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09026338339703699), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09589696132726623), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09578814433128889), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08809094464022156), ('degree', 4), ('kernel', 'rbf')])], 'split0_test_score': array([-1.91888629, -2.00880549, -1.92971102, -2.15866914, -1.94807545,
       -2.0579993 , -1.92386122, -2.36405082, -2.11116134, -1.93062619,
       -1.93127305, -1.92038695, -1.92771976, -1.92925139, -1.93127242,
       -1.92561403, -1.92726074, -1.9274763 , -1.92720326, -1.92738297,
       -1.91522621, -1.93112862, -1.95679412, -1.92685522, -1.92732411,
       -1.92686424, -1.92689926, -1.91520853, -1.92731398, -1.92686168,
       -1.91939396, -1.92736383, -1.92730707, -1.93058784, -1.92727162,
       -2.31412781, -1.92780753, -1.93549748, -1.9273215 , -1.92732793,
       -2.10555442, -1.92131994, -1.92754672, -1.92683882, -2.29438918,
       -1.92902686, -1.92782335, -1.92694141, -2.06856701, -1.92807621,
       -1.92667419, -1.92657171, -1.92751506, -1.92687481, -1.92678599,
       -1.92696507, -1.92728208, -1.92674836, -1.92674036, -1.92656936,
       -1.9274767 , -1.92702724, -2.05742699, -1.92702655, -1.92672869,
       -1.92683198, -1.92791631, -1.92735089, -1.92711323, -1.92746111,
       -1.92703518, -1.9260711 , -1.92693181, -1.92745661, -1.92770482,
       -1.92718615, -1.9270172 , -1.92761091, -1.92771038, -1.92579995,
       -1.92733987, -1.92722589, -1.92687384, -1.92795311, -1.9277285 ,
       -1.9281365 , -1.92642823, -1.92747121, -1.92770703, -1.92747369,
       -1.92753057, -1.92759018, -1.92771076, -1.9247446 , -1.92848319,
       -1.92747494, -1.92627609, -1.92665222, -1.92647691, -1.92785752,
       -1.92753629, -1.92718274, -1.92682979, -1.92721772, -1.92726377,
       -1.92850797, -1.92675944, -1.92819983, -1.92729501, -1.92760425,
       -1.92757794, -1.92709202, -1.92675078, -1.92743946, -1.92654652,
       -1.92738998, -1.92678009, -1.92653592, -1.92727742, -1.92765495,
       -1.92713044, -1.92727833, -1.92633082, -1.92769042, -1.9272823 ,
       -1.92858478, -1.92856025, -1.92676182]), 'split1_test_score': array([-1.95730107, -1.98415848, -1.97833246, -2.24236045, -1.92941818,
       -2.07388845, -1.92438555, -2.53223047, -2.16979146, -1.98008236,
       -1.98127304, -1.92795897, -1.92326542, -1.92320926, -1.98127188,
       -1.97137228, -1.92338224, -1.92332726, -1.92339693, -1.92335104,
       -1.93992245, -1.98100786, -1.93499987, -1.92348623, -1.92336605,
       -1.97346122, -1.9234749 , -1.94007806, -1.92336864, -1.92348457,
       -1.92938162, -1.92335592, -1.9233704 , -1.98001097, -1.92337946,
       -2.46013328, -1.92324319, -1.92423117, -1.92336672, -1.92336508,
       -2.16085347, -1.96336187, -1.92330934, -1.92349046, -2.43137064,
       -1.97707617, -1.92323918, -1.92346407, -2.09534246, -1.9232015 ,
       -1.9235329 , -1.92355939, -1.92331739, -1.92348119, -1.92350406,
       -1.92345799, -1.92337679, -1.92351376, -1.92351583, -1.92355999,
       -1.92332716, -1.92344203, -2.07261508, -1.92344221, -1.92351884,
       -1.92349222, -1.92322067, -1.92335922, -1.92341998, -1.92333113,
       -1.92343999, -1.92368945, -1.92346654, -1.92333227, -1.9232692 ,
       -1.92340131, -1.92344461, -1.92329303, -1.92326779, -1.92376114,
       -1.92336203, -1.92339115, -1.92348144, -1.92321441, -1.9232632 ,
       -1.92319792, -1.92359655, -1.92332855, -1.92326864, -1.92332792,
       -1.92331345, -1.9232983 , -1.9232677 , -1.92406177, -1.92319233,
       -1.92332761, -1.92363605, -1.92353857, -1.92358393, -1.92323068,
       -1.923312  , -1.92340218, -1.92349278, -1.92339324, -1.92338146,
       -1.92319285, -1.92351091, -1.92319418, -1.92337348, -1.92329472,
       -1.92330141, -1.92342542, -1.92351314, -1.92333664, -1.9235659 ,
       -1.92334925, -1.92350558, -1.92356865, -1.92337798, -1.92328185,
       -1.92341557, -1.92337774, -1.92362183, -1.92327285, -1.92337673,
       -1.92319447, -1.92319395, -1.92351029]), 'split2_test_score': array([-2.04640797, -2.03238656, -2.07559792, -2.22874349, -1.98696985,
       -2.10678941, -1.99529807, -2.45449229, -2.17211551, -2.07771224,
       -2.07916622, -2.00202866, -1.99111145, -1.99020933, -2.0791648 ,
       -2.06606547, -1.99148316, -1.99129775, -1.99153261, -1.99137803,
       -2.02123959, -2.07884235, -1.98819146, -1.99183594, -1.99142866,
       -2.06894203, -1.99179716, -2.02148836, -1.99143737, -1.99183026,
       -2.00439156, -1.99139449, -1.99144331, -2.07762507, -1.9914738 ,
       -2.39916406, -1.991045  , -1.9879645 , -1.9914309 , -1.99142537,
       -2.16555878, -2.05523197, -1.99124248, -1.99185039, -2.37788603,
       -2.07400368, -1.99103302, -1.99176004, -2.12142144, -1.99084913,
       -1.99199538, -1.99208564, -1.99126647, -1.99181869, -1.99189691,
       -1.99173921, -1.99146481, -1.99193005, -1.9919371 , -1.99208772,
       -1.99129741, -1.99168446, -2.10590326, -1.99168507, -1.99194738,
       -1.99185641, -1.99096266, -1.99140562, -1.99161006, -1.99131082,
       -1.99167747, -1.99252669, -1.9917685 , -1.99131469, -1.99112276,
       -1.99154733, -1.99169331, -1.99119387, -1.99111855, -1.9928052 ,
       -1.9914151 , -1.99151315, -1.99181955, -1.9909348 , -1.99110483,
       -1.99081229, -1.99221203, -1.99130213, -1.99112108, -1.9913    ,
       -1.99125472, -1.99120957, -1.99111826, -1.99409009, -1.99060048,
       -1.99129893, -1.99234607, -1.99201473, -1.99216916, -1.99100716,
       -1.99125038, -1.99155027, -1.99185834, -1.99152017, -1.99148056,
       -1.99058534, -1.9919203 , -1.9907736 , -1.99145369, -1.99119892,
       -1.99121884, -1.9916283 , -1.99192793, -1.99132945, -1.99210784,
       -1.991372  , -1.99190211, -1.99211717, -1.99146882, -1.99116052,
       -1.99159525, -1.99146804, -1.99229785, -1.99113366, -1.99146462,
       -1.99054107, -1.99055373, -1.9919182 ]), 'mean_test_score': array([-1.97419844, -2.00845018, -1.99454713, -2.20992436, -1.95482116,
       -2.07955905, -1.94784828, -2.45025786, -2.15102277, -1.99614026,
       -1.99723744, -1.95012486, -1.94736554, -1.94755666, -1.99723637,
       -1.98768393, -1.94737538, -1.9473671 , -1.9473776 , -1.94737068,
       -1.95879608, -1.99699295, -1.95999515, -1.94739247, -1.94737294,
       -1.98975583, -1.94739044, -1.95892498, -1.94737333, -1.94739217,
       -1.95105571, -1.94737141, -1.9473736 , -1.99607462, -1.94737496,
       -2.39114172, -1.94736524, -1.94923105, -1.94737304, -1.94737279,
       -2.14398889, -1.97997126, -1.94736618, -1.94739322, -2.36788195,
       -1.9933689 , -1.94736518, -1.94738851, -2.0951103 , -1.94737561,
       -1.94740082, -1.94740558, -1.94736631, -1.94739157, -1.94739566,
       -1.94738742, -1.94737456, -1.94739739, -1.94739776, -1.94740569,
       -1.94736709, -1.94738458, -2.07864844, -1.94738461, -1.9473983 ,
       -1.94739354, -1.94736655, -1.94737191, -1.94738109, -1.94736769,
       -1.94738421, -1.94742908, -1.94738895, -1.94736786, -1.94736559,
       -1.94737826, -1.94738504, -1.94736594, -1.94736557, -1.94745543,
       -1.94737233, -1.94737673, -1.94739161, -1.94736744, -1.94736551,
       -1.94738224, -1.94741227, -1.9473673 , -1.94736559, -1.9473672 ,
       -1.94736625, -1.94736602, -1.94736557, -1.94763215, -1.94742533,
       -1.94736716, -1.9474194 , -1.94740184, -1.94741   , -1.94736512,
       -1.94736622, -1.9473784 , -1.94739364, -1.94737704, -1.94737526,
       -1.94742872, -1.94739688, -1.9473892 , -1.94737406, -1.94736596,
       -1.94736606, -1.94738191, -1.94739728, -1.94736851, -1.94740675,
       -1.94737041, -1.94739593, -1.94740725, -1.94737474, -1.94736577,
       -1.94738042, -1.9473747 , -1.94741683, -1.94736565, -1.94737455,
       -1.94744011, -1.94743598, -1.94739677]), 'std_test_score': array([0.05341402, 0.01969064, 0.06065165, 0.03666678, 0.02397467,
       0.02031806, 0.03355275, 0.06872431, 0.02820225, 0.06111175,
       0.06142336, 0.03683148, 0.03098643, 0.03026069, 0.06142306,
       0.05848763, 0.03122908, 0.03110981, 0.03126095, 0.0311614 ,
       0.04529069, 0.06135405, 0.02183302, 0.03145637, 0.03119398,
       0.05913634, 0.0314314 , 0.0453891 , 0.03119959, 0.0314527 ,
       0.03793392, 0.03117199, 0.03120341, 0.06109292, 0.03122305,
       0.0598758 , 0.03094241, 0.0277722 , 0.03119542, 0.03119186,
       0.02724508, 0.05591667, 0.03107342, 0.03146567, 0.05636808,
       0.06029737, 0.03093449, 0.03140751, 0.02157835, 0.03080477,
       0.03155918, 0.0316175 , 0.03108937, 0.03144526, 0.03149565,
       0.03139412, 0.03121726, 0.03151702, 0.03152157, 0.03161884,
       0.03110959, 0.03135892, 0.02024497, 0.03135932, 0.0315282 ,
       0.03146955, 0.03088665, 0.03117915, 0.03131093, 0.0311182 ,
       0.03135444, 0.03190365, 0.03141295, 0.03112069, 0.03099393,
       0.03127045, 0.03136461, 0.03104112, 0.03099114, 0.03207793,
       0.03118525, 0.0312484 , 0.03144581, 0.03086746, 0.03098205,
       0.0307758 , 0.0316993 , 0.03111262, 0.03099282, 0.03111125,
       0.03108155, 0.03105155, 0.03099095, 0.03285191, 0.03060575,
       0.03111056, 0.03178623, 0.03157167, 0.03167153, 0.03091734,
       0.03107867, 0.03127234, 0.03147079, 0.03125293, 0.0312274 ,
       0.03059339, 0.03151073, 0.03074539, 0.03121009, 0.03104447,
       0.03105771, 0.03132271, 0.03151565, 0.03113017, 0.03163185,
       0.03115752, 0.031499  , 0.03163789, 0.03121984, 0.03101898,
       0.03130137, 0.03121933, 0.03175494, 0.03100116, 0.03121714,
       0.03055633, 0.03056747, 0.03150938]), 'rank_test_score': array([108, 119, 113, 125, 104, 121, 100, 128, 124, 115, 118, 102,   5,
        98, 117, 110,  47,  22,  51,  31, 105, 116, 107,  70,  36, 111,
        66, 106,  38,  69, 103,  32,  39, 114,  45, 127,   3, 101,  37,
        35, 123, 109,  16,  71, 126, 112,   2,  63, 122,  48,  82,  84,
        19,  67,  74,  62,  42,  79,  80,  85,  21,  59, 120,  60,  81,
        72,  20,  33,  55,  27,  58,  94,  64,  28,   9,  52,  61,  12,
         7,  97,  34,  49,  68,  26,   4,  57,  89,  25,   8,  24,  18,
        14,   6,  99,  92,  23,  91,  83,  88,   1,  17,  53,  73,  50,
        46,  93,  77,  65,  40,  13,  15,  56,  78,  29,  86,  30,  75,
        87,  44,  11,  54,  43,  90,  10,  41,  96,  95,  76], dtype=int32)}
-1.9473651194482102
OrderedDict([('alpha', 0.09271587174133253), ('degree', 6), ('kernel', 'rbf')])
[CV 1/3] END alpha=3.1382423900377203, degree=6, kernel=rbf;, score=-2.159 total time=   0.1s
[CV 1/3] END alpha=0.09043980281062489, degree=2, kernel=rbf;, score=-1.927 total time=   0.2s
[CV 2/3] END alpha=0.0018065576231433627, degree=4, kernel=rbf;, score=-1.977 total time=   0.1s
[CV 2/3] END alpha=0.09296963594091483, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.0910627788111402, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09420175067424671, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.17110275672818984, degree=2, kernel=rbf;, score=-1.987 total time=   0.1s
[CV 3/3] END alpha=0.09043980281062489, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.0018065576231433627, degree=4, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 3/3] END alpha=0.0883812732650259, degree=6, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08672122541725782, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.09420175067424671, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=1.2220478488978093, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.003574496932199218, degree=2, kernel=rbf;, score=-2.069 total time=   0.1s
[CV 2/3] END alpha=0.09256864064867813, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09296963594091483, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.0910627788111402, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09031698197206045, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=1.2220478488978093, degree=2, kernel=rbf;, score=-2.074 total time=   0.1s
[CV 2/3] END alpha=0.08866039510415157, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09256864064867813, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09055296553500165, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.0910627788111402, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09031698197206045, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.07575793647454118, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.08866039510415157, degree=6, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08883564199000087, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09055296553500165, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09206893120318992, degree=2, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.09031698197206045, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=1.2220478488978093, degree=2, kernel=rbf;, score=-2.058 total time=   0.1s
[CV 1/3] END alpha=0.08866039510415157, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.08883564199000087, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.08955293995456347, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09206893120318992, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.0916292633638857, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 2/3] END alpha=0.17110275672818984, degree=2, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 1/3] END alpha=0.003574496932199218, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09256864064867813, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 2/3] END alpha=0.09055296553500165, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09206893120318992, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0916292633638857, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=9.615476303534052, degree=5, kernel=rbf;, score=-2.532 total time=   0.1s
[CV 3/3] END alpha=0.031564341370345764, degree=2, kernel=rbf;, score=-2.021 total time=   0.1s
[CV 3/3] END alpha=0.08883564199000087, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08955293995456347, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09107330816009711, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.0916292633638857, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.07575793647454118, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.031564341370345764, degree=2, kernel=rbf;, score=-1.940 total time=   0.1s
[CV 1/3] END alpha=1.4027155476426458, degree=2, kernel=rbf;, score=-2.069 total time=   0.1s
[CV 3/3] END alpha=0.08955293995456347, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09107330816009711, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09151701747473005, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 2/3] END alpha=2.1580480971009406, degree=3, kernel=rbf;, score=-2.170 total time=   0.1s
[CV 2/3] END alpha=0.08850439995403557, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09366282672810365, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09101987954379985, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09107330816009711, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09151701747473005, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=2.1580480971009406, degree=3, kernel=rbf;, score=-2.172 total time=   0.1s
[CV 1/3] END alpha=0.08850439995403557, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.08772945020107484, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08922648460941883, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.0913151798030949, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09151701747473005, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.0005682821567047842, degree=3, kernel=rbf;, score=-2.078 total time=   0.1s
[CV 1/3] END alpha=0.053600847007433734, degree=6, kernel=rbf;, score=-1.919 total time=   0.1s
[CV 3/3] END alpha=0.08772945020107484, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08527395035246067, degree=6, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 3/3] END alpha=0.09156922213691633, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.0894641311596939, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.07575793647454118, degree=5, kernel=rbf;, score=-1.995 total time=   0.1s
[CV 1/3] END alpha=0.031564341370345764, degree=2, kernel=rbf;, score=-1.915 total time=   0.1s
[CV 2/3] END alpha=1.4027155476426458, degree=2, kernel=rbf;, score=-2.095 total time=   0.1s
[CV 1/3] END alpha=0.09101987954379985, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.0913151798030949, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.0894641311596939, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=9.615476303534052, degree=5, kernel=rbf;, score=-2.364 total time=   0.1s
[CV 1/3] END alpha=0.09039703874775469, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=1.4027155476426458, degree=2, kernel=rbf;, score=-2.121 total time=   0.1s
[CV 2/3] END alpha=0.09101987954379985, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0913151798030949, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0894641311596939, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=9.615476303534052, degree=5, kernel=rbf;, score=-2.454 total time=   0.1s
[CV 2/3] END alpha=0.09039703874775469, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09366282672810365, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.08922648460941883, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09156922213691633, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.08804533724037122, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.0005682821567047842, degree=3, kernel=rbf;, score=-1.931 total time=   0.1s
[CV 3/3] END alpha=0.08850439995403557, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08772945020107484, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.08527395035246067, degree=6, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.0920849327181777, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08804533724037122, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=2.1580480971009406, degree=3, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 3/3] END alpha=0.09039703874775469, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09366282672810365, degree=3, kernel=rbf;, score=-1.923 total time=   0.2s
[CV 2/3] END alpha=0.08922648460941883, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09156922213691633, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08804533724037122, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-1.931 total time=   0.1s
[CV 3/3] END alpha=0.053600847007433734, degree=6, kernel=rbf;, score=-2.004 total time=   0.1s
[CV 1/3] END alpha=0.08730821841227307, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08527395035246067, degree=6, kernel=rbf;, score=-1.993 total time=   0.1s
[CV 2/3] END alpha=0.0920849327181777, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09092799261679159, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-1.981 total time=   0.1s
[CV 1/3] END alpha=0.09060766697236632, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.0912491808517834, degree=2, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08879568803988762, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.07975026598141201, degree=6, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.09092799261679159, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.05831280401891129, degree=2, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.09060766697236632, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.08730821841227307, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08879568803988762, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.0920849327181777, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09092799261679159, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0005682821567047842, degree=3, kernel=rbf;, score=-1.980 total time=   0.1s
[CV 2/3] END alpha=0.053600847007433734, degree=6, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 2/3] END alpha=0.08730821841227307, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.08879568803988762, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.07975026598141201, degree=6, kernel=rbf;, score=-1.925 total time=   0.1s
[CV 2/3] END alpha=0.08720490538541358, degree=2, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.09212349982727913, degree=2, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.0903678811365685, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.0912491808517834, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09100077538723268, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.07975026598141201, degree=6, kernel=rbf;, score=-1.994 total time=   0.1s
[CV 1/3] END alpha=0.08720490538541358, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.05831280401891129, degree=2, kernel=rbf;, score=-1.920 total time=   0.1s
[CV 1/3] END alpha=0.0903678811365685, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.08855889157344732, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09100077538723268, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09544704212994143, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.08720490538541358, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.079 total time=   0.1s
[CV 2/3] END alpha=0.09060766697236632, degree=4, kernel=rbf;, score=-1.923 total time=   0.2s
[CV 2/3] END alpha=0.0912491808517834, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09100077538723268, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09544704212994143, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 2/3] END alpha=0.09071831390004252, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.05831280401891129, degree=2, kernel=rbf;, score=-2.002 total time=   0.1s
[CV 2/3] END alpha=0.0903678811365685, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08855889157344732, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09205946471350714, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.09544704212994143, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09071831390004252, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09212349982727913, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.0005965688636224555, degree=6, kernel=rbf;, score=-1.931 total time=   0.1s
[CV 3/3] END alpha=0.08855889157344732, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09205946471350714, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09107859995523036, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09071831390004252, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.00010045385044647252, degree=2, kernel=rbf;, score=-1.981 total time=   0.1s
[CV 3/3] END alpha=0.09021839939804556, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.08819089538715973, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08985877420422268, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09107859995523036, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.0881664918836271, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09878731165906124, degree=6, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 3/3] END alpha=0.0005965688636224555, degree=6, kernel=rbf;, score=-2.078 total time=   0.1s
[CV 2/3] END alpha=0.08819089538715973, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.09205946471350714, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09107859995523036, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0881664918836271, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.09878731165906124, degree=6, kernel=rbf;, score=-1.990 total time=   0.1s
[CV 1/3] END alpha=0.09021839939804556, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.0889341053148129, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08985877420422268, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08610226901029239, degree=3, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 3/3] END alpha=0.0881664918836271, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09878731165906124, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09021839939804556, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0889341053148129, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08915143472948174, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08610226901029239, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08716147572766605, degree=6, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.09212349982727913, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0005965688636224555, degree=6, kernel=rbf;, score=-1.980 total time=   0.1s
[CV 1/3] END alpha=0.08819089538715973, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.08985877420422268, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08610226901029239, degree=3, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.08716147572766605, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.00010045385044647252, degree=2, kernel=rbf;, score=-1.931 total time=   0.1s
[CV 1/3] END alpha=7.559024745166318, degree=3, kernel=rbf;, score=-2.314 total time=   0.1s
[CV 3/3] END alpha=0.0889341053148129, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08915143472948174, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08763901261148248, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08716147572766605, degree=6, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.004644940663689575, degree=6, kernel=rbf;, score=-2.066 total time=   0.1s
[CV 3/3] END alpha=7.559024745166318, degree=3, kernel=rbf;, score=-2.399 total time=   0.1s
[CV 2/3] END alpha=0.09026245871798506, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09165769878665114, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08763901261148248, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.0902428159135618, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.004644940663689575, degree=6, kernel=rbf;, score=-1.971 total time=   0.1s
[CV 1/3] END alpha=0.09250055779721639, degree=6, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.0880353657039472, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09165769878665114, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.08691999470947386, degree=4, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 3/3] END alpha=0.0902428159135618, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.00010045385044647252, degree=2, kernel=rbf;, score=-2.079 total time=   0.1s
[CV 2/3] END alpha=7.559024745166318, degree=3, kernel=rbf;, score=-2.460 total time=   0.1s
[CV 1/3] END alpha=0.09026245871798506, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08915143472948174, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08763901261148248, degree=2, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.0902428159135618, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09017255356290463, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.12374547006262206, degree=6, kernel=rbf;, score=-1.935 total time=   0.1s
[CV 3/3] END alpha=0.0880353657039472, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09208327779833828, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.08691999470947386, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.09184592810186236, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.09017255356290463, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09250055779721639, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09026245871798506, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09165769878665114, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08691999470947386, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.09184592810186236, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09108441177223199, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.12374547006262206, degree=6, kernel=rbf;, score=-1.988 total time=   0.2s
[CV 2/3] END alpha=0.08800232247935877, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.09208327779833828, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09271587174133253, degree=6, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.09184592810186236, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.004644940663689575, degree=6, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 2/3] END alpha=0.09250055779721639, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.0880353657039472, degree=3, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.09208327779833828, degree=5, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 2/3] END alpha=0.09271587174133253, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.0896250524116052, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09108441177223199, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09042880795748795, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08800232247935877, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08417676533104276, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.09133953423966741, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.0896250524116052, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08993069302206534, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09042880795748795, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.08729855806418194, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08417676533104276, degree=4, kernel=rbf;, score=-1.993 total time=   0.1s
[CV 2/3] END alpha=0.09133953423966741, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.0902466670764397, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.09017255356290463, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.12374547006262206, degree=6, kernel=rbf;, score=-1.924 total time=   0.2s
[CV 1/3] END alpha=0.08800232247935877, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.08417676533104276, degree=4, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 3/3] END alpha=0.09271587174133253, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.0896250524116052, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09068864889179667, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09045594155841087, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.08729855806418194, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.09050638280633788, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09133953423966741, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.0902466670764397, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.09108441177223199, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.09042880795748795, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08729855806418194, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.09050638280633788, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08984444710524772, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.0902466670764397, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09068864889179667, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=2.0527422922264194, degree=2, kernel=rbf;, score=-2.106 total time=   0.1s
[CV 3/3] END alpha=0.09108610193437133, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.09050638280633788, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.08984444710524772, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08632449942973319, degree=5, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 1/3] END alpha=0.01340841190241529, degree=3, kernel=rbf;, score=-1.919 total time=   0.1s
[CV 3/3] END alpha=0.03181798469448478, degree=6, kernel=rbf;, score=-2.021 total time=   0.1s
[CV 3/3] END alpha=2.0527422922264194, degree=2, kernel=rbf;, score=-2.166 total time=   0.1s
[CV 1/3] END alpha=0.08919336878302013, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09002581883532154, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.08984444710524772, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08632449942973319, degree=5, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.01340841190241529, degree=3, kernel=rbf;, score=-1.957 total time=   0.1s
[CV 1/3] END alpha=0.00020373041260026944, degree=6, kernel=rbf;, score=-1.931 total time=   0.1s
[CV 3/3] END alpha=0.009145548212313379, degree=3, kernel=rbf;, score=-2.055 total time=   0.1s
[CV 3/3] END alpha=0.08919336878302013, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08855484185425437, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08837220875255142, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.08632449942973319, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.08993069302206534, degree=2, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09045594155841087, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09108610193437133, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09002581883532154, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.08837220875255142, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09199775825293109, degree=6, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 1/3] END alpha=0.08993069302206534, degree=2, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.09045594155841087, degree=3, kernel=rbf;, score=-1.927 total time=   0.2s
[CV 2/3] END alpha=0.09108610193437133, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09002581883532154, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08837220875255142, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09199775825293109, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09068864889179667, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=2.0527422922264194, degree=2, kernel=rbf;, score=-2.161 total time=   0.1s
[CV 2/3] END alpha=0.08919336878302013, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08855484185425437, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08999146856108482, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09199775825293109, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.01340841190241529, degree=3, kernel=rbf;, score=-2.046 total time=   0.1s
[CV 2/3] END alpha=0.00020373041260026944, degree=6, kernel=rbf;, score=-1.981 total time=   0.1s
[CV 1/3] END alpha=0.09138395896752555, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=1.2118284068656753, degree=5, kernel=rbf;, score=-2.106 total time=   0.1s
[CV 1/3] END alpha=0.09312881446274418, degree=6, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08999146856108482, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.09026338339703699, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.553152040445465, degree=2, kernel=rbf;, score=-2.032 total time=   0.1s
[CV 1/3] END alpha=0.20761817039784067, degree=6, kernel=rbf;, score=-1.957 total time=   0.1s
[CV 3/3] END alpha=0.09138395896752555, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.08919045728545273, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09312881446274418, degree=6, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09018532034379934, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09026338339703699, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.03181798469448478, degree=6, kernel=rbf;, score=-1.915 total time=   0.1s
[CV 2/3] END alpha=0.009145548212313379, degree=3, kernel=rbf;, score=-1.963 total time=   0.1s
[CV 1/3] END alpha=1.2118284068656753, degree=5, kernel=rbf;, score=-2.057 total time=   0.1s
[CV 3/3] END alpha=0.08855484185425437, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=0.08999146856108482, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.09026338339703699, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=0.553152040445465, degree=2, kernel=rbf;, score=-2.009 total time=   0.1s
[CV 2/3] END alpha=0.20761817039784067, degree=6, kernel=rbf;, score=-1.935 total time=   0.1s
[CV 1/3] END alpha=0.08840961434829107, degree=5, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.08919045728545273, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.09216098803610662, degree=4, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.09018532034379934, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09589696132726623, degree=5, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 2/3] END alpha=0.553152040445465, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.00020373041260026944, degree=6, kernel=rbf;, score=-2.079 total time=   0.2s
[CV 2/3] END alpha=0.09138395896752555, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08919045728545273, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09216098803610662, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.0955566309463112, degree=5, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 3/3] END alpha=0.09589696132726623, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.03181798469448478, degree=6, kernel=rbf;, score=-1.940 total time=   0.1s
[CV 1/3] END alpha=0.009145548212313379, degree=3, kernel=rbf;, score=-1.921 total time=   0.1s
[CV 2/3] END alpha=1.2118284068656753, degree=5, kernel=rbf;, score=-2.073 total time=   0.1s
[CV 2/3] END alpha=0.09312881446274418, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09018532034379934, degree=4, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09589696132726623, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=3.1382423900377203, degree=6, kernel=rbf;, score=-2.242 total time=   0.1s
[CV 2/3] END alpha=0.09043980281062489, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=6.845445626538012, degree=2, kernel=rbf;, score=-2.378 total time=   0.1s
[CV 3/3] END alpha=0.08795412291933133, degree=6, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.09392535446265396, degree=3, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.0955566309463112, degree=5, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.09578814433128889, degree=2, kernel=rbf;, score=-1.929 total time=   0.1s
[CV 3/3] END alpha=0.0012684250442402828, degree=3, kernel=rbf;, score=-2.076 total time=   0.1s
[CV 1/3] END alpha=0.08847760823457088, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 1/3] END alpha=6.845445626538012, degree=2, kernel=rbf;, score=-2.294 total time=   0.1s
[CV 1/3] END alpha=0.0883812732650259, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09392535446265396, degree=3, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 1/3] END alpha=0.08808110451288938, degree=3, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 3/3] END alpha=0.09578814433128889, degree=2, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 3/3] END alpha=0.20761817039784067, degree=6, kernel=rbf;, score=-1.988 total time=   0.1s
[CV 2/3] END alpha=0.08840961434829107, degree=5, kernel=rbf;, score=-1.923 total time=   0.2s
[CV 2/3] END alpha=0.08795412291933133, degree=6, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 3/3] END alpha=0.09216098803610662, degree=4, kernel=rbf;, score=-1.991 total time=   0.1s
[CV 2/3] END alpha=0.0955566309463112, degree=5, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.09578814433128889, degree=2, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.0012684250442402828, degree=3, kernel=rbf;, score=-1.930 total time=   0.1s
[CV 3/3] END alpha=3.1382423900377203, degree=6, kernel=rbf;, score=-2.229 total time=   0.1s
[CV 3/3] END alpha=0.08847760823457088, degree=6, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 2/3] END alpha=6.845445626538012, degree=2, kernel=rbf;, score=-2.431 total time=   0.1s
[CV 2/3] END alpha=0.0883812732650259, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 1/3] END alpha=0.08672122541725782, degree=5, kernel=rbf;, score=-1.926 total time=   0.1s
[CV 3/3] END alpha=0.08808110451288938, degree=3, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08809094464022156, degree=4, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.0012684250442402828, degree=3, kernel=rbf;, score=-1.978 total time=   0.1s
[CV 2/3] END alpha=0.08847760823457088, degree=6, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 3/3] END alpha=0.08840961434829107, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.08795412291933133, degree=6, kernel=rbf;, score=-1.927 total time=   0.1s
[CV 2/3] END alpha=0.09392535446265396, degree=3, kernel=rbf;, score=-1.923 total time=   0.1s
[CV 2/3] END alpha=0.08808110451288938, degree=3, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 2/3] END alpha=0.08809094464022156, degree=4, kernel=rbf;, score=-1.924 total time=   0.1s
[CV 1/3] END alpha=0.17110275672818984, degree=2, kernel=rbf;, score=-1.948 total time=   0.1s
[CV 2/3] END alpha=0.003574496932199218, degree=2, kernel=rbf;, score=-1.973 total time=   0.1s
[CV 3/3] END alpha=0.0018065576231433627, degree=4, kernel=rbf;, score=-2.074 total time=   0.1s
[CV 1/3] END alpha=0.09296963594091483, degree=4, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08672122541725782, degree=5, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 1/3] END alpha=0.09420175067424671, degree=4, kernel=rbf;, score=-1.928 total time=   0.1s
[CV 3/3] END alpha=0.08809094464022156, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
