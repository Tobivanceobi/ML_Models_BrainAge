no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.0819451 , 0.05894494, 0.05988614, 0.05971917, 0.05887691,
       0.05937068, 0.05916564, 0.05907257, 0.05842042, 0.05884178,
       0.05906741, 0.06033492, 0.06001075, 0.059793  , 0.05885235,
       0.05913552, 0.05988852, 0.06052979, 0.05907162, 0.05851436,
       0.05651728, 0.05554215, 0.06478532, 0.08677141, 0.07121666,
       0.07827981, 0.09015187, 0.07243419, 0.08080602, 0.06607207,
       0.05789995, 0.05884059, 0.07146279, 0.07160274, 0.05487839,
       0.0584116 , 0.07905412, 0.05751332, 0.05762013, 0.05838243,
       0.07429353, 0.0634706 , 0.07776252, 0.0792563 , 0.07313514,
       0.0772899 , 0.07941055, 0.06027548, 0.07585303, 0.07708073,
       0.07644208, 0.0805943 , 0.07679145, 0.08016125, 0.06575918,
       0.0742174 , 0.06805611, 0.06941621, 0.06777581, 0.07874974,
       0.07258972, 0.06325197, 0.06503272, 0.06849877, 0.06648691,
       0.05553579, 0.06608399, 0.05717222, 0.05626329, 0.05774196,
       0.05466477, 0.05700056, 0.05518723, 0.05607152, 0.05497559,
       0.05511999, 0.0548381 , 0.05542175, 0.05663967, 0.05574814,
       0.05585949, 0.05579487, 0.05342126, 0.05396414, 0.05446315,
       0.05637638, 0.05540458, 0.05517276, 0.05459642, 0.05588635,
       0.05629476, 0.0545996 , 0.05711683, 0.05437676, 0.05533616,
       0.05470284, 0.05388228, 0.05425326, 0.05440784, 0.05493657,
       0.05480266, 0.05562997, 0.05356542, 0.05732147, 0.05439496,
       0.05805683, 0.05568155, 0.05491908, 0.05922977, 0.05515218,
       0.05652992, 0.05554899, 0.05589732, 0.05986587, 0.0586853 ,
       0.05594261, 0.05783367, 0.0559965 , 0.06005677, 0.06046502,
       0.06001671, 0.05653334, 0.05962737, 0.05647175, 0.05928326,
       0.05939245, 0.05879068, 0.05869333]), 'std_fit_time': array([2.08343221e-05, 3.53636777e-04, 1.98364767e-04, 3.56836574e-04,
       4.10659391e-04, 1.03398595e-03, 2.59767907e-04, 3.28601718e-04,
       4.36830770e-04, 5.35620532e-04, 1.16400585e-04, 1.62214483e-04,
       2.62912916e-04, 1.17941794e-04, 4.51681395e-05, 3.55806712e-04,
       1.48364357e-04, 7.66742099e-04, 2.54006201e-04, 2.15304606e-04,
       2.50248666e-03, 2.47886953e-03, 1.59929890e-02, 4.20533308e-03,
       1.79805167e-02, 1.58627036e-02, 1.85013440e-03, 7.47134864e-03,
       1.61902518e-02, 1.63553516e-02, 3.62953943e-03, 4.26272362e-03,
       4.71096142e-03, 1.24853084e-02, 9.95456496e-05, 6.23217267e-03,
       1.64642254e-02, 1.92581616e-03, 6.24269091e-04, 3.57857424e-03,
       1.35476323e-02, 4.75329822e-03, 6.23439364e-03, 6.60222912e-03,
       1.25123542e-02, 1.13643915e-02, 4.21948034e-03, 3.82045376e-03,
       3.12775188e-03, 4.79737718e-03, 1.47239698e-03, 3.95017218e-03,
       2.68367636e-03, 5.87481098e-03, 7.20447755e-03, 1.58266360e-03,
       6.90627100e-03, 8.22108734e-03, 5.38028036e-03, 4.82465419e-03,
       3.12396133e-03, 6.80298869e-03, 6.54457368e-03, 5.90936685e-03,
       1.76579387e-03, 8.18310105e-04, 2.12159762e-03, 1.50831033e-03,
       9.88592058e-04, 2.86713171e-03, 3.79038920e-04, 2.72472024e-04,
       1.20367307e-04, 2.40809925e-04, 4.67226059e-04, 3.22440657e-04,
       7.67308736e-04, 3.61371806e-04, 3.44962162e-04, 8.70697694e-04,
       4.37049343e-04, 1.38994132e-03, 7.60114850e-04, 2.88136983e-04,
       2.32116620e-04, 1.24517423e-03, 2.69622801e-04, 5.18389847e-04,
       5.72338122e-04, 6.50475749e-04, 1.44825842e-03, 7.73921895e-04,
       2.45202273e-03, 3.95570952e-04, 6.64340592e-04, 4.79351145e-05,
       6.57811603e-05, 1.45092458e-04, 8.53278278e-04, 1.16381050e-04,
       5.10041186e-05, 3.73688908e-04, 1.06287543e-03, 1.94420497e-03,
       1.38063719e-03, 1.61163826e-03, 1.07351386e-03, 1.08055988e-03,
       1.73347451e-04, 3.34359596e-04, 9.88458803e-04, 9.50405167e-04,
       1.75327818e-03, 3.69825584e-04, 1.59055036e-04, 7.96512247e-04,
       1.48668513e-03, 1.33240516e-03, 3.25095795e-04, 1.19355923e-03,
       7.24832669e-04, 1.11642092e-03, 4.69445207e-04, 1.69558021e-03,
       5.75762094e-04, 2.70588457e-05, 1.45614233e-04, 2.56567072e-04]), 'mean_score_time': array([0.03822724, 0.03604706, 0.035954  , 0.03580411, 0.03573982,
       0.03571184, 0.03580594, 0.03567886, 0.03562816, 0.03615673,
       0.03585434, 0.03619027, 0.03613861, 0.03619242, 0.03586976,
       0.03619496, 0.03612582, 0.03608163, 0.03595702, 0.03590703,
       0.03594748, 0.03670414, 0.0365243 , 0.03814173, 0.03817145,
       0.03753948, 0.03834852, 0.04052695, 0.03641725, 0.03669063,
       0.03717693, 0.03674968, 0.03918703, 0.03912361, 0.03710993,
       0.03650705, 0.03641963, 0.0373776 , 0.03701687, 0.03703841,
       0.03849443, 0.03651921, 0.03608886, 0.03658223, 0.03614275,
       0.03883735, 0.03786572, 0.03658096, 0.03736862, 0.03659153,
       0.03788964, 0.03696084, 0.0369548 , 0.03669683, 0.03611016,
       0.03658231, 0.03627928, 0.0375936 , 0.03697856, 0.03737791,
       0.03662984, 0.03725084, 0.0363764 , 0.03742989, 0.03651706,
       0.0364027 , 0.03710063, 0.03802419, 0.03660456, 0.03619464,
       0.03608131, 0.03604404, 0.03598944, 0.03617978, 0.03599834,
       0.03638434, 0.03639785, 0.03626426, 0.03680762, 0.0365239 ,
       0.03700161, 0.03676287, 0.03603578, 0.03601321, 0.03603331,
       0.03697983, 0.03629796, 0.0361406 , 0.03586292, 0.03630869,
       0.0367376 , 0.03608712, 0.03682637, 0.03629708, 0.03606304,
       0.03608918, 0.0363787 , 0.03589876, 0.03654393, 0.03621467,
       0.03627809, 0.03619965, 0.03590377, 0.03654313, 0.03660941,
       0.03900584, 0.03699176, 0.03651492, 0.03855848, 0.03587254,
       0.03673697, 0.03626227, 0.03675135, 0.03720665, 0.03912958,
       0.03680476, 0.04216615, 0.03667752, 0.03955785, 0.03997962,
       0.03804874, 0.0367202 , 0.03788288, 0.03721841, 0.03831116,
       0.0380191 , 0.03814665, 0.03896578]), 'std_score_time': array([3.34645048e-04, 3.89998838e-04, 3.11175432e-04, 3.54785877e-04,
       4.20612105e-04, 3.63559400e-04, 4.73190950e-04, 4.08846132e-04,
       3.88645215e-04, 6.20161337e-04, 3.86143749e-04, 2.54490587e-04,
       3.01570906e-04, 5.14366116e-04, 3.48169573e-04, 2.76615515e-04,
       4.24161789e-04, 7.16595992e-04, 2.29044146e-04, 2.81454386e-04,
       5.32322622e-04, 3.90772843e-04, 4.06158535e-04, 1.48620505e-03,
       2.02267674e-03, 1.00425496e-03, 2.07818290e-03, 3.13425946e-04,
       7.44018198e-04, 7.44548670e-04, 3.34125320e-04, 7.43927946e-05,
       2.00023029e-03, 1.72838228e-03, 3.66089138e-04, 3.09103801e-04,
       4.51795889e-04, 2.98046556e-04, 3.78922211e-04, 4.10682137e-04,
       2.48272119e-03, 6.06335723e-04, 4.30310611e-04, 2.20369284e-04,
       7.07506436e-04, 2.01142691e-03, 2.02866285e-03, 7.90803371e-04,
       1.84456823e-03, 5.57607285e-04, 1.35548627e-03, 1.17861058e-03,
       9.38536452e-04, 8.12672762e-04, 4.12142956e-04, 2.55699181e-04,
       4.13714625e-04, 1.73480668e-03, 4.40463396e-04, 1.48469667e-03,
       4.92538445e-04, 2.00318196e-03, 7.62535061e-04, 8.12729370e-04,
       1.42298191e-04, 3.46535698e-04, 3.85381114e-04, 8.82047119e-04,
       6.72903635e-04, 3.74958090e-04, 5.17322535e-04, 6.69038284e-04,
       4.61717029e-04, 3.87107250e-04, 4.85852724e-04, 3.02905402e-04,
       3.76515218e-04, 4.45576890e-04, 9.63974981e-04, 3.14430289e-04,
       7.20731465e-04, 3.20719241e-04, 3.12331433e-04, 3.72266230e-04,
       3.26851283e-04, 8.77670255e-04, 2.44195903e-04, 1.79881758e-04,
       2.60337586e-04, 4.01207034e-04, 9.76307989e-04, 6.07421615e-04,
       1.75435037e-04, 2.83253581e-04, 3.41669842e-04, 4.19956850e-04,
       4.05228987e-04, 3.30087995e-04, 3.38921680e-04, 4.08814122e-04,
       4.12606127e-04, 4.39197410e-04, 4.16180253e-04, 7.03003881e-04,
       4.11839554e-04, 3.20146658e-03, 5.57508132e-04, 5.29544440e-04,
       5.53593600e-04, 2.09094801e-04, 6.78534166e-04, 8.33845272e-04,
       7.51224125e-04, 7.51871755e-04, 7.83217246e-04, 6.65279902e-04,
       8.08163545e-03, 4.70636356e-04, 8.61387779e-04, 3.93242805e-03,
       3.83614432e-04, 8.56057335e-04, 5.39079269e-04, 1.41287998e-03,
       2.10095525e-03, 3.76249212e-04, 3.44276006e-04, 1.26693659e-03]), 'param_alpha': masked_array(data=[0.004342406671012691, 0.0034528330823491225,
                   0.0036892151638250087, 3.040045559619459,
                   0.007178591163401846, 0.0003649012066045632,
                   0.40725481483569054, 5.952746342599021,
                   0.8261150960305693, 0.0009327380668740239,
                   0.06182566837200293, 0.0001, 0.0001,
                   0.028978417699145192, 0.08241450073842974,
                   0.12497593722583411, 0.017124491432581802,
                   0.04691377543136849, 0.0001778302062501076,
                   0.0017306032407028507, 0.04105174930036817,
                   0.047369069629509604, 0.013447460118516826,
                   0.0004631026023229923, 0.0006530659950972073,
                   0.14988819153879007, 0.009629300249595832,
                   0.0436129767175851, 0.046659706828195056,
                   0.00015063789509429246, 0.04735547551908617,
                   0.045664233769464886, 0.04187747449273085,
                   0.043051544935492715, 0.046129261310296286,
                   0.001786873296400004, 0.04756422389934,
                   0.024327357612103993, 0.03071868953211795,
                   0.051529073728795866, 0.04362711093401046,
                   0.07887072409594079, 0.039857691461435286,
                   0.03416381865291556, 0.022306153014669847,
                   0.06103058990395171, 0.03231637325495024,
                   0.0463682585365823, 0.2534870977058937,
                   0.0004653649046161821, 0.06447400623350143,
                   0.04370385909296302, 0.04242314880894857,
                   0.042251766675308, 0.05075602462584166,
                   0.04550858257276022, 0.039121818488261385,
                   0.0423838657522984, 0.03403464213840004,
                   0.062229968208066956, 0.041961614526581946,
                   0.03739503570132476, 0.042268951459191885,
                   0.08988218508124668, 0.039638702225230964,
                   0.045561115003225794, 0.03941040136568867,
                   0.048736544197006446, 0.044882003180014986,
                   0.03898517085684088, 0.041375898840041545,
                   0.052843891146090866, 0.04701355213224918,
                   0.045390702068587564, 0.027793274158456078,
                   0.045541859346434614, 0.036993061237957994,
                   0.019822540957909487, 0.030831505130781093,
                   0.041561864865382346, 0.053011841959743435,
                   0.02547149104872135, 0.013336238480950278,
                   0.029169199586727423, 0.05238333920334213,
                   0.042979581989666324, 0.03898221301829996,
                   0.04136183952116638, 0.04304127362583637,
                   0.05815900909778447, 0.047764743060034635,
                   0.04146941173930668, 0.04818632413525584,
                   0.04585080997785609, 0.03896217588483451,
                   0.04192535763584903, 0.05440742942084139,
                   0.03774360703199961, 0.03393901015318194,
                   0.062395851812895496, 0.023131294944934985,
                   0.04660291722351022, 0.01712605234863635,
                   0.04093247316338155, 0.06303733580859326,
                   0.0689714532085358, 0.048588303510084335,
                   0.04256080162881381, 0.04333635167646615,
                   0.0684078334307789, 0.03613312025503306,
                   0.05255241859564832, 0.05070315769311382,
                   0.05376781603292906, 0.0448245705431834,
                   0.05896988503905352, 0.039271192495519414,
                   0.023976393308250663, 0.038242104735980796,
                   0.040089406684618335, 0.04579035886879058,
                   0.03752453254042153, 0.04496804828717392,
                   0.04739926381794455, 0.04347827793938798,
                   0.04861697144151085, 0.001917582376107488,
                   0.054733562509522035],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[2, 5, 6, 5, 3, 3, 3, 3, 3, 5, 6, 6, 2, 2, 2, 6, 6, 2,
                   6, 2, 6, 2, 2, 6, 2, 2, 6, 6, 2, 2, 2, 6, 6, 6, 4, 6,
                   2, 2, 5, 2, 6, 6, 3, 4, 5, 2, 5, 2, 6, 2, 4, 5, 5, 2,
                   4, 3, 3, 3, 2, 5, 4, 2, 3, 2, 4, 4, 5, 6, 3, 5, 3, 3,
                   3, 4, 5, 2, 5, 5, 4, 3, 2, 4, 4, 3, 3, 4, 5, 2, 5, 6,
                   5, 2, 3, 3, 2, 3, 5, 3, 3, 4, 5, 5, 5, 5, 6, 3, 6, 3,
                   5, 3, 5, 3, 3, 4, 4, 3, 5, 6, 2, 4, 4, 3, 2, 5, 3, 3,
                   3, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.004342406671012691), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0034528330823491225), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0036892151638250087), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.040045559619459), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.007178591163401846), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0003649012066045632), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.40725481483569054), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.952746342599021), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.8261150960305693), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0009327380668740239), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06182566837200293), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.028978417699145192), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08241450073842974), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12497593722583411), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.017124491432581802), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04691377543136849), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001778302062501076), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0017306032407028507), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04105174930036817), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.047369069629509604), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.013447460118516826), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0004631026023229923), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0006530659950972073), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.14988819153879007), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.009629300249595832), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0436129767175851), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.046659706828195056), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00015063789509429246), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04735547551908617), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.045664233769464886), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04187747449273085), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.043051544935492715), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.046129261310296286), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.001786873296400004), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04756422389934), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.024327357612103993), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03071868953211795), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.051529073728795866), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04362711093401046), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07887072409594079), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.039857691461435286), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03416381865291556), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.022306153014669847), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06103058990395171), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03231637325495024), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0463682585365823), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2534870977058937), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0004653649046161821), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06447400623350143), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04370385909296302), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04242314880894857), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.042251766675308), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05075602462584166), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04550858257276022), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.039121818488261385), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0423838657522984), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03403464213840004), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.062229968208066956), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041961614526581946), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03739503570132476), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.042268951459191885), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08988218508124668), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.039638702225230964), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.045561115003225794), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03941040136568867), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.048736544197006446), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.044882003180014986), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03898517085684088), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041375898840041545), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052843891146090866), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04701355213224918), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.045390702068587564), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.027793274158456078), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.045541859346434614), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.036993061237957994), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.019822540957909487), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030831505130781093), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041561864865382346), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053011841959743435), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02547149104872135), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.013336238480950278), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029169199586727423), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05238333920334213), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.042979581989666324), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03898221301829996), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04136183952116638), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04304127362583637), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05815900909778447), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.047764743060034635), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04146941173930668), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04818632413525584), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04585080997785609), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03896217588483451), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04192535763584903), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05440742942084139), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03774360703199961), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03393901015318194), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.062395851812895496), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023131294944934985), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04660291722351022), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.01712605234863635), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04093247316338155), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06303733580859326), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0689714532085358), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.048588303510084335), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04256080162881381), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04333635167646615), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0684078334307789), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03613312025503306), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05255241859564832), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05070315769311382), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05376781603292906), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0448245705431834), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05896988503905352), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.039271192495519414), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023976393308250663), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.038242104735980796), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.040089406684618335), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04579035886879058), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03752453254042153), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04496804828717392), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04739926381794455), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04347827793938798), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04861697144151085), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.001917582376107488), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054733562509522035), ('degree', 3), ('kernel', 'rbf')])], 'split0_test_score': array([-2.25654767, -2.25688095, -2.25678922, -2.64191932, -2.25562419,
       -2.25810973, -2.32367904, -2.80766156, -2.4076228 , -2.25787944,
       -2.25421386, -2.25821784, -2.25821784, -2.25246644, -2.25644409,
       -2.26303547, -2.25331755, -2.25301142, -2.25818603, -2.25755919,
       -2.25272117, -2.25303522, -2.25400128, -2.25806976, -2.25799261,
       -2.26773595, -2.25486638, -2.25284421, -2.25299822, -2.25819714,
       -2.25303451, -2.25294701, -2.25276018, -2.25281672, -2.25297083,
       -2.25753675, -2.25304548, -2.2525767 , -2.25243924, -2.25328026,
       -2.25284491, -2.2560108 , -2.2526659 , -2.25242913, -2.25265812,
       -2.25413326, -2.25241873, -2.25298314, -2.28919372, -2.25806884,
       -2.25448428, -2.25284869, -2.2527863 , -2.25277807, -2.2532176 ,
       -2.25293908, -2.25263252, -2.25278441, -2.25242538, -2.25425494,
       -2.25276419, -2.25255629, -2.25277889, -2.25736344, -2.25265591,
       -2.25294176, -2.25264555, -2.25310774, -2.25290737, -2.25262638,
       -2.25273641, -2.25339064, -2.25301662, -2.25293309, -2.25248794,
       -2.25294078, -2.25253897, -2.25290807, -2.25243765, -2.25274519,
       -2.25340482, -2.25254007, -2.25402271, -2.25246321, -2.25335186,
       -2.25281322, -2.25262625, -2.25273574, -2.25281622, -2.25384728,
       -2.25305604, -2.25274082, -2.25307837, -2.25295654, -2.25262535,
       -2.25276246, -2.25352327, -2.25257144, -2.25242262, -2.25427182,
       -2.25261777, -2.25299528, -2.25331727, -2.25271559, -2.25433721,
       -2.25495007, -2.2530998 , -2.25279293, -2.25283063, -2.25489126,
       -2.25250248, -2.25336608, -2.25321468, -2.25346884, -2.25290448,
       -2.25392571, -2.25263926, -2.25258846, -2.25259332, -2.25267652,
       -2.25295345, -2.2525619 , -2.25291171, -2.25303681, -2.25283759,
       -2.25310133, -2.2574847 , -2.25355112]), 'split1_test_score': array([-2.23698466, -2.23726431, -2.23718953, -2.61538711, -2.23615518,
       -2.23836933, -2.29771826, -2.80015744, -2.38116637, -2.23815918,
       -2.23442082, -2.23846815, -2.23846815, -2.2331935 , -2.23599832,
       -2.24143863, -2.23400341, -2.23362746, -2.23843906, -2.23786771,
       -2.23344219, -2.23364338, -2.23465199, -2.23833282, -2.23826239,
       -2.24522508, -2.23550374, -2.2335185 , -2.23361867, -2.23844922,
       -2.23364291, -2.23358485, -2.23346597, -2.23350114, -2.23360052,
       -2.23784732, -2.23365085, -2.23322978, -2.2332169 , -2.2338422 ,
       -2.23351894, -2.23564356, -2.2334092 , -2.23327623, -2.23332132,
       -2.23437319, -2.23324232, -2.23360866, -2.26440013, -2.23833198,
       -2.23458269, -2.23352134, -2.23348212, -2.23347701, -2.23380237,
       -2.23357966, -2.23338972, -2.23348095, -2.23327371, -2.23444521,
       -2.23346844, -2.23334662, -2.23347752, -2.23680856, -2.23340333,
       -2.23358141, -2.23339728, -2.233702  , -2.23355902, -2.23338617,
       -2.23345143, -2.23391119, -2.23363093, -2.23357574, -2.23319081,
       -2.23358077, -2.23333712, -2.23359829, -2.23321857, -2.23345679,
       -2.23392011, -2.23319761, -2.23467242, -2.23319584, -2.23388685,
       -2.23349894, -2.2333861 , -2.23345103, -2.23350082, -2.23420508,
       -2.2336595 , -2.23345412, -2.23367782, -2.23359111, -2.23338558,
       -2.23346738, -2.23399519, -2.23335502, -2.23327185, -2.23445526,
       -2.23328287, -2.23361671, -2.23400314, -2.23343881, -2.23449427,
       -2.23486831, -2.23369545, -2.23348625, -2.2335099 , -2.23483181,
       -2.2333175 , -2.23389576, -2.23379966, -2.23396057, -2.23355714,
       -2.23425192, -2.23339362, -2.23324504, -2.2333673 , -2.23341547,
       -2.23358908, -2.23334972, -2.23356183, -2.23364445, -2.2335143 ,
       -2.23369672, -2.23780004, -2.23401298]), 'split2_test_score': array([-2.25520692, -2.2555553 , -2.25546225, -2.60293995, -2.25412812,
       -2.2568038 , -2.29978421, -2.76582745, -2.37572578, -2.25656952,
       -2.24352506, -2.25691383, -2.25691383, -2.2472553 , -2.24355245,
       -2.24665808, -2.25069184, -2.24425992, -2.25688145, -2.25624396,
       -2.24469842, -2.24423253, -2.25190351, -2.25676313, -2.25668464,
       -2.24990505, -2.25323327, -2.2444669 , -2.24427532, -2.25689276,
       -2.24423334, -2.24433652, -2.24460924, -2.24450361, -2.24430776,
       -2.25622116, -2.24422087, -2.24849507, -2.24682   , -2.24399469,
       -2.24446598, -2.24349945, -2.24489403, -2.24598844, -2.24908929,
       -2.24354797, -2.24642948, -2.2442931 , -2.26836196, -2.25676219,
       -2.24345302, -2.244461  , -2.24455446, -2.24457161, -2.24403723,
       -2.24434621, -2.2450163 , -2.24455839, -2.24601892, -2.24351363,
       -2.24460076, -2.24530847, -2.24456989, -2.24376811, -2.24493028,
       -2.24434293, -2.24496819, -2.2441519 , -2.24438555, -2.24503915,
       -2.24466007, -2.24392403, -2.24425389, -2.24435357, -2.24755784,
       -2.24434413, -2.24537756, -2.24984275, -2.24679214, -2.24464117,
       -2.24391515, -2.24816596, -2.25194119, -2.24720706, -2.24394854,
       -2.24450835, -2.24503964, -2.2446615 , -2.24450429, -2.24365911,
       -2.24420895, -2.24465056, -2.24418405, -2.24432495, -2.245043  ,
       -2.24460442, -2.2438427 , -2.24524889, -2.24604152, -2.24350899,
       -2.24884469, -2.24427878, -2.25069133, -2.2447178 , -2.24349129,
       -2.24339902, -2.24416052, -2.24454073, -2.24448493, -2.24339877,
       -2.24555352, -2.24393951, -2.24404017, -2.24387562, -2.24438918,
       -2.2436215 , -2.24499137, -2.24859706, -2.24516421, -2.2448558 ,
       -2.24432869, -2.2452863 , -2.24438012, -2.24423072, -2.24447567,
       -2.24415885, -2.25616827, -2.2438261 ]), 'mean_test_score': array([-2.24957975, -2.24990018, -2.24981367, -2.62008213, -2.24863583,
       -2.25109428, -2.3070605 , -2.79121548, -2.38817165, -2.25086938,
       -2.24405324, -2.25119994, -2.25119994, -2.24430508, -2.24533162,
       -2.25037739, -2.24600426, -2.24363293, -2.25116885, -2.25055695,
       -2.24362059, -2.24363705, -2.24685226, -2.25105524, -2.25097988,
       -2.25428869, -2.2478678 , -2.24360987, -2.24363074, -2.25117971,
       -2.24363692, -2.24362279, -2.2436118 , -2.24360716, -2.24362637,
       -2.25053508, -2.24363907, -2.24476718, -2.24415871, -2.24370572,
       -2.24360994, -2.24505127, -2.24365638, -2.24389794, -2.24502291,
       -2.24401814, -2.24403018, -2.2436283 , -2.27398527, -2.25105434,
       -2.24417333, -2.24361034, -2.24360763, -2.2436089 , -2.24368573,
       -2.24362165, -2.24367951, -2.24360792, -2.243906  , -2.24407126,
       -2.24361113, -2.24373712, -2.24360877, -2.24598004, -2.24366317,
       -2.24362203, -2.24367034, -2.24365388, -2.24361731, -2.2436839 ,
       -2.24361597, -2.24374195, -2.24363382, -2.2436208 , -2.2444122 ,
       -2.24362189, -2.24375122, -2.2454497 , -2.24414945, -2.24361438,
       -2.24374669, -2.24463455, -2.24687878, -2.2442887 , -2.24372908,
       -2.24360684, -2.243684  , -2.24361609, -2.24360711, -2.24390382,
       -2.2436415 , -2.24361517, -2.24364675, -2.2436242 , -2.24368464,
       -2.24361142, -2.24378706, -2.24372511, -2.243912  , -2.24407869,
       -2.24491511, -2.24363025, -2.24600392, -2.24362407, -2.24410759,
       -2.2444058 , -2.24365193, -2.24360664, -2.24360849, -2.24437395,
       -2.24379117, -2.24373379, -2.24368484, -2.24376834, -2.24361694,
       -2.24393304, -2.24367475, -2.24481019, -2.24370828, -2.24364926,
       -2.24362374, -2.24373264, -2.24361788, -2.24363733, -2.24360919,
       -2.2436523 , -2.25048434, -2.24379673]), 'std_test_score': array([0.00892288, 0.00895129, 0.00894303, 0.01625588, 0.00884626,
       0.00901368, 0.01178131, 0.01821157, 0.01393223, 0.00900337,
       0.0080891 , 0.00901846, 0.00901846, 0.00814   , 0.00844123,
       0.00920076, 0.00855332, 0.00792588, 0.00901706, 0.0089887 ,
       0.00790743, 0.00792787, 0.0086693 , 0.00901191, 0.00900846,
       0.0096987 , 0.00876809, 0.00791293, 0.00792479, 0.00901755,
       0.00792781, 0.00792066, 0.00790834, 0.00791099, 0.00792256,
       0.00898766, 0.0079285 , 0.00832661, 0.00806996, 0.00793819,
       0.00791298, 0.00838698, 0.00791008, 0.00795764, 0.00840157,
       0.00807386, 0.00801046, 0.00792356, 0.01087495, 0.00901187,
       0.00814074, 0.00791325, 0.00790929, 0.00790897, 0.00793013,
       0.00792004, 0.00791251, 0.00790921, 0.00796011, 0.0080969 ,
       0.00790848, 0.00792064, 0.007909  , 0.00853601, 0.00791074,
       0.00792025, 0.00791148, 0.00793018, 0.00791759, 0.00791302,
       0.0079076 , 0.0079535 , 0.00792631, 0.00791957, 0.00818601,
       0.00792017, 0.00792303, 0.00847314, 0.00806561, 0.00790786,
       0.00795549, 0.00828194, 0.00867293, 0.00813205, 0.00794807,
       0.00791075, 0.00791304, 0.00790758, 0.00791096, 0.00802076,
       0.00792877, 0.00790773, 0.00792935, 0.00792142, 0.00791311,
       0.00790842, 0.0079724 , 0.00791872, 0.00796196, 0.0081001 ,
       0.00836822, 0.00792455, 0.00855328, 0.00790762, 0.00811256,
       0.00822919, 0.00792995, 0.00790955, 0.00791197, 0.00821822,
       0.00793075, 0.00795006, 0.00793013, 0.00796458, 0.00791737,
       0.00803481, 0.00791196, 0.00833856, 0.00791622, 0.00790944,
       0.00792117, 0.00791991, 0.00791792, 0.00792801, 0.00791246,
       0.00793   , 0.00898524, 0.00797644]), 'rank_test_score': array([107, 109, 108, 127, 106, 118, 125, 128, 126, 114,  80, 121, 121,
        88,  98, 110, 102,  37, 119, 113,  24,  40, 103, 117, 115, 123,
       105,  11,  36, 120,  39,  29,  16,   4,  33, 112,  42,  93,  85,
        59,  12,  97,  49,  73,  96,  78,  79,  34, 124, 116,  86,  13,
         5,   9,  58,  26,  53,   6,  75,  81,  14,  65,   8, 100,  50,
        28,  51,  48,  22,  54,  19,  66,  38,  25,  91,  27,  68,  99,
        84,  17,  67,  92, 104,  87,  62,   2,  55,  20,   3,  74,  43,
        18,  44,  32,  56,  15,  70,  61,  76,  82,  95,  35, 101,  31,
        83,  90,  46,   1,   7,  89,  71,  64,  57,  69,  21,  77,  52,
        94,  60,  45,  30,  63,  23,  41,  10,  47, 111,  72], dtype=int32)}
-2.243606636868193
OrderedDict([('alpha', 0.04256080162881381), ('degree', 3), ('kernel', 'rbf')])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.55425755, 0.55308437, 0.56002673, 0.55762188, 0.56912033,
       0.55113935, 0.53859917, 0.55831369, 0.556856  , 0.566401  ,
       0.5559876 , 0.5622588 , 0.57863776, 0.56830398, 0.5875566 ,
       0.57035939, 0.56999445, 0.56912653, 0.59159104, 0.5753123 ,
       0.57190339, 0.56769347, 0.57104874, 0.56756083, 0.56499704,
       0.57342776, 0.57567779, 0.56975142, 0.56951817, 0.56394529,
       0.56854828, 0.57662384, 0.57487488, 0.58182359, 0.57610162,
       0.57434042, 0.56618524, 0.57048027, 0.57092031, 0.56800723,
       0.56385517, 0.56860495, 0.57033666, 0.56982676, 0.53637123,
       0.55491273, 0.55197398, 0.56577412, 0.56577079, 0.57197777,
       0.55114079, 0.56844473, 0.56218433, 0.56582618, 0.57096537,
       0.5622793 , 0.56960654, 0.55198693, 0.55550798, 0.55188727,
       0.55601501, 0.56415462, 0.55758548, 0.54904723, 0.56394577,
       0.54621728, 0.55570777, 0.55372095, 0.55316758, 0.55229465,
       0.55641842, 0.53915175, 0.54198194, 0.54844793, 0.54191621,
       0.54423761, 0.54419669, 0.54004232, 0.5424548 , 0.54215026,
       0.54394301, 0.54019451, 0.5426302 , 0.53657222, 0.54471819,
       0.56104962, 0.56569338, 0.55978258, 0.54661965, 0.55015262,
       0.561668  , 0.56471562, 0.57785606, 0.54346816, 0.56438319,
       0.56109357, 0.54453548, 0.56659516, 0.54713718, 0.57398216,
       0.5470589 , 0.54575348, 0.53927581, 0.54274456, 0.56305321,
       0.55358704, 0.56145255, 0.56240153, 0.54247149, 0.55263344,
       0.5750587 , 0.5747327 , 0.57075063, 0.56646021, 0.56036393,
       0.54203924, 0.56559118, 0.5611244 , 0.58020965, 0.5608151 ,
       0.56156691, 0.54091501, 0.55620654, 0.54573941, 0.56100249,
       0.56596708, 0.56304153, 0.55104216]), 'std_fit_time': array([0.00223944, 0.00034537, 0.00067308, 0.00315151, 0.00317238,
       0.00203046, 0.00452686, 0.00456556, 0.00125555, 0.01775544,
       0.01110215, 0.01553908, 0.00145941, 0.0177945 , 0.008617  ,
       0.03189796, 0.01143713, 0.01690493, 0.01323344, 0.01652405,
       0.00322744, 0.01526815, 0.00774086, 0.00751476, 0.01633016,
       0.00590414, 0.00377412, 0.00169327, 0.00356701, 0.01705753,
       0.00611869, 0.00820234, 0.02046066, 0.00273098, 0.00649653,
       0.00512037, 0.01817181, 0.00452534, 0.02009703, 0.01470417,
       0.01924915, 0.01007119, 0.00183664, 0.00813466, 0.0023047 ,
       0.00881416, 0.00715227, 0.01916796, 0.00426337, 0.00357617,
       0.01422811, 0.00665656, 0.01898833, 0.00686035, 0.00946287,
       0.009651  , 0.01512323, 0.01142697, 0.00256727, 0.0066342 ,
       0.00530995, 0.00814759, 0.00190195, 0.00841847, 0.00131207,
       0.00074933, 0.00974054, 0.00913179, 0.00953572, 0.00730506,
       0.0126605 , 0.00626914, 0.00370262, 0.00422296, 0.00410644,
       0.00896213, 0.00041306, 0.00360743, 0.00155396, 0.00473613,
       0.0030902 , 0.00049461, 0.00021677, 0.00231063, 0.00245104,
       0.00174479, 0.00189969, 0.00201682, 0.00260025, 0.00286716,
       0.0027773 , 0.00529557, 0.011075  , 0.0071502 , 0.01004881,
       0.00194056, 0.00235971, 0.00425438, 0.0049032 , 0.00159516,
       0.00386997, 0.00302106, 0.00415785, 0.00183839, 0.00583839,
       0.00268495, 0.00274793, 0.00202936, 0.00208536, 0.00299991,
       0.00182152, 0.00227968, 0.01879912, 0.01349482, 0.00188664,
       0.00344833, 0.00460746, 0.00208959, 0.0121504 , 0.00164295,
       0.00288148, 0.0023523 , 0.00477475, 0.00858982, 0.00426928,
       0.02063817, 0.00030271, 0.00604521]), 'mean_score_time': array([0.43938049, 0.44150925, 0.44215949, 0.44069719, 0.44120073,
       0.43854729, 0.43876592, 0.43918633, 0.4423128 , 0.439334  ,
       0.43949739, 0.4395829 , 0.43902516, 0.43911274, 0.44142135,
       0.45251894, 0.43920708, 0.441341  , 0.43880359, 0.45811168,
       0.44016457, 0.44271485, 0.43973462, 0.43899838, 0.43992726,
       0.46797895, 0.45726697, 0.44014963, 0.43963297, 0.43923505,
       0.44053968, 0.44231041, 0.44066572, 0.44211173, 0.43844795,
       0.43891231, 0.44066199, 0.44028918, 0.46980286, 0.46204432,
       0.44476271, 0.44630408, 0.44775454, 0.44197861, 0.43881456,
       0.43924761, 0.43830355, 0.43912832, 0.43905091, 0.43903748,
       0.43874375, 0.4398822 , 0.4390103 , 0.43848292, 0.44057131,
       0.43811242, 0.4431452 , 0.43835688, 0.43901777, 0.46151416,
       0.44343781, 0.43877212, 0.44036373, 0.43826834, 0.43918784,
       0.43995428, 0.43870719, 0.4379646 , 0.43898185, 0.43861914,
       0.45101341, 0.43822996, 0.43858258, 0.44948618, 0.44126773,
       0.442137  , 0.43860555, 0.43742633, 0.43821724, 0.44103074,
       0.44121257, 0.441595  , 0.43812815, 0.43988371, 0.43784984,
       0.43913412, 0.43870362, 0.43910551, 0.4381969 , 0.43918037,
       0.43925675, 0.45013213, 0.44383216, 0.45517159, 0.45290414,
       0.43880709, 0.43809541, 0.45202621, 0.45811264, 0.43946242,
       0.43878126, 0.43858759, 0.43776186, 0.43846742, 0.45207238,
       0.43909264, 0.44133441, 0.43879064, 0.43834901, 0.43875106,
       0.44152069, 0.44120932, 0.44677289, 0.45343709, 0.45062447,
       0.43796619, 0.44167892, 0.45340355, 0.46040956, 0.45085486,
       0.43898861, 0.43837547, 0.44124643, 0.45092169, 0.44171611,
       0.44495964, 0.44211721, 0.43930038]), 'std_score_time': array([0.0047297 , 0.00372226, 0.00447332, 0.00664467, 0.00687202,
       0.00507031, 0.00524096, 0.00508658, 0.0044547 , 0.00404302,
       0.00525119, 0.00416124, 0.00554438, 0.00459681, 0.00659485,
       0.02206882, 0.00499063, 0.00675226, 0.00501628, 0.02918281,
       0.00582634, 0.00452193, 0.00520742, 0.00447835, 0.00446438,
       0.03135233, 0.00993985, 0.00521026, 0.00574281, 0.00613454,
       0.0060594 , 0.00726784, 0.00344683, 0.00639608, 0.00466089,
       0.00438787, 0.00499313, 0.00499868, 0.03503994, 0.01280801,
       0.00321312, 0.01145192, 0.01645252, 0.00401078, 0.0047724 ,
       0.00512688, 0.00521964, 0.00535569, 0.0051422 , 0.00528456,
       0.00527662, 0.00414165, 0.00454705, 0.00522376, 0.00437977,
       0.00497623, 0.00774709, 0.00543813, 0.00540461, 0.03297281,
       0.00604518, 0.00547746, 0.00476991, 0.00458868, 0.00492927,
       0.00639112, 0.00507042, 0.00549602, 0.00521841, 0.0044686 ,
       0.01382116, 0.00442076, 0.00428077, 0.01863344, 0.00385565,
       0.00879748, 0.00553658, 0.00444933, 0.00444814, 0.00357149,
       0.00476193, 0.00419896, 0.00503044, 0.00509846, 0.00526506,
       0.00458232, 0.00493373, 0.00496159, 0.0043232 , 0.00497573,
       0.00545048, 0.0195388 , 0.01130007, 0.02617294, 0.02345245,
       0.0046913 , 0.00437604, 0.01329848, 0.02542062, 0.00446956,
       0.00436382, 0.00400749, 0.00507594, 0.00459992, 0.01992912,
       0.00466854, 0.00399628, 0.00479172, 0.00511142, 0.00481684,
       0.00648251, 0.00716151, 0.00907728, 0.01703169, 0.01981062,
       0.00503555, 0.00445523, 0.02256091, 0.02268768, 0.01958022,
       0.00495728, 0.00550899, 0.00436816, 0.0217969 , 0.00377851,
       0.01224793, 0.004068  , 0.00461813]), 'param_alpha': masked_array(data=[0.0012861956822366346, 0.007716696681914972,
                   4.26290946743954, 0.0024809717396941273,
                   0.010482370566112934, 0.3665563207176902,
                   0.0008894842627900436, 0.0001596274354314083,
                   0.26254005172002565, 0.10035809909313968, 0.0001,
                   0.03512677885565058, 0.0001, 0.025473861014036356,
                   0.004675297943707378, 0.0003617717018123598,
                   0.020485991844963716, 0.040697079067801026,
                   0.000520919137510377, 0.03000471029593948,
                   0.06621472597397715, 0.0002654898401586585,
                   0.004275367686040551, 0.013959624833601851,
                   0.030950185285136433, 0.0012480900535076968,
                   0.0019875207627651644, 0.00019796826014812738,
                   0.8712687562069691, 0.03312186801344018,
                   0.008102382763033093, 0.02938562050300401,
                   0.028648983248505015, 0.05719269885745473,
                   0.03477038044751101, 0.0010291783275048494,
                   3.408788583321294, 0.0005599824846512147,
                   0.029912696314263517, 0.003053438512641969,
                   0.014881554243260505, 0.03014691603446527,
                   0.002225320718302834, 0.09780073267009845,
                   1.3163124348618505, 0.034557407254334815,
                   0.002870167588855382, 0.04158870259287471,
                   0.03181116505470711, 0.05156915935181903,
                   0.0007940231986480915, 0.02500073416562557,
                   0.026458230699933027, 0.03273910578338681,
                   0.03487634102571367, 0.009175700651107408,
                   0.03292154821997791, 0.03170791544496655,
                   0.033165724196537016, 0.02821851966817966,
                   0.02916725914172853, 0.03206016341414694,
                   0.03487998054981941, 0.011379558931396944,
                   0.034515318365865764, 0.030616489175527416,
                   0.030070869024051677, 0.03254146109398888,
                   0.027673147435565506, 0.00015825212617100003,
                   0.03213251945079751, 0.018836719089569038,
                   0.02005124789647479, 0.03170589164167729,
                   0.031276415925498735, 0.029979946938683548,
                   0.0270950968835549, 0.03374166406676307,
                   0.028524160745396845, 0.02734166492902944,
                   0.03430282994579663, 0.030992302201733567,
                   0.02851094851437495, 0.03016664480919406,
                   0.03357180495979908, 0.01056853557987792,
                   0.00044253666518847363, 0.03764408244059249,
                   0.03501730779540014, 0.020962558201738167,
                   0.031022979685012792, 0.0007338474521636149,
                   0.029965516942871903, 0.032756937144747277,
                   0.02623800519285766, 0.032449769274040405,
                   0.03292709441560063, 0.033268573331316026,
                   0.02271535504457509, 0.02924105209471196,
                   0.24940019264796756, 0.030096696420650975,
                   0.032337355405455945, 0.02859678040154496,
                   0.02912840922380106, 0.03533377074660501,
                   0.023228769987726425, 0.02647758659418989,
                   0.029049373893170232, 0.03266531280689238,
                   0.02727390793881928, 0.030135867177295814,
                   0.035985911626489675, 0.02964687900768031,
                   0.03252753481826204, 0.03343009718762919,
                   0.03137920605323101, 0.033115507862816744,
                   0.02578181124622526, 0.03060002564163441,
                   0.03195408212653776, 0.025784013432032443,
                   0.03462810099651283, 0.031049598776514212,
                   0.029719215772586568, 0.02974233546558177,
                   0.028934660258511016, 0.026826850801266792],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[5, 2, 5, 3, 3, 6, 5, 3, 3, 6, 6, 2, 2, 6, 6, 6, 2, 6,
                   2, 2, 2, 2, 2, 6, 6, 2, 6, 6, 2, 2, 6, 6, 2, 6, 2, 3,
                   6, 6, 6, 6, 2, 4, 2, 2, 5, 6, 6, 4, 6, 5, 4, 4, 3, 5,
                   2, 6, 3, 4, 4, 2, 6, 2, 5, 3, 2, 4, 2, 2, 3, 5, 3, 4,
                   3, 2, 6, 5, 4, 4, 5, 6, 4, 3, 4, 3, 2, 6, 5, 6, 5, 6,
                   3, 3, 6, 3, 5, 3, 4, 2, 2, 2, 3, 4, 3, 2, 5, 5, 2, 3,
                   4, 3, 2, 6, 5, 3, 4, 4, 3, 5, 5, 4, 2, 3, 5, 3, 4, 3,
                   6, 5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.0012861956822366346), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.007716696681914972), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 4.26290946743954), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0024809717396941273), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.010482370566112934), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.3665563207176902), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0008894842627900436), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001596274354314083), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.26254005172002565), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10035809909313968), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03512677885565058), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.025473861014036356), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.004675297943707378), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0003617717018123598), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.020485991844963716), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.040697079067801026), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.000520919137510377), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03000471029593948), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06621472597397715), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0002654898401586585), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.004275367686040551), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.013959624833601851), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030950185285136433), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0012480900535076968), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0019875207627651644), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00019796826014812738), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.8712687562069691), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03312186801344018), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.008102382763033093), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02938562050300401), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.028648983248505015), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05719269885745473), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03477038044751101), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0010291783275048494), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.408788583321294), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005599824846512147), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029912696314263517), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.003053438512641969), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.014881554243260505), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03014691603446527), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.002225320718302834), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09780073267009845), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.3163124348618505), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.034557407254334815), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.002870167588855382), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04158870259287471), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03181116505470711), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05156915935181903), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0007940231986480915), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02500073416562557), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.026458230699933027), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03273910578338681), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03487634102571367), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.009175700651107408), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03292154821997791), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03170791544496655), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.033165724196537016), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02821851966817966), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02916725914172853), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03206016341414694), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03487998054981941), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.011379558931396944), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.034515318365865764), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030616489175527416), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030070869024051677), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03254146109398888), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.027673147435565506), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00015825212617100003), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03213251945079751), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.018836719089569038), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02005124789647479), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03170589164167729), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.031276415925498735), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029979946938683548), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0270950968835549), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03374166406676307), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.028524160745396845), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02734166492902944), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03430282994579663), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030992302201733567), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02851094851437495), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03016664480919406), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03357180495979908), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.01056853557987792), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00044253666518847363), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03764408244059249), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03501730779540014), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.020962558201738167), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.031022979685012792), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0007338474521636149), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029965516942871903), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.032756937144747277), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02623800519285766), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.032449769274040405), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03292709441560063), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.033268573331316026), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02271535504457509), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02924105209471196), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.24940019264796756), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030096696420650975), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.032337355405455945), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02859678040154496), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02912840922380106), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03533377074660501), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023228769987726425), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02647758659418989), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029049373893170232), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03266531280689238), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02727390793881928), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.030135867177295814), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.035985911626489675), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02964687900768031), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03252753481826204), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03343009718762919), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03137920605323101), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.033115507862816744), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02578181124622526), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03060002564163441), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03195408212653776), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.025784013432032443), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03462810099651283), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.031049598776514212), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029719215772586568), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02974233546558177), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.028934660258511016), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.026826850801266792), ('degree', 5), ('kernel', 'rbf')])], 'split0_test_score': array([-2.12986613, -2.12957431, -2.54052006, -2.12972434, -2.12959727,
       -2.18621322, -2.12991855, -2.13001602, -2.16860675, -2.14030573,
       -2.13002404, -2.13096504, -2.13002404, -2.13024869, -2.12955541,
       -2.12998889, -2.12993637, -2.13153664, -2.12996761, -2.1305784 ,
       -2.13480225, -2.1300018 , -2.12955342, -2.12964717, -2.13064762,
       -2.12987114, -2.12977439, -2.13001087, -2.26577555, -2.13081168,
       -2.12957718, -2.13053315, -2.13047939, -2.13363537, -2.13093771,
       -2.12990005, -2.49378716, -2.12996239, -2.13057167, -2.1296684 ,
       -2.12967563, -2.1305888 , -2.12974953, -2.13984484, -2.3251631 ,
       -2.1309214 , -2.12968624, -2.13164167, -2.13071187, -2.13290831,
       -2.12993122, -2.13021445, -2.13032003, -2.13078249, -2.13094583,
       -2.12958574, -2.1307964 , -2.13070402, -2.13081502, -2.13044801,
       -2.1305172 , -2.1307308 , -2.13094611, -2.12960588, -2.13091818,
       -2.13062317, -2.13058324, -2.13076744, -2.13040831, -2.1300162 ,
       -2.13073631, -2.12985657, -2.12991523, -2.13070387, -2.13067154,
       -2.13057658, -2.13036628, -2.130859  , -2.13047029, -2.1303842 ,
       -2.13090191, -2.13065071, -2.13046932, -2.13059024, -2.13084602,
       -2.12959807, -2.12997808, -2.13117627, -2.13095664, -2.12995964,
       -2.13065296, -2.12993922, -2.13057553, -2.13078385, -2.13030406,
       -2.13076045, -2.13079682, -2.13082287, -2.13004961, -2.13052259,
       -2.16626399, -2.13058512, -2.13075189, -2.13047558, -2.13051437,
       -2.13098091, -2.13008657, -2.13032144, -2.1305086 , -2.13077687,
       -2.13037927, -2.13058799, -2.131031  , -2.13055223, -2.13076638,
       -2.1308352 , -2.13067908, -2.13081119, -2.13027099, -2.13062197,
       -2.13072273, -2.13027115, -2.13092682, -2.13065491, -2.13055752,
       -2.13055921, -2.13050023, -2.13034679]), 'split1_test_score': array([-2.20322632, -2.20270106, -2.59951022, -2.20308795, -2.20255864,
       -2.25062639, -2.20327298, -2.20335976, -2.23208909, -2.20626785,
       -2.2033669 , -2.20214133, -2.2033669 , -2.20216029, -2.20290263,
       -2.2033356 , -2.20226119, -2.20225644, -2.20331665, -2.20209147,
       -2.20315638, -2.20334709, -2.20293246, -2.20243677, -2.2020797 ,
       -2.20323079, -2.20314472, -2.20335517, -2.3290617 , -2.2021049 ,
       -2.20268046, -2.20209965, -2.20210988, -2.2027662 , -2.20213466,
       -2.20325651, -2.55042693, -2.203312  , -2.20209266, -2.20302585,
       -2.20240879, -2.20208964, -2.20311729, -2.20596281, -2.38400965,
       -2.20213071, -2.20304357, -2.20227667, -2.20208257, -2.20254283,
       -2.20328426, -2.2021687 , -2.20214355, -2.20209825, -2.20213663,
       -2.2026244 , -2.20210141, -2.20208087, -2.20210566, -2.20211611,
       -2.20210263, -2.20208672, -2.2021367 , -2.20252095, -2.20212993,
       -2.20208375, -2.20209062, -2.20209486, -2.20212428, -2.20335992,
       -2.20208794, -2.20230072, -2.20227131, -2.20208083, -2.20207583,
       -2.20209179, -2.20213326, -2.20211587, -2.20211167, -2.20212938,
       -2.20212603, -2.20207919, -2.20211186, -2.20208939, -2.20211283,
       -2.2025544 , -2.20332597, -2.20219089, -2.20213927, -2.20225035,
       -2.20207883, -2.20329138, -2.20209198, -2.20209856, -2.20214721,
       -2.2020933 , -2.2021015 , -2.20210747, -2.2022127 , -2.20210162,
       -2.22983236, -2.20209029, -2.20209139, -2.20211063, -2.20210316,
       -2.20214525, -2.20220232, -2.20214323, -2.20210426, -2.20209698,
       -2.20213044, -2.20208978, -2.20215778, -2.20209615, -2.20209463,
       -2.20211032, -2.20207548, -2.20210479, -2.20215494, -2.20208395,
       -2.20208495, -2.20215491, -2.20213202, -2.20207851, -2.2020952 ,
       -2.20209489, -2.20210585, -2.20213754]), 'split2_test_score': array([-2.13767114, -2.13564861, -2.57307491, -2.13726972, -2.13493326,
       -2.1894057 , -2.13780659, -2.13805866, -2.16576135, -2.13658789,
       -2.13807942, -2.13143589, -2.13807942, -2.13234832, -2.13655712,
       -2.13798847, -2.13299032, -2.13127421, -2.13793341, -2.13185891,
       -2.13255275, -2.13802186, -2.13668468, -2.13412655, -2.13176466,
       -2.1376841 , -2.13743434, -2.13804532, -2.28397485, -2.13156893,
       -2.13554634, -2.13192206, -2.13199869, -2.13171295, -2.13145588,
       -2.13775877, -2.52349562, -2.13791992, -2.13186822, -2.13708078,
       -2.13392812, -2.13184457, -2.1373548 , -2.13626026, -2.34664112,
       -2.13146797, -2.13714103, -2.13126866, -2.1316811 , -2.13146003,
       -2.13783934, -2.13240319, -2.1322365 , -2.13159926, -2.1314499 ,
       -2.13526607, -2.13158475, -2.13169101, -2.13156548, -2.13204424,
       -2.1319446 , -2.13165733, -2.1314497 , -2.1347155 , -2.13147037,
       -2.13179763, -2.13185223, -2.13161507, -2.13210277, -2.13805913,
       -2.13165046, -2.13322749, -2.13305183, -2.13169121, -2.13173275,
       -2.13186141, -2.13216582, -2.13152065, -2.13201184, -2.13213879,
       -2.13148257, -2.13176053, -2.13201323, -2.13184258, -2.13153378,
       -2.13491163, -2.1379605 , -2.13134683, -2.131442  , -2.13292371,
       -2.13175752, -2.13786003, -2.13186287, -2.13159784, -2.13226125,
       -2.13162244, -2.13158431, -2.13155741, -2.13268588, -2.13193697,
       -2.16290623, -2.13184963, -2.13163151, -2.13200418, -2.13194863,
       -2.13142443, -2.13261832, -2.13223434, -2.13195683, -2.13160515,
       -2.1321462 , -2.13184568, -2.13139443, -2.13189527, -2.13161619,
       -2.13154479, -2.13172276, -2.13156943, -2.132313  , -2.13179926,
       -2.13166744, -2.13231275, -2.13146394, -2.13175491, -2.13188789,
       -2.13188553, -2.13196878, -2.13219543]), 'mean_test_score': array([-2.1569212 , -2.15597466, -2.57103507, -2.156694  , -2.15569639,
       -2.20874844, -2.15699937, -2.15714481, -2.18881906, -2.16105382,
       -2.15715678, -2.15484742, -2.15715678, -2.1549191 , -2.15633838,
       -2.15710432, -2.15506263, -2.15502243, -2.15707255, -2.15484293,
       -2.15683713, -2.15712358, -2.15639019, -2.1554035 , -2.15483066,
       -2.15692868, -2.15678448, -2.15713712, -2.29293737, -2.1548285 ,
       -2.15593466, -2.15485162, -2.15486265, -2.15603817, -2.15484275,
       -2.15697178, -2.5225699 , -2.15706477, -2.15484418, -2.15659168,
       -2.15533751, -2.154841  , -2.15674054, -2.1606893 , -2.35193796,
       -2.15484003, -2.15662361, -2.15506233, -2.15482518, -2.15563706,
       -2.15701828, -2.15492878, -2.15490003, -2.15482667, -2.15484412,
       -2.1558254 , -2.15482752, -2.1548253 , -2.15482872, -2.15486946,
       -2.15485481, -2.15482495, -2.15484417, -2.15561411, -2.15483949,
       -2.15483485, -2.15484203, -2.15482579, -2.15487845, -2.15714509,
       -2.1548249 , -2.15512826, -2.15507946, -2.1548253 , -2.15482671,
       -2.15484326, -2.15488845, -2.15483184, -2.1548646 , -2.15488413,
       -2.15483684, -2.15483014, -2.15486481, -2.15484074, -2.15483088,
       -2.15568803, -2.15708819, -2.15490466, -2.15484597, -2.15504457,
       -2.15482977, -2.15703021, -2.15484346, -2.15482675, -2.15490417,
       -2.1548254 , -2.15482755, -2.15482925, -2.15498273, -2.15485372,
       -2.18633419, -2.15484168, -2.15482493, -2.15486347, -2.15485539,
       -2.1548502 , -2.15496907, -2.15489967, -2.15485656, -2.15482634,
       -2.15488531, -2.15484115, -2.15486107, -2.15484789, -2.15482573,
       -2.1548301 , -2.15482577, -2.15482847, -2.15491298, -2.15483506,
       -2.15482504, -2.15491294, -2.15484092, -2.15482944, -2.15484687,
       -2.15484655, -2.15485828, -2.15489326]), 'std_test_score': array([0.03289735, 0.03313349, 0.02412579, 0.03294978, 0.03320814,
       0.02964085, 0.03287847, 0.03284344, 0.03061857, 0.03200715,
       0.03284056, 0.0334424 , 0.03284056, 0.03341556, 0.03304974,
       0.03285318, 0.0333977 , 0.03339966, 0.03286082, 0.03341386,
       0.03276553, 0.03284854, 0.03303888, 0.03330778, 0.03341323,
       0.03289554, 0.03293046, 0.03284529, 0.02660237, 0.03343089,
       0.03314398, 0.03341422, 0.03341459, 0.03305103, 0.0334411 ,
       0.03288513, 0.02313235, 0.0328627 , 0.03341391, 0.03297307,
       0.03332966, 0.03341377, 0.03293997, 0.03204664, 0.02431422,
       0.03344031, 0.03296465, 0.03338593, 0.03341837, 0.03317266,
       0.03287391, 0.03341562, 0.03341538, 0.03342772, 0.03344149,
       0.03317304, 0.03342923, 0.03341716, 0.03343125, 0.03341479,
       0.03341433, 0.03342126, 0.0334415 , 0.03323368, 0.03344015,
       0.03341346, 0.03341381, 0.03342607, 0.033415  , 0.03284337,
       0.0334221 , 0.03338434, 0.03339424, 0.03341714, 0.03341299,
       0.03341387, 0.0334152 , 0.03343595, 0.03341465, 0.03341512,
       0.03343935, 0.0334132 , 0.03341466, 0.03341375, 0.03343457,
       0.03321045, 0.03285706, 0.03343648, 0.033442  , 0.03340146,
       0.03341317, 0.03287103, 0.03341388, 0.03342787, 0.03341543,
       0.03342531, 0.03342928, 0.03343209, 0.03341397, 0.0334143 ,
       0.03078838, 0.0334138 , 0.03342436, 0.03341462, 0.03341435,
       0.03344314, 0.03341494, 0.03341537, 0.0334144 , 0.03342711,
       0.03341514, 0.03341377, 0.03344415, 0.03341407, 0.03342596,
       0.03343342, 0.03341331, 0.03343084, 0.03341551, 0.03341347,
       0.03342003, 0.03341551, 0.03344057, 0.03341315, 0.03341403,
       0.03341401, 0.03341445, 0.03341528]), 'rank_test_score': array([104,  94, 128, 100,  91, 124, 107, 116, 123, 121, 118,  50, 118,
        76,  96, 113,  83,  80, 111,  41, 103, 114,  97,  87,  26, 105,
       102, 115, 125,  19,  93,  53,  60,  95,  40, 106, 127, 110,  46,
        98,  86,  36, 101, 120, 126,  33,  99,  82,   5,  89, 108,  77,
        71,  13,  44,  92,  16,   6,  20,  64,  55,   3,  45,  88,  32,
        29,  39,  11,  65, 117,   1,  85,  84,   7,  14,  42,  68,  28,
        62,  66,  31,  25,  63,  34,  27,  90, 112,  73,  47,  81,  23,
       109,  43,  15,  72,   8,  17,  21,  79,  54, 122,  38,   2,  61,
        56,  52,  78,  70,  57,  12,  67,  37,  59,  51,   9,  24,  10,
        18,  75,  30,   4,  74,  35,  22,  49,  48,  58,  69], dtype=int32)}
-2.1548248994385113
OrderedDict([('alpha', 0.03213251945079751), ('degree', 3), ('kernel', 'rbf')])
[CV 2/3] END alpha=5.952746342599021, degree=3, kernel=rbf;, score=-2.800 total time=   0.1s
[CV 3/3] END alpha=0.0436129767175851, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.2534870977058937, degree=6, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 2/3] END alpha=0.03898517085684088, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.047764743060034635, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.05255241859564832, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0024809717396941273, degree=3, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 2/3] END alpha=0.030950185285136433, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.034557407254334815, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.030070869024051677, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.00044253666518847363, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.02647758659418989, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.06182566837200293, degree=6, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 1/3] END alpha=0.045664233769464886, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04370385909296302, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 1/3] END alpha=0.04701355213224918, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04818632413525584, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.05376781603292906, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0008894842627900436, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0019875207627651644, degree=6, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 3/3] END alpha=0.002870167588855382, degree=6, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 3/3] END alpha=0.030070869024051677, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03764408244059249, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02647758659418989, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=5.952746342599021, degree=3, kernel=rbf;, score=-2.766 total time=   0.1s
[CV 2/3] END alpha=0.046659706828195056, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 2/3] END alpha=0.0004653649046161821, degree=2, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.041375898840041545, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.047764743060034635, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.05255241859564832, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.010482370566112934, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.030950185285136433, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.034557407254334815, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.030070869024051677, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.03764408244059249, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.029049373893170232, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.8261150960305693, degree=3, kernel=rbf;, score=-2.381 total time=   0.1s
[CV 1/3] END alpha=0.00015063789509429246, degree=2, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.06447400623350143, degree=4, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 1/3] END alpha=0.052843891146090866, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04146941173930668, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.05070315769311382, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.3665563207176902, degree=6, kernel=rbf;, score=-2.186 total time=   1.0s
[CV 3/3] END alpha=0.0012480900535076968, degree=2, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.002870167588855382, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.03254146109398888, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03764408244059249, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.029049373893170232, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.0009327380668740239, degree=5, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 2/3] END alpha=0.04735547551908617, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04370385909296302, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.052843891146090866, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04818632413525584, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.05070315769311382, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.3665563207176902, degree=6, kernel=rbf;, score=-2.251 total time=   1.0s
[CV 1/3] END alpha=0.0019875207627651644, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.04158870259287471, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.03254146109398888, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03501730779540014, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03266531280689238, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=5.952746342599021, degree=3, kernel=rbf;, score=-2.808 total time=   0.1s
[CV 1/3] END alpha=0.046659706828195056, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.0004653649046161821, degree=2, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.041375898840041545, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.04146941173930668, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05255241859564832, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.010482370566112934, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0012480900535076968, degree=2, kernel=rbf;, score=-2.130 total time=   1.1s
[CV 2/3] END alpha=0.002870167588855382, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.03254146109398888, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03501730779540014, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.029049373893170232, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.0009327380668740239, degree=5, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 1/3] END alpha=0.04735547551908617, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.06447400623350143, degree=4, kernel=rbf;, score=-2.243 total time=   0.1s
[CV 2/3] END alpha=0.052843891146090866, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04818632413525584, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.05376781603292906, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.3665563207176902, degree=6, kernel=rbf;, score=-2.189 total time=   1.0s
[CV 2/3] END alpha=0.0019875207627651644, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.04158870259287471, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.027673147435565506, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03501730779540014, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.03266531280689238, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.04187747449273085, degree=6, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=0.04242314880894857, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.045390702068587564, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04585080997785609, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.0448245705431834, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0001596274354314083, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00019796826014812738, degree=6, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.03181116505470711, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.027673147435565506, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.020962558201738167, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03266531280689238, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.06182566837200293, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.04735547551908617, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04370385909296302, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 2/3] END alpha=0.04701355213224918, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04585080997785609, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05376781603292906, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.0008894842627900436, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00019796826014812738, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.04158870259287471, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.027673147435565506, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.020962558201738167, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02727390793881928, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.06182566837200293, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.045664233769464886, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04242314880894857, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04701355213224918, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04585080997785609, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0448245705431834, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0008894842627900436, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.00019796826014812738, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.03181116505470711, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.00015825212617100003, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.020962558201738167, degree=6, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.02727390793881928, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.045664233769464886, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04242314880894857, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.045390702068587564, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03896217588483451, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0448245705431834, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.0001596274354314083, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.8712687562069691, degree=2, kernel=rbf;, score=-2.266 total time=   1.0s
[CV 3/3] END alpha=0.03181116505470711, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.00015825212617100003, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.031022979685012792, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02727390793881928, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.04187747449273085, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.042251766675308, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.045390702068587564, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.03896217588483451, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.05896988503905352, degree=3, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 1/3] END alpha=0.26254005172002565, degree=3, kernel=rbf;, score=-2.169 total time=   1.0s
[CV 3/3] END alpha=0.8712687562069691, degree=2, kernel=rbf;, score=-2.284 total time=   1.0s
[CV 1/3] END alpha=0.05156915935181903, degree=5, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 3/3] END alpha=0.00015825212617100003, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.031022979685012792, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.030135867177295814, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.043051544935492715, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.05075602462584166, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.027793274158456078, degree=5, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.04192535763584903, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.039271192495519414, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.26254005172002565, degree=3, kernel=rbf;, score=-2.166 total time=   1.0s
[CV 2/3] END alpha=0.03312186801344018, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.05156915935181903, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.03213251945079751, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.031022979685012792, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.030135867177295814, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.04187747449273085, degree=6, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.042251766675308, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.027793274158456078, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.04192535763584903, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05896988503905352, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.26254005172002565, degree=3, kernel=rbf;, score=-2.232 total time=   1.0s
[CV 1/3] END alpha=0.03312186801344018, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.0007940231986480915, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03213251945079751, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.0007338474521636149, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.030135867177295814, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.043051544935492715, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.05075602462584166, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.045541859346434614, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04192535763584903, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.039271192495519414, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.10035809909313968, degree=6, kernel=rbf;, score=-2.206 total time=   1.0s
[CV 1/3] END alpha=0.008102382763033093, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0007940231986480915, degree=4, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.018836719089569038, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0007338474521636149, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.035985911626489675, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.028978417699145192, degree=2, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.043051544935492715, degree=6, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=0.042251766675308, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.027793274158456078, degree=5, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.03896217588483451, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.05896988503905352, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.0001596274354314083, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.8712687562069691, degree=2, kernel=rbf;, score=-2.329 total time=   1.0s
[CV 2/3] END alpha=0.05156915935181903, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.03213251945079751, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.0007338474521636149, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.035985911626489675, degree=5, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 3/3] END alpha=0.028978417699145192, degree=2, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 1/3] END alpha=0.046129261310296286, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05075602462584166, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.045541859346434614, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.05440742942084139, degree=5, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.039271192495519414, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.10035809909313968, degree=6, kernel=rbf;, score=-2.140 total time=   1.0s
[CV 3/3] END alpha=0.03312186801344018, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.0007940231986480915, degree=4, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.018836719089569038, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.029965516942871903, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.035985911626489675, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.08241450073842974, degree=2, kernel=rbf;, score=-2.236 total time=   0.1s
[CV 1/3] END alpha=0.001786873296400004, degree=6, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.04550858257276022, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.036993061237957994, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.03774360703199961, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.023976393308250663, degree=6, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 2/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=0.008102382763033093, degree=6, kernel=rbf;, score=-2.136 total time=   1.0s
[CV 2/3] END alpha=0.02500073416562557, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02005124789647479, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.029965516942871903, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.02964687900768031, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.08241450073842974, degree=2, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 3/3] END alpha=0.046129261310296286, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04550858257276022, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.045541859346434614, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.05440742942084139, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.023976393308250663, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.02938562050300401, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02500073416562557, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02005124789647479, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.032756937144747277, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02964687900768031, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.028978417699145192, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.046129261310296286, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04550858257276022, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.036993061237957994, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05440742942084139, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.023976393308250663, degree=6, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.10035809909313968, degree=6, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 2/3] END alpha=0.008102382763033093, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.02500073416562557, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.018836719089569038, degree=4, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.029965516942871903, degree=6, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 2/3] END alpha=0.02964687900768031, degree=3, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 1/3] END alpha=0.017124491432581802, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04756422389934, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 3/3] END alpha=0.039121818488261385, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.019822540957909487, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03393901015318194, degree=3, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.038242104735980796, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.03512677885565058, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.02938562050300401, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.026458230699933027, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.02005124789647479, degree=3, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.032756937144747277, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03252753481826204, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.04691377543136849, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.024327357612103993, degree=2, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.03403464213840004, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.030831505130781093, degree=4, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 1/3] END alpha=0.062395851812895496, degree=4, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.040089406684618335, degree=4, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.028648983248505015, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03273910578338681, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03170589164167729, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.02623800519285766, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03252753481826204, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.08241450073842974, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.001786873296400004, degree=6, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 2/3] END alpha=0.039121818488261385, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.036993061237957994, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.03774360703199961, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.038242104735980796, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0001, degree=6, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.02938562050300401, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.026458230699933027, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03170589164167729, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.032756937144747277, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03252753481826204, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.12497593722583411, degree=6, kernel=rbf;, score=-2.263 total time=   0.1s
[CV 1/3] END alpha=0.04756422389934, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.0423838657522984, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.030831505130781093, degree=4, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.03393901015318194, degree=3, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=0.040089406684618335, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.05719269885745473, degree=6, kernel=rbf;, score=-2.134 total time=   1.0s
[CV 3/3] END alpha=0.03273910578338681, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.031276415925498735, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.02623800519285766, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03343009718762919, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.12497593722583411, degree=6, kernel=rbf;, score=-2.241 total time=   0.1s
[CV 2/3] END alpha=0.04756422389934, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 2/3] END alpha=0.0423838657522984, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.019822540957909487, degree=5, kernel=rbf;, score=-2.250 total time=   0.1s
[CV 2/3] END alpha=0.03393901015318194, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.040089406684618335, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03512677885565058, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.028648983248505015, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.026458230699933027, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03170589164167729, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.02623800519285766, degree=5, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 2/3] END alpha=0.03343009718762919, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.12497593722583411, degree=6, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 3/3] END alpha=0.001786873296400004, degree=6, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 1/3] END alpha=0.039121818488261385, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.019822540957909487, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03774360703199961, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.038242104735980796, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.03512677885565058, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.028648983248505015, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.03273910578338681, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.031276415925498735, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.032449769274040405, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03343009718762919, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.017124491432581802, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.024327357612103993, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0423838657522984, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.030831505130781093, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.062395851812895496, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04579035886879058, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.05719269885745473, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.03487634102571367, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.031276415925498735, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.032449769274040405, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03137920605323101, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.017124491432581802, degree=6, kernel=rbf;, score=-2.251 total time=   0.1s
[CV 2/3] END alpha=0.024327357612103993, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.03403464213840004, degree=2, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 1/3] END alpha=0.041561864865382346, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.062395851812895496, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04579035886879058, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.025473861014036356, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.05719269885745473, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03487634102571367, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.029979946938683548, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.032449769274040405, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03137920605323101, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.0001778302062501076, degree=6, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.03071868953211795, degree=5, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 1/3] END alpha=0.062229968208066956, degree=5, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 1/3] END alpha=0.053011841959743435, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.023131294944934985, degree=5, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 2/3] END alpha=0.03752453254042153, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.004675297943707378, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.0010291783275048494, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.009175700651107408, degree=6, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 3/3] END alpha=0.029979946938683548, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03292709441560063, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03137920605323101, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.04691377543136849, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.03071868953211795, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.062229968208066956, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.041561864865382346, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.023131294944934985, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.03752453254042153, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.025473861014036356, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03477038044751101, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.03487634102571367, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.029979946938683548, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.03292709441560063, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.033115507862816744, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.0001778302062501076, degree=6, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.051529073728795866, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.062229968208066956, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.053011841959743435, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04660291722351022, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03752453254042153, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.004675297943707378, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.0010291783275048494, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.03292154821997791, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.0270950968835549, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.033268573331316026, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.033115507862816744, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.04691377543136849, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03071868953211795, degree=5, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.03403464213840004, degree=2, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=0.041561864865382346, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.023131294944934985, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04579035886879058, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.025473861014036356, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03477038044751101, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.009175700651107408, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.0270950968835549, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03292709441560063, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.033115507862816744, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.004342406671012691, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.04105174930036817, degree=6, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=0.04362711093401046, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 3/3] END alpha=0.041961614526581946, degree=4, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.02547149104872135, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.01712605234863635, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04496804828717392, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.0003617717018123598, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=3.408788583321294, degree=6, kernel=rbf;, score=-2.494 total time=   1.0s
[CV 3/3] END alpha=0.03292154821997791, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03374166406676307, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.033268573331316026, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.02578181124622526, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.0017306032407028507, degree=2, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=0.051529073728795866, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 1/3] END alpha=0.041961614526581946, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.02547149104872135, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04660291722351022, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04496804828717392, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0003617717018123598, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0010291783275048494, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.03292154821997791, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.03374166406676307, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02271535504457509, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.02578181124622526, degree=5, kernel=rbf;, score=-2.132 total time=   1.1s
[CV 3/3] END alpha=0.0001778302062501076, degree=6, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.051529073728795866, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 2/3] END alpha=0.041961614526581946, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.053011841959743435, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04660291722351022, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04496804828717392, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.004675297943707378, degree=6, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 3/3] END alpha=0.03477038044751101, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.009175700651107408, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.0270950968835549, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.033268573331316026, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.02578181124622526, degree=5, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 1/3] END alpha=0.0017306032407028507, degree=2, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.04362711093401046, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03739503570132476, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.02547149104872135, degree=4, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.01712605234863635, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04739926381794455, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0003617717018123598, degree=6, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 2/3] END alpha=3.408788583321294, degree=6, kernel=rbf;, score=-2.550 total time=   1.0s
[CV 1/3] END alpha=0.03170791544496655, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03374166406676307, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02271535504457509, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03060002564163441, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.04105174930036817, degree=6, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.07887072409594079, degree=6, kernel=rbf;, score=-2.236 total time=   0.1s
[CV 3/3] END alpha=0.03739503570132476, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.013336238480950278, degree=4, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.01712605234863635, degree=5, kernel=rbf;, score=-2.251 total time=   0.1s
[CV 2/3] END alpha=0.04739926381794455, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.020485991844963716, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.0005599824846512147, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03170791544496655, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.028524160745396845, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02924105209471196, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03060002564163441, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.0017306032407028507, degree=2, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 1/3] END alpha=0.04362711093401046, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.03739503570132476, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.013336238480950278, degree=4, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 1/3] END alpha=0.04093247316338155, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04739926381794455, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.020485991844963716, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=3.408788583321294, degree=6, kernel=rbf;, score=-2.523 total time=   1.0s
[CV 2/3] END alpha=0.03170791544496655, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.028524160745396845, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.02271535504457509, degree=2, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.03060002564163441, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.0034528330823491225, degree=5, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 1/3] END alpha=0.013447460118516826, degree=2, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.039857691461435286, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=0.042268951459191885, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=0.013336238480950278, degree=4, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 2/3] END alpha=0.04093247316338155, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.04347827793938798, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.020485991844963716, degree=2, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.0005599824846512147, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.033165724196537016, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.028524160745396845, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02924105209471196, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03195408212653776, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.004342406671012691, degree=2, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 1/3] END alpha=0.047369069629509604, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.07887072409594079, degree=6, kernel=rbf;, score=-2.243 total time=   0.1s
[CV 2/3] END alpha=0.042268951459191885, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.029169199586727423, degree=3, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.04093247316338155, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.04347827793938798, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 2/3] END alpha=0.040697079067801026, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.029912696314263517, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.033165724196537016, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02734166492902944, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.02924105209471196, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03195408212653776, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.04105174930036817, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.07887072409594079, degree=6, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 1/3] END alpha=0.042268951459191885, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.029169199586727423, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.06303733580859326, degree=6, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.04347827793938798, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 1/3] END alpha=0.040697079067801026, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.0005599824846512147, degree=6, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.033165724196537016, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02734166492902944, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.24940019264796756, degree=3, kernel=rbf;, score=-2.166 total time=   1.0s
[CV 3/3] END alpha=0.03195408212653776, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=0.004342406671012691, degree=2, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 2/3] END alpha=0.047369069629509604, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.039857691461435286, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.08988218508124668, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.029169199586727423, degree=3, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 2/3] END alpha=0.06303733580859326, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.04861697144151085, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.040697079067801026, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.029912696314263517, degree=6, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 1/3] END alpha=0.02821851966817966, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.02734166492902944, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.24940019264796756, degree=3, kernel=rbf;, score=-2.230 total time=   1.0s
[CV 1/3] END alpha=0.025784013432032443, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0036892151638250087, degree=6, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 2/3] END alpha=0.0004631026023229923, degree=6, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=0.03416381865291556, degree=4, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 3/3] END alpha=0.08988218508124668, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.05238333920334213, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0689714532085358, degree=3, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 3/3] END alpha=0.04861697144151085, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.000520919137510377, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.003053438512641969, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.02821851966817966, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03430282994579663, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.24940019264796756, degree=3, kernel=rbf;, score=-2.163 total time=   1.0s
[CV 2/3] END alpha=0.025784013432032443, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=3.040045559619459, degree=5, kernel=rbf;, score=-2.615 total time=   0.1s
[CV 3/3] END alpha=0.0004631026023229923, degree=6, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.022306153014669847, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.045561115003225794, degree=4, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03898221301829996, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.048588303510084335, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.054733562509522035, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.06621472597397715, degree=2, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 3/3] END alpha=0.014881554243260505, degree=2, kernel=rbf;, score=-2.134 total time=   1.0s
[CV 3/3] END alpha=0.02916725914172853, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.030992302201733567, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.030096696420650975, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03462810099651283, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.007178591163401846, degree=3, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 3/3] END alpha=0.0006530659950972073, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.022306153014669847, degree=5, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 3/3] END alpha=0.039638702225230964, degree=4, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.042979581989666324, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0689714532085358, degree=3, kernel=rbf;, score=-2.243 total time=   0.1s
[CV 1/3] END alpha=0.001917582376107488, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.000520919137510377, degree=2, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.003053438512641969, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.02916725914172853, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03430282994579663, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.030096696420650975, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03462810099651283, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.0034528330823491225, degree=5, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.013447460118516826, degree=2, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 1/3] END alpha=0.03416381865291556, degree=4, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 2/3] END alpha=0.039638702225230964, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.05238333920334213, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.0689714532085358, degree=3, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 2/3] END alpha=0.001917582376107488, degree=3, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.03000471029593948, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.014881554243260505, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.03206016341414694, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.030992302201733567, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.032337355405455945, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03462810099651283, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.0034528330823491225, degree=5, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 3/3] END alpha=0.047369069629509604, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.039857691461435286, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.08988218508124668, degree=2, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 1/3] END alpha=0.05238333920334213, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.06303733580859326, degree=6, kernel=rbf;, score=-2.243 total time=   0.1s
[CV 2/3] END alpha=0.04861697144151085, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.000520919137510377, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.029912696314263517, degree=6, kernel=rbf;, score=-2.132 total time=   1.1s
[CV 2/3] END alpha=0.02821851966817966, degree=2, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 2/3] END alpha=0.03430282994579663, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.030096696420650975, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.025784013432032443, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.0036892151638250087, degree=6, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 1/3] END alpha=0.0004631026023229923, degree=6, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 1/3] END alpha=0.022306153014669847, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.045561115003225794, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.042979581989666324, degree=4, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.048588303510084335, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.054733562509522035, degree=3, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.03000471029593948, degree=2, kernel=rbf;, score=-2.132 total time=   1.1s
[CV 2/3] END alpha=0.014881554243260505, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03206016341414694, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.02851094851437495, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.032337355405455945, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.031049598776514212, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.0036892151638250087, degree=6, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.013447460118516826, degree=2, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 2/3] END alpha=0.03416381865291556, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.039638702225230964, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.042979581989666324, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.048588303510084335, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.001917582376107488, degree=3, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 2/3] END alpha=0.03000471029593948, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 3/3] END alpha=0.003053438512641969, degree=6, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 2/3] END alpha=0.02916725914172853, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.030992302201733567, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.032337355405455945, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.031049598776514212, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.007178591163401846, degree=3, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 2/3] END alpha=0.14988819153879007, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.03231637325495024, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.048736544197006446, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.04136183952116638, degree=2, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.04333635167646615, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.007716696681914972, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0002654898401586585, degree=2, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.03014691603446527, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.03487998054981941, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02851094851437495, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02859678040154496, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.029719215772586568, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.0003649012066045632, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.009629300249595832, degree=6, kernel=rbf;, score=-2.236 total time=   0.1s
[CV 2/3] END alpha=0.0463682585365823, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.048736544197006446, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.04304127362583637, degree=5, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.0684078334307789, degree=3, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 3/3] END alpha=0.007716696681914972, degree=2, kernel=rbf;, score=-2.136 total time=   1.0s
[CV 1/3] END alpha=0.004275367686040551, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.002225320718302834, degree=2, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 1/3] END alpha=0.011379558931396944, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03016664480919406, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02912840922380106, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02974233546558177, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.0003649012066045632, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.14988819153879007, degree=2, kernel=rbf;, score=-2.250 total time=   0.1s
[CV 1/3] END alpha=0.03231637325495024, degree=5, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.03941040136568867, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.04136183952116638, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04256080162881381, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.0012861956822366346, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0002654898401586585, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.002225320718302834, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03487998054981941, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 1/3] END alpha=0.03016664480919406, degree=3, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02859678040154496, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.029719215772586568, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=3.040045559619459, degree=5, kernel=rbf;, score=-2.642 total time=   0.1s
[CV 1/3] END alpha=0.0006530659950972073, degree=2, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.06103058990395171, degree=2, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03941040136568867, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03898221301829996, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.04256080162881381, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.0012861956822366346, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.06621472597397715, degree=2, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 1/3] END alpha=0.03014691603446527, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03206016341414694, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.02851094851437495, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02859678040154496, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.031049598776514212, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 3/3] END alpha=3.040045559619459, degree=5, kernel=rbf;, score=-2.603 total time=   0.1s
[CV 2/3] END alpha=0.0006530659950972073, degree=2, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.06103058990395171, degree=2, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.045561115003225794, degree=4, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.03898221301829996, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.04256080162881381, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.054733562509522035, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.06621472597397715, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.03014691603446527, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.03487998054981941, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.03016664480919406, degree=3, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.02912840922380106, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.029719215772586568, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.40725481483569054, degree=3, kernel=rbf;, score=-2.324 total time=   0.1s
[CV 3/3] END alpha=0.009629300249595832, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03231637325495024, degree=5, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 1/3] END alpha=0.048736544197006446, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.04304127362583637, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04333635167646615, degree=5, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.007716696681914972, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.004275367686040551, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.09780073267009845, degree=2, kernel=rbf;, score=-2.140 total time=   1.0s
[CV 3/3] END alpha=0.011379558931396944, degree=3, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 2/3] END alpha=0.03357180495979908, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.03533377074660501, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02974233546558177, degree=3, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.007178591163401846, degree=3, kernel=rbf;, score=-2.236 total time=   0.1s
[CV 1/3] END alpha=0.14988819153879007, degree=2, kernel=rbf;, score=-2.268 total time=   0.1s
[CV 3/3] END alpha=0.06103058990395171, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.03941040136568867, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.04136183952116638, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.04333635167646615, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0012861956822366346, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.0002654898401586585, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.002225320718302834, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.011379558931396944, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.03357180495979908, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.02912840922380106, degree=5, kernel=rbf;, score=-2.132 total time=   1.1s
[CV 2/3] END alpha=0.02974233546558177, degree=3, kernel=rbf;, score=-2.202 total time=   1.1s
[CV 2/3] END alpha=0.0003649012066045632, degree=3, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.009629300249595832, degree=6, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 1/3] END alpha=0.0463682585365823, degree=2, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.044882003180014986, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04304127362583637, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.0684078334307789, degree=3, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 1/3] END alpha=4.26290946743954, degree=5, kernel=rbf;, score=-2.541 total time=   1.0s
[CV 3/3] END alpha=0.004275367686040551, degree=2, kernel=rbf;, score=-2.137 total time=   1.0s
[CV 2/3] END alpha=0.09780073267009845, degree=2, kernel=rbf;, score=-2.206 total time=   1.0s
[CV 2/3] END alpha=0.034515318365865764, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.01056853557987792, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.03533377074660501, degree=5, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.028934660258511016, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 2/3] END alpha=0.40725481483569054, degree=3, kernel=rbf;, score=-2.298 total time=   0.1s
[CV 2/3] END alpha=0.0436129767175851, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 3/3] END alpha=0.0463682585365823, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.044882003180014986, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.05815900909778447, degree=6, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.0684078334307789, degree=3, kernel=rbf;, score=-2.243 total time=   0.1s
[CV 2/3] END alpha=4.26290946743954, degree=5, kernel=rbf;, score=-2.600 total time=   1.0s
[CV 1/3] END alpha=0.013959624833601851, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.09780073267009845, degree=2, kernel=rbf;, score=-2.136 total time=   1.0s
[CV 1/3] END alpha=0.034515318365865764, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.03357180495979908, degree=2, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.03533377074660501, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.028934660258511016, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.40725481483569054, degree=3, kernel=rbf;, score=-2.300 total time=   0.1s
[CV 1/3] END alpha=0.0436129767175851, degree=6, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.2534870977058937, degree=6, kernel=rbf;, score=-2.289 total time=   0.1s
[CV 3/3] END alpha=0.044882003180014986, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.05815900909778447, degree=6, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=0.03613312025503306, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=4.26290946743954, degree=5, kernel=rbf;, score=-2.573 total time=   1.0s
[CV 2/3] END alpha=0.013959624833601851, degree=6, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=1.3163124348618505, degree=5, kernel=rbf;, score=-2.325 total time=   1.0s
[CV 3/3] END alpha=0.034515318365865764, degree=2, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 2/3] END alpha=0.01056853557987792, degree=6, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.023228769987726425, degree=2, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.028934660258511016, degree=6, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 1/3] END alpha=0.8261150960305693, degree=3, kernel=rbf;, score=-2.408 total time=   0.1s
[CV 3/3] END alpha=0.046659706828195056, degree=2, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 3/3] END alpha=0.2534870977058937, degree=6, kernel=rbf;, score=-2.268 total time=   0.1s
[CV 1/3] END alpha=0.03898517085684088, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.05815900909778447, degree=6, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=0.03613312025503306, degree=5, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.0024809717396941273, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.013959624833601851, degree=6, kernel=rbf;, score=-2.134 total time=   1.0s
[CV 2/3] END alpha=1.3163124348618505, degree=5, kernel=rbf;, score=-2.384 total time=   1.0s
[CV 1/3] END alpha=0.030616489175527416, degree=4, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.01056853557987792, degree=6, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 2/3] END alpha=0.023228769987726425, degree=2, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.026826850801266792, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.8261150960305693, degree=3, kernel=rbf;, score=-2.376 total time=   0.1s
[CV 2/3] END alpha=0.00015063789509429246, degree=2, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=0.0004653649046161821, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.03898517085684088, degree=5, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=0.047764743060034635, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.03613312025503306, degree=5, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=0.0024809717396941273, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.030950185285136433, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=1.3163124348618505, degree=5, kernel=rbf;, score=-2.347 total time=   1.0s
[CV 2/3] END alpha=0.030616489175527416, degree=4, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.00044253666518847363, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.023228769987726425, degree=2, kernel=rbf;, score=-2.133 total time=   1.0s
[CV 2/3] END alpha=0.026826850801266792, degree=5, kernel=rbf;, score=-2.202 total time=   1.0s
[CV 1/3] END alpha=0.0009327380668740239, degree=5, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.00015063789509429246, degree=2, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 1/3] END alpha=0.06447400623350143, degree=4, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=0.041375898840041545, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.04146941173930668, degree=2, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.05070315769311382, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.010482370566112934, degree=3, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 2/3] END alpha=0.0012480900535076968, degree=2, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=0.034557407254334815, degree=6, kernel=rbf;, score=-2.131 total time=   1.0s
[CV 3/3] END alpha=0.030616489175527416, degree=4, kernel=rbf;, score=-2.132 total time=   1.0s
[CV 2/3] END alpha=0.00044253666518847363, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.02647758659418989, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.026826850801266792, degree=5, kernel=rbf;, score=-2.132 total time=   1.0s
