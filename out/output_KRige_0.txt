no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.07032077, 0.05359411, 0.06373994, 0.05932577, 0.05276895,
       0.05861719, 0.05881492, 0.05380591, 0.05326867, 0.05890552,
       0.05926696, 0.05869389, 0.05863396, 0.05883535, 0.05847923,
       0.05948631, 0.05952573, 0.06004413, 0.05933173, 0.05969429,
       0.0583659 , 0.05662354, 0.056825  , 0.07088653, 0.06403875,
       0.0561684 , 0.05592974, 0.05521735, 0.05829302, 0.05554716,
       0.05621258, 0.05498068, 0.05423268, 0.05501175, 0.05444781,
       0.05471436, 0.05495628, 0.05487839, 0.05642907, 0.05446657,
       0.05648605, 0.05656838, 0.05645204, 0.05644949, 0.05459134,
       0.05528482, 0.05417482, 0.06806215, 0.05426844, 0.0563794 ]), 'std_fit_time': array([1.43900750e-05, 4.07728952e-04, 1.82505784e-04, 3.46820962e-04,
       3.55580243e-04, 5.50983680e-05, 4.27853520e-04, 4.78900947e-04,
       4.49001500e-04, 7.93513728e-04, 2.44579995e-04, 1.23674223e-04,
       5.98806771e-05, 2.40577329e-04, 4.19916978e-04, 2.35878955e-04,
       9.64761892e-05, 1.96279977e-04, 2.13222676e-04, 2.97647494e-04,
       1.87239915e-03, 1.52811905e-03, 1.63526098e-03, 5.68241059e-03,
       4.40615381e-04, 5.20500370e-04, 1.00943820e-03, 2.33929034e-04,
       3.52202685e-03, 5.61245280e-04, 6.18277080e-04, 3.53035278e-04,
       5.34514261e-04, 6.08492824e-04, 4.75379198e-04, 2.51311002e-04,
       2.10709005e-04, 5.37558430e-04, 1.10919317e-03, 1.76676300e-04,
       9.46974232e-04, 1.33706663e-03, 9.44401262e-04, 1.15997625e-03,
       1.40740668e-04, 4.45026457e-04, 7.81249078e-04, 7.56696249e-03,
       3.97527089e-04, 1.24476944e-03]), 'mean_score_time': array([0.03332504, 0.0312535 , 0.03586459, 0.0360659 , 0.0311265 ,
       0.03582978, 0.03575047, 0.03111601, 0.03110536, 0.03584051,
       0.03574951, 0.03620474, 0.03585466, 0.03569921, 0.03570914,
       0.03592292, 0.03594128, 0.03612121, 0.03589463, 0.03590584,
       0.03641605, 0.03764216, 0.03768341, 0.03857907, 0.03898279,
       0.03672425, 0.03727508, 0.03652096, 0.03756515, 0.03674968,
       0.03621674, 0.03631282, 0.03659519, 0.036388  , 0.03601058,
       0.03651126, 0.03601273, 0.03619806, 0.03722262, 0.03589574,
       0.03674595, 0.03644872, 0.0372173 , 0.03766259, 0.03620108,
       0.03694336, 0.03602632, 0.03654631, 0.03594804, 0.03664788]), 'std_score_time': array([0.00035276, 0.00032576, 0.00038542, 0.00047315, 0.00038716,
       0.00037195, 0.00027036, 0.00036135, 0.00029531, 0.00042315,
       0.00031074, 0.00031977, 0.0004282 , 0.00031011, 0.00038721,
       0.00031323, 0.00029983, 0.00038161, 0.00039096, 0.00032302,
       0.00080341, 0.00044277, 0.00054788, 0.0008881 , 0.00166439,
       0.00031746, 0.0003722 , 0.00019773, 0.00159321, 0.0003928 ,
       0.00047031, 0.00022304, 0.00037932, 0.00040162, 0.00037578,
       0.00035626, 0.00033742, 0.00041258, 0.00081644, 0.0003657 ,
       0.00104827, 0.00021242, 0.00061569, 0.00078538, 0.00025615,
       0.00105266, 0.00032328, 0.00041091, 0.00017953, 0.00017531]), 'param_alpha': masked_array(data=[0.002540733607787936, 2.7015427005387327,
                   0.0017663623080867855, 0.16958770538892357,
                   0.2822774380278023, 0.00100519041797348,
                   1.816118122431664, 0.2349892417182016,
                   2.627732905636654, 3.2609224389234474e-05, 1e-06,
                   0.025070132589228217, 3.107625707221988e-06,
                   0.023146141731715503, 0.023510449092431777, 1e-06,
                   0.023382358216130085, 0.02299088440358254,
                   5.698795553940908e-06, 0.00010462293260349736,
                   0.024498720625448014, 0.008160709325160385,
                   9.607178474795655e-06, 0.02648018785628078,
                   0.029569515866517276, 0.027858810594703617,
                   0.0001932897959458766, 0.03149233519709067, 1e-06,
                   1e-06, 0.032156738443647644, 0.03396145603780889,
                   0.00035184564544989735, 4.8587571139881865e-06,
                   0.004746131765538551, 3.215884657256637e-05,
                   0.038413181022150786, 0.034799351296856296,
                   7.466299479804568e-05, 0.040338670093758064, 1e-06,
                   0.00472936278711452, 0.03903888013132466,
                   0.04109809226933026, 0.03993694902232399,
                   0.0425086571324473, 0.013835914432728927,
                   0.04113936316318821, 1e-06, 0.048240241225781355],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[6, 7, 4, 5, 8, 6, 7, 6, 5, 4, 3, 4, 8, 3, 8, 8, 3, 8,
                   3, 8, 3, 8, 8, 3, 8, 3, 3, 8, 3, 8, 3, 8, 8, 3, 3, 8,
                   3, 8, 3, 3, 3, 8, 8, 3, 8, 3, 3, 8, 8, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['linear', 'linear', 'rbf', 'rbf', 'linear', 'rbf',
                   'rbf', 'linear', 'linear', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.002540733607787936), ('degree', 6), ('kernel', 'linear')]), OrderedDict([('alpha', 2.7015427005387327), ('degree', 7), ('kernel', 'linear')]), OrderedDict([('alpha', 0.0017663623080867855), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.16958770538892357), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2822774380278023), ('degree', 8), ('kernel', 'linear')]), OrderedDict([('alpha', 0.00100519041797348), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.816118122431664), ('degree', 7), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.2349892417182016), ('degree', 6), ('kernel', 'linear')]), OrderedDict([('alpha', 2.627732905636654), ('degree', 5), ('kernel', 'linear')]), OrderedDict([('alpha', 3.2609224389234474e-05), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.025070132589228217), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.107625707221988e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023146141731715503), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023510449092431777), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.023382358216130085), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02299088440358254), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.698795553940908e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010462293260349736), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.024498720625448014), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.008160709325160385), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.607178474795655e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02648018785628078), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.029569515866517276), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.027858810594703617), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001932897959458766), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03149233519709067), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.032156738443647644), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03396145603780889), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00035184564544989735), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 4.8587571139881865e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.004746131765538551), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.215884657256637e-05), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.038413181022150786), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.034799351296856296), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 7.466299479804568e-05), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.040338670093758064), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00472936278711452), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03903888013132466), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04109809226933026), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03993694902232399), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0425086571324473), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.013835914432728927), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04113936316318821), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.048240241225781355), ('degree', 3), ('kernel', 'rbf')])], 'split0_test_score': array([-33.81376303, -32.11933988,  -2.25754493,  -2.27185654,
       -33.61700404,  -2.25785019,  -2.53635239, -33.64991236,
       -32.16045383,  -2.25824541,  -2.25825836,  -2.25255263,
        -2.25825749,  -2.25261724,  -2.25260444,  -2.25825836,
        -2.25260891,  -2.25262278,  -2.25825643,  -2.25821595,
        -2.25257105,  -2.25531392,  -2.25825483,  -2.25251466,
        -2.25245662,  -2.25248669,  -2.25817972,  -2.25242878,
        -2.25825836,  -2.25825836,  -2.25242059,  -2.25242327,
        -2.25811504,  -2.25825678,  -2.25641367,  -2.2582456 ,
        -2.25260088,  -2.25244783,  -2.2582282 ,  -2.252688  ,
        -2.25825836,  -2.25641922,  -2.25262879,  -2.25272334,
        -2.25266953,  -2.25279042,  -2.25392676,  -2.25272528,
        -2.25825836,  -2.25308124]), 'split1_test_score': array([-33.00879233, -31.44349693,  -2.23785475,  -2.24845484,
       -32.82820407,  -2.23813252,  -2.50975365, -32.85841563,
       -31.48143204,  -2.23849337,  -2.23850521,  -2.23319973,
        -2.23850442,  -2.23328219,  -2.23326571,  -2.23850521,
        -2.23327147,  -2.23328931,  -2.23850345,  -2.23846642,
        -2.23322243,  -2.23589043,  -2.23850198,  -2.23319352,
        -2.23320093,  -2.23319075,  -2.23843329,  -2.23322875,
        -2.23850521,  -2.23850521,  -2.23323962,  -2.23327229,
        -2.23837419,  -2.23850376,  -2.23685931,  -2.23849354,
        -2.23337158,  -2.23328898,  -2.23847763,  -2.23342228,
        -2.23850521,  -2.2368645 ,  -2.23338756,  -2.2334435 ,
        -2.23341134,  -2.23348468,  -2.23458101,  -2.23344467,
        -2.23850521,  -2.23368018]), 'split2_test_score': array([-33.51336775, -32.76997225,  -2.25622947,  -2.25295453,
       -33.43103482,  -2.25653979,  -2.49851854, -33.44487636,
       -32.78874794,  -2.2569419 ,  -2.25695508,  -2.24828082,
        -2.2569542 ,  -2.24884032,  -2.24873324,  -2.25695508,
        -2.24877082,  -2.24888612,  -2.25695312,  -2.25691191,
        -2.24844544,  -2.25376548,  -2.25695149,  -2.24789897,
        -2.24710626,  -2.24754098,  -2.25687503,  -2.24662982,
        -2.25695508,  -2.25695508,  -2.24646811,  -2.24603621,
        -2.25680921,  -2.25695347,  -2.25505041,  -2.25694209,
        -2.2451353 ,  -2.24583927,  -2.25692438,  -2.24481482,
        -2.25695508,  -2.2550569 ,  -2.24503016,  -2.2446909 ,
        -2.24488094,  -2.24454593,  -2.25177241,  -2.2446852 ,
        -2.25695508,  -2.24418088]), 'mean_test_score': array([-33.4453077 , -32.11093635,  -2.25054305,  -2.2577553 ,
       -33.29208098,  -2.25084083,  -2.51487486, -33.31773479,
       -32.14354461,  -2.25122689,  -2.25123955,  -2.24467773,
        -2.2512387 ,  -2.24491325,  -2.24486779,  -2.25123955,
        -2.24488373,  -2.24493273,  -2.25123767,  -2.25119809,
        -2.24474631,  -2.24832327,  -2.2512361 ,  -2.24453572,
        -2.24425461,  -2.24440614,  -2.25116268,  -2.24409578,
        -2.25123955,  -2.25123955,  -2.24404277,  -2.24391059,
        -2.25109948,  -2.251238  ,  -2.24944113,  -2.25122708,
        -2.24370259,  -2.24385869,  -2.25121007,  -2.2436417 ,
        -2.25123955,  -2.24944687,  -2.24368217,  -2.24361925,
        -2.24365393,  -2.24360701,  -2.24676006,  -2.24361838,
        -2.25123955,  -2.24364743]), 'std_test_score': array([0.33213309, 0.54156388, 0.00898804, 0.01013889, 0.33668232,
       0.00900204, 0.01586443, 0.33540076, 0.5338434 , 0.00901968,
       0.00902024, 0.00830142, 0.00902021, 0.00836769, 0.00835475,
       0.00902024, 0.00835928, 0.00837328, 0.00902016, 0.00901838,
       0.00832086, 0.00881405, 0.00902009, 0.00823854, 0.0081156 ,
       0.00818347, 0.00901678, 0.00804058, 0.00902024, 0.00902024,
       0.0080162 , 0.00796152, 0.00901392, 0.00902017, 0.00891408,
       0.00901968, 0.00791543, 0.00794596, 0.00901892, 0.00790882,
       0.00902024, 0.00891445, 0.00791282, 0.00790736, 0.00790985,
       0.00790945, 0.00865668, 0.00790734, 0.00902024, 0.00792943]), 'rank_test_score': array([50, 46, 26, 44, 48, 27, 45, 49, 47, 32, 38, 16, 37, 20, 18, 38, 19,
       21, 35, 30, 17, 23, 34, 15, 13, 14, 29, 12, 38, 38, 11, 10, 28, 36,
       24, 33,  8,  9, 31,  4, 38, 25,  7,  3,  6,  1, 22,  2, 38,  5],
      dtype=int32)}
-2.2436070096125804
OrderedDict([('alpha', 0.0425086571324473), ('degree', 3), ('kernel', 'rbf')])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.52244608, 0.51194922, 0.51522978, 0.51079305, 0.53781827,
       0.50968981, 0.5115153 , 0.51763487, 0.54992493, 0.57365402,
       0.59334373, 0.58730372, 0.58008011, 0.57173165, 0.58938289,
       0.54269028, 0.54622157, 0.54609338, 0.56946921, 0.55577024,
       0.56913646, 0.58464416, 0.54490026, 0.55285056, 0.55824693,
       0.54314653, 0.56671246, 0.54849497, 0.55307158, 0.55954107,
       0.5510389 , 0.55066268, 0.56013656, 0.56371268, 0.55768633,
       0.5950102 , 0.5474956 , 0.54699667, 0.5373288 , 0.54926014,
       0.54979642, 0.55888987, 0.57029247, 0.54423634, 0.53938866,
       0.56520931, 0.53971275, 0.55209215, 0.55321089, 0.55733323]), 'std_fit_time': array([0.00551295, 0.00761571, 0.0046399 , 0.00369153, 0.00481307,
       0.00427187, 0.00687266, 0.00238825, 0.00319458, 0.03105333,
       0.01762291, 0.0283514 , 0.02390775, 0.00966601, 0.00631245,
       0.00679045, 0.00437142, 0.00136579, 0.01958306, 0.00277308,
       0.0018871 , 0.02929057, 0.00099157, 0.00318139, 0.00289136,
       0.00159783, 0.00178913, 0.00237888, 0.00028792, 0.0050392 ,
       0.00658682, 0.0085107 , 0.00744601, 0.01291811, 0.00849302,
       0.02085189, 0.00275821, 0.00279022, 0.00212642, 0.01364696,
       0.00366013, 0.01862173, 0.00253157, 0.0020308 , 0.0022231 ,
       0.00391521, 0.00616801, 0.00210312, 0.01235444, 0.01688124]), 'mean_score_time': array([0.40206695, 0.4009258 , 0.40075302, 0.40148179, 0.43758782,
       0.40033205, 0.40009626, 0.40166235, 0.44035713, 0.45107325,
       0.45230222, 0.45143477, 0.45245512, 0.43929354, 0.44984063,
       0.43876036, 0.44203965, 0.44163315, 0.45045551, 0.44012181,
       0.44018888, 0.43920263, 0.43827788, 0.44386752, 0.43978349,
       0.43912967, 0.44086909, 0.44069767, 0.44354542, 0.43994363,
       0.43855564, 0.44074106, 0.44408409, 0.4418838 , 0.44118222,
       0.46539919, 0.44013604, 0.43916472, 0.44079924, 0.4658614 ,
       0.44051719, 0.44851343, 0.45811772, 0.43872849, 0.43940139,
       0.45452658, 0.43840194, 0.44059531, 0.4489247 , 0.45000291]), 'std_score_time': array([0.00571556, 0.00450455, 0.00461222, 0.00483618, 0.00497967,
       0.00485664, 0.00513649, 0.00465818, 0.00522329, 0.0203261 ,
       0.01388383, 0.01354026, 0.01665823, 0.00462666, 0.01419436,
       0.00574314, 0.00439363, 0.00424581, 0.01660528, 0.00506742,
       0.00489003, 0.00568981, 0.00483601, 0.00698286, 0.00511817,
       0.00616351, 0.00714658, 0.00574897, 0.00450069, 0.00491253,
       0.00440492, 0.00510554, 0.00307853, 0.00400437, 0.00502193,
       0.03484152, 0.00597648, 0.00459703, 0.00525652, 0.03954612,
       0.00473905, 0.01731669, 0.02219424, 0.00498283, 0.00479611,
       0.02421423, 0.00447151, 0.00377825, 0.01594264, 0.0168901 ]), 'param_alpha': masked_array(data=[0.001045359983151221, 0.0033249560794634168,
                   1.471601269406728e-05, 0.003387490387185676,
                   0.010281458380274498, 0.07979947852912499,
                   0.0005240676264319112, 0.01123168547060613,
                   2.4297024876758366e-06, 0.00027415563572627506, 10.0,
                   2.8408228117109562e-05, 1e-06, 1e-06, 1e-06,
                   0.00010358751689452326, 1e-06, 10.0,
                   4.1938886791065e-05, 5.246095891720587e-05,
                   5.953592284707151e-05, 7.89877715311459e-05,
                   9.928470065986359e-05, 0.00012053861003699187, 1e-06,
                   0.0001294131208386889, 0.00018239791648812839,
                   0.00020498365444948297, 0.00016595360540435088, 1e-06,
                   0.0002845130217334081, 0.00021731006028417765,
                   0.00032368073958736473, 0.0011086376641071883,
                   0.0002385097944869585, 0.00039901863868572015, 1e-06,
                   0.00043936639559886124, 0.00029033261704541376,
                   0.0004716676201218776, 0.00031691208900678537, 1e-06,
                   0.0005287678405868904, 1e-06, 0.0005626260621618308,
                   9.964012838326319e-06, 0.00042910449231187375, 1e-06,
                   0.0005857842128028666, 1e-06],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[5, 7, 4, 5, 4, 6, 6, 7, 4, 6, 8, 5, 3, 3, 4, 3, 5, 4,
                   3, 8, 3, 3, 3, 3, 8, 8, 3, 3, 8, 8, 3, 8, 3, 8, 8, 3,
                   8, 3, 8, 3, 8, 8, 3, 3, 3, 8, 8, 8, 3, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['linear', 'linear', 'linear', 'linear', 'rbf',
                   'linear', 'linear', 'linear', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.001045359983151221), ('degree', 5), ('kernel', 'linear')]), OrderedDict([('alpha', 0.0033249560794634168), ('degree', 7), ('kernel', 'linear')]), OrderedDict([('alpha', 1.471601269406728e-05), ('degree', 4), ('kernel', 'linear')]), OrderedDict([('alpha', 0.003387490387185676), ('degree', 5), ('kernel', 'linear')]), OrderedDict([('alpha', 0.010281458380274498), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07979947852912499), ('degree', 6), ('kernel', 'linear')]), OrderedDict([('alpha', 0.0005240676264319112), ('degree', 6), ('kernel', 'linear')]), OrderedDict([('alpha', 0.01123168547060613), ('degree', 7), ('kernel', 'linear')]), OrderedDict([('alpha', 2.4297024876758366e-06), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00027415563572627506), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 10.0), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.8408228117109562e-05), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010358751689452326), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 10.0), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 4.1938886791065e-05), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.246095891720587e-05), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.953592284707151e-05), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 7.89877715311459e-05), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.928470065986359e-05), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00012053861003699187), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001294131208386889), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00018239791648812839), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00020498365444948297), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00016595360540435088), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0002845130217334081), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00021731006028417765), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00032368073958736473), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0011086376641071883), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0002385097944869585), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00039901863868572015), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00043936639559886124), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00029033261704541376), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0004716676201218776), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00031691208900678537), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005287678405868904), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005626260621618308), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.964012838326319e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00042910449231187375), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 8), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005857842128028666), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1e-06), ('degree', 3), ('kernel', 'rbf')])], 'split0_test_score': array([-31.12135405, -31.1213255 , -31.12136696, -31.12132472,
        -2.12959542, -31.1203678 , -31.12136058, -31.12122648,
        -2.13003719,  -2.13000064,  -2.74935364,  -2.13003368,
        -2.13003738,  -2.13003738,  -2.13003738,  -2.13002356,
        -2.13003738,  -2.74935364,  -2.13003186,  -2.13003044,
        -2.13002949,  -2.13002687,  -2.13002414,  -2.13002128,
        -2.13003738,  -2.13002008,  -2.13001296,  -2.13000992,
        -2.13001517,  -2.13003738,  -2.12999925,  -2.13000827,
        -2.129994  ,  -2.12988954,  -2.13000542,  -2.1299839 ,
        -2.13003738,  -2.12997851,  -2.12999847,  -2.12997419,
        -2.1299949 ,  -2.13003738,  -2.12996656,  -2.13003738,
        -2.12996204,  -2.13003617,  -2.12997988,  -2.13003738,
        -2.12995895,  -2.13003738]), 'split1_test_score': array([-31.05759961, -31.05757484, -31.05761082, -31.05757416,
        -2.20256857, -31.05674371, -31.05760528, -31.0574889 ,
        -2.20337861,  -2.20334606,  -2.837752  ,  -2.20337549,
        -2.20337878,  -2.20337878,  -2.20337878,  -2.20336647,
        -2.20337878,  -2.837752  ,  -2.20337386,  -2.2033726 ,
        -2.20337175,  -2.20336942,  -2.20336698,  -2.20336444,
        -2.20337878,  -2.20336337,  -2.20335703,  -2.20335433,
        -2.203359  ,  -2.20337878,  -2.20334482,  -2.20335285,
        -2.20334014,  -2.20324716,  -2.20335032,  -2.20333116,
        -2.20337878,  -2.20332635,  -2.20334413,  -2.20332251,
        -2.20334095,  -2.20337878,  -2.20331571,  -2.20337878,
        -2.20331169,  -2.2033777 ,  -2.20332757,  -2.20337878,
        -2.20330894,  -2.20337878]), 'split2_test_score': array([-31.27710858, -31.27709697, -31.27711384, -31.27709665,
        -2.13498384, -31.27670734, -31.27711124, -31.27705668,
        -2.13811344,  -2.13801885,  -2.78734935,  -2.13810437,
        -2.13811394,  -2.13811394,  -2.13811394,  -2.13807817,
        -2.13811394,  -2.78734935,  -2.13809965,  -2.13809598,
        -2.13809352,  -2.13808674,  -2.13807966,  -2.13807226,
        -2.13811394,  -2.13806917,  -2.13805073,  -2.13804288,
        -2.13805645,  -2.13811394,  -2.13801526,  -2.1380386 ,
        -2.13800167,  -2.13773163,  -2.13803123,  -2.13797556,
        -2.13811394,  -2.1379616 ,  -2.13801324,  -2.13795043,
        -2.13800402,  -2.13811394,  -2.1379307 ,  -2.13811394,
        -2.13791901,  -2.13811081,  -2.13796515,  -2.13811394,
        -2.13791102,  -2.13811394]), 'mean_test_score': array([-31.15202075, -31.1519991 , -31.15203054, -31.15199851,
        -2.15571594, -31.15127295, -31.1520257 , -31.15192402,
        -2.15717641,  -2.15712185,  -2.791485  ,  -2.15717118,
        -2.1571767 ,  -2.1571767 ,  -2.1571767 ,  -2.15715606,
        -2.1571767 ,  -2.791485  ,  -2.15716846,  -2.15716634,
        -2.15716492,  -2.15716101,  -2.15715693,  -2.15715266,
        -2.1571767 ,  -2.15715088,  -2.15714024,  -2.15713571,
        -2.15714354,  -2.1571767 ,  -2.15711978,  -2.15713324,
        -2.15711194,  -2.15695611,  -2.15712899,  -2.15709688,
        -2.1571767 ,  -2.15708882,  -2.15711861,  -2.15708237,
        -2.15711329,  -2.1571767 ,  -2.15707099,  -2.1571767 ,
        -2.15706425,  -2.15717489,  -2.15709087,  -2.1571767 ,
        -2.15705964,  -2.1571767 ]), 'std_test_score': array([0.09220044, 0.09220681, 0.09219756, 0.09220699, 0.03320277,
       0.09242058, 0.09219898, 0.09222891, 0.03283584, 0.03284896,
       0.03620677, 0.0328371 , 0.03283577, 0.03283577, 0.03283577,
       0.03284073, 0.03283577, 0.03620677, 0.03283775, 0.03283826,
       0.0328386 , 0.03283954, 0.03284052, 0.03284155, 0.03283577,
       0.03284198, 0.03284453, 0.03284562, 0.03284374, 0.03283577,
       0.03284946, 0.03284622, 0.03285134, 0.03288891, 0.03284724,
       0.03285497, 0.03283577, 0.03285691, 0.03284974, 0.03285846,
       0.03285102, 0.03283577, 0.0328612 , 0.03283577, 0.03286283,
       0.0328362 , 0.03285641, 0.03283577, 0.03286394, 0.03283577]), 'rank_test_score': array([48, 47, 50, 46,  1, 44, 49, 45, 30, 14, 42, 28, 31, 31, 31, 22, 31,
       42, 27, 26, 25, 24, 23, 21, 31, 20, 18, 17, 19, 31, 13, 16, 10,  2,
       15,  9, 31,  7, 12,  6, 11, 31,  5, 31,  4, 29,  8, 31,  3, 31],
      dtype=int32)}
-2.155715943542578
OrderedDict([('alpha', 0.010281458380274498), ('degree', 4), ('kernel', 'rbf')])
[CV 1/3] END alpha=0.02299088440358254, degree=8, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=7.466299479804568e-05, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=2.4297024876758366e-06, degree=4, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=0.02299088440358254, degree=8, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 2/3] END alpha=7.466299479804568e-05, degree=3, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.00027415563572627506, degree=6, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=5.698795553940908e-06, degree=3, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=0.040338670093758064, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.00027415563572627506, degree=6, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.0002845130217334081, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.00010462293260349736, degree=8, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END .alpha=10.0, degree=8, kernel=rbf;, score=-2.787 total time=   1.0s
[CV 3/3] END alpha=0.0002845130217334081, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=5.698795553940908e-06, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=7.466299479804568e-05, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.00027415563572627506, degree=6, kernel=rbf;, score=-2.203 total time=   1.1s
[CV 2/3] END alpha=0.0002845130217334081, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=5.698795553940908e-06, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.040338670093758064, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END .alpha=10.0, degree=8, kernel=rbf;, score=-2.749 total time=   1.1s
[CV 2/3] END alpha=0.00021731006028417765, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00010462293260349736, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.040338670093758064, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END .alpha=10.0, degree=8, kernel=rbf;, score=-2.838 total time=   1.0s
[CV 1/3] END alpha=0.00021731006028417765, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.024498720625448014, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.00472936278711452, degree=8, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 3/3] END alpha=2.8408228117109562e-05, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.00021731006028417765, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.00010462293260349736, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=2.8408228117109562e-05, degree=5, kernel=rbf;, score=-2.130 total time=   1.1s
[CV 2/3] END alpha=0.00032368073958736473, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.002540733607787936, degree=6, kernel=linear;, score=-33.009 total time=   0.1s
[CV 3/3] END alpha=0.024498720625448014, degree=3, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=2.8408228117109562e-05, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00032368073958736473, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.024498720625448014, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.00472936278711452, degree=8, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00032368073958736473, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.002540733607787936, degree=6, kernel=linear;, score=-33.814 total time=   0.1s
[CV 1/3] END alpha=0.008160709325160385, degree=8, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 3/3] END alpha=0.00472936278711452, degree=8, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0011086376641071883, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.002540733607787936, degree=6, kernel=linear;, score=-33.513 total time=   0.1s
[CV 2/3] END alpha=0.008160709325160385, degree=8, kernel=rbf;, score=-2.236 total time=   0.1s
[CV 2/3] END alpha=0.03903888013132466, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0011086376641071883, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=2.7015427005387327, degree=7, kernel=linear;, score=-32.119 total time=   0.1s
[CV 3/3] END alpha=0.008160709325160385, degree=8, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 1/3] END alpha=0.03903888013132466, degree=8, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 2/3] END alpha=0.0011086376641071883, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.0017663623080867855, degree=4, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.02648018785628078, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.04109809226933026, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.0002385097944869585, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.0017663623080867855, degree=4, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=9.607178474795655e-06, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=0.03903888013132466, degree=8, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.0002385097944869585, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=2.7015427005387327, degree=7, kernel=linear;, score=-32.770 total time=   0.1s
[CV 1/3] END alpha=9.607178474795655e-06, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 1/3] END alpha=0.04109809226933026, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0002385097944869585, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.0017663623080867855, degree=4, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 2/3] END alpha=0.02648018785628078, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.03993694902232399, degree=8, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=4, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 2/3] END alpha=0.00039901863868572015, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.16958770538892357, degree=5, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.029569515866517276, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.03993694902232399, degree=8, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.00010358751689452326, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=2.7015427005387327, degree=7, kernel=linear;, score=-31.443 total time=   0.1s
[CV 2/3] END alpha=9.607178474795655e-06, degree=8, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 2/3] END alpha=0.04109809226933026, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=4, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00039901863868572015, degree=3, kernel=rbf;, score=-2.130 total time=   1.1s
[CV 2/3] END alpha=0.2822774380278023, degree=8, kernel=linear;, score=-32.828 total time=   0.1s
[CV 1/3] END alpha=0.027858810594703617, degree=3, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.0425086571324473, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=5, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.16958770538892357, degree=5, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.02648018785628078, degree=3, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.03993694902232399, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.00010358751689452326, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00039901863868572015, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 1/3] END alpha=0.16958770538892357, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.029569515866517276, degree=8, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 1/3] END alpha=0.0425086571324473, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.00010358751689452326, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.2822774380278023, degree=8, kernel=linear;, score=-33.617 total time=   0.1s
[CV 3/3] END alpha=0.029569515866517276, degree=8, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 2/3] END alpha=0.0425086571324473, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=5, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00043936639559886124, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.2822774380278023, degree=8, kernel=linear;, score=-33.431 total time=   0.1s
[CV 2/3] END alpha=0.027858810594703617, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.013835914432728927, degree=3, kernel=rbf;, score=-2.254 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=5, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.00043936639559886124, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.00100519041797348, degree=6, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=0.027858810594703617, degree=3, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 2/3] END alpha=0.013835914432728927, degree=3, kernel=rbf;, score=-2.235 total time=   0.1s
[CV 1/3] END .alpha=10.0, degree=4, kernel=rbf;, score=-2.749 total time=   1.0s
[CV 3/3] END alpha=0.00043936639559886124, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.00100519041797348, degree=6, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 1/3] END alpha=0.0001932897959458766, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 1/3] END alpha=0.04113936316318821, degree=8, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END .alpha=10.0, degree=4, kernel=rbf;, score=-2.787 total time=   1.0s
[CV 1/3] END alpha=0.00029033261704541376, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00100519041797348, degree=6, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.0001932897959458766, degree=3, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=0.013835914432728927, degree=3, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 2/3] END .alpha=10.0, degree=4, kernel=rbf;, score=-2.838 total time=   1.0s
[CV 2/3] END alpha=0.00029033261704541376, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=1.816118122431664, degree=7, kernel=rbf;, score=-2.499 total time=   0.1s
[CV 3/3] END alpha=0.0001932897959458766, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.04113936316318821, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=4.1938886791065e-05, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.0004716676201218776, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=1.816118122431664, degree=7, kernel=rbf;, score=-2.536 total time=   0.1s
[CV 1/3] END alpha=0.03149233519709067, degree=8, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.04113936316318821, degree=8, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=4.1938886791065e-05, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=0.00029033261704541376, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.2349892417182016, degree=6, kernel=linear;, score=-33.650 total time=   0.1s
[CV 3/3] END alpha=0.03149233519709067, degree=8, kernel=rbf;, score=-2.247 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=5.246095891720587e-05, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0004716676201218776, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 3/3] END alpha=0.2349892417182016, degree=6, kernel=linear;, score=-33.445 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=5.246095891720587e-05, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00031691208900678537, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=2.627732905636654, degree=5, kernel=linear;, score=-32.160 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 1/3] END alpha=0.048240241225781355, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=5.246095891720587e-05, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.00031691208900678537, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=1.816118122431664, degree=7, kernel=rbf;, score=-2.510 total time=   0.1s
[CV 2/3] END alpha=0.03149233519709067, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=4.1938886791065e-05, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 2/3] END alpha=0.0004716676201218776, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=2.627732905636654, degree=5, kernel=linear;, score=-32.789 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.048240241225781355, degree=3, kernel=rbf;, score=-2.244 total time=   0.1s
[CV 2/3] END alpha=5.953592284707151e-05, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=3.2609224389234474e-05, degree=4, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 1/3] END alpha=0.001045359983151221, degree=5, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=5.953592284707151e-05, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.2349892417182016, degree=6, kernel=linear;, score=-32.858 total time=   0.1s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.048240241225781355, degree=3, kernel=rbf;, score=-2.234 total time=   0.1s
[CV 1/3] END alpha=5.953592284707151e-05, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00031691208900678537, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=3.2609224389234474e-05, degree=4, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 2/3] END alpha=0.032156738443647644, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.0033249560794634168, degree=7, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=7.89877715311459e-05, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.0005287678405868904, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=2.627732905636654, degree=5, kernel=linear;, score=-31.481 total time=   0.1s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 2/3] END alpha=0.001045359983151221, degree=5, kernel=linear;, score=-31.058 total time=   0.9s
[CV 1/3] END alpha=7.89877715311459e-05, degree=3, kernel=rbf;, score=-2.130 total time=   1.1s
[CV 2/3] END alpha=0.0005287678405868904, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.032156738443647644, degree=3, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=0.0033249560794634168, degree=7, kernel=linear;, score=-31.058 total time=   0.9s
[CV 1/3] END alpha=9.928470065986359e-05, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0005287678405868904, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=0.03396145603780889, degree=8, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.0033249560794634168, degree=7, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=9.928470065986359e-05, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=3.2609224389234474e-05, degree=4, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 1/3] END alpha=0.032156738443647644, degree=3, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.001045359983151221, degree=5, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=7.89877715311459e-05, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.03396145603780889, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=1.471601269406728e-05, degree=4, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=9.928470065986359e-05, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=3.107625707221988e-06, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.00035184564544989735, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.003387490387185676, degree=5, kernel=linear;, score=-31.058 total time=   0.9s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0005626260621618308, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=0.025070132589228217, degree=4, kernel=rbf;, score=-2.248 total time=   0.1s
[CV 3/3] END alpha=0.03396145603780889, degree=8, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=1.471601269406728e-05, degree=4, kernel=linear;, score=-31.058 total time=   0.9s
[CV 1/3] END alpha=0.00012053861003699187, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.025070132589228217, degree=4, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.00035184564544989735, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=1.471601269406728e-05, degree=4, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=0.00012053861003699187, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0005626260621618308, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 1/3] END alpha=0.025070132589228217, degree=4, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.00035184564544989735, degree=8, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.003387490387185676, degree=5, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=0.00012053861003699187, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.0005626260621618308, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=3.107625707221988e-06, degree=8, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=4.8587571139881865e-06, degree=3, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.003387490387185676, degree=5, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=9.964012838326319e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.023146141731715503, degree=3, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 3/3] END alpha=4.8587571139881865e-06, degree=3, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.010281458380274498, degree=4, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0001294131208386889, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=9.964012838326319e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.1s
[CV 1/3] END alpha=0.023146141731715503, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=0.004746131765538551, degree=3, kernel=rbf;, score=-2.256 total time=   0.1s
[CV 3/3] END alpha=0.010281458380274498, degree=4, kernel=rbf;, score=-2.135 total time=   1.0s
[CV 2/3] END alpha=0.0001294131208386889, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.00042910449231187375, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.023146141731715503, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 2/3] END alpha=0.004746131765538551, degree=3, kernel=rbf;, score=-2.237 total time=   0.1s
[CV 1/3] END alpha=0.07979947852912499, degree=6, kernel=linear;, score=-31.120 total time=   0.9s
[CV 3/3] END alpha=0.0001294131208386889, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.00042910449231187375, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.023510449092431777, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.004746131765538551, degree=3, kernel=rbf;, score=-2.255 total time=   0.1s
[CV 2/3] END alpha=0.07979947852912499, degree=6, kernel=linear;, score=-31.057 total time=   0.9s
[CV 1/3] END alpha=0.00018239791648812839, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00042910449231187375, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=0.023510449092431777, degree=8, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 1/3] END alpha=3.215884657256637e-05, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 3/3] END alpha=0.07979947852912499, degree=6, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=0.00018239791648812839, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 3/3] END alpha=3.215884657256637e-05, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=0.0005240676264319112, degree=6, kernel=linear;, score=-31.058 total time=   0.9s
[CV 1/3] END alpha=0.00020498365444948297, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 3/3] END alpha=3.107625707221988e-06, degree=8, kernel=rbf;, score=-2.257 total time=   0.1s
[CV 2/3] END alpha=4.8587571139881865e-06, degree=3, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 1/3] END alpha=0.010281458380274498, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=9.964012838326319e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 3/3] END alpha=0.023510449092431777, degree=8, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 2/3] END alpha=3.215884657256637e-05, degree=8, kernel=rbf;, score=-2.238 total time=   0.1s
[CV 1/3] END alpha=0.0005240676264319112, degree=6, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=0.00018239791648812839, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.258 total time=   0.1s
[CV 1/3] END alpha=0.038413181022150786, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 3/3] END alpha=0.0005240676264319112, degree=6, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=0.00020498365444948297, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.0005857842128028666, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 2/3] END alpha=0.023382358216130085, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.038413181022150786, degree=3, kernel=rbf;, score=-2.245 total time=   0.1s
[CV 2/3] END alpha=0.01123168547060613, degree=7, kernel=linear;, score=-31.057 total time=   0.9s
[CV 1/3] END alpha=0.00016595360540435088, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.0005857842128028666, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.239 total time=   0.1s
[CV 2/3] END alpha=0.038413181022150786, degree=3, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=0.01123168547060613, degree=7, kernel=linear;, score=-31.121 total time=   0.9s
[CV 3/3] END alpha=0.00020498365444948297, degree=3, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 2/3] END alpha=0.0005857842128028666, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=0.023382358216130085, degree=3, kernel=rbf;, score=-2.253 total time=   0.1s
[CV 2/3] END alpha=0.034799351296856296, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 1/3] END alpha=2.4297024876758366e-06, degree=4, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.00016595360540435088, degree=8, kernel=rbf;, score=-2.138 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=0.023382358216130085, degree=3, kernel=rbf;, score=-2.249 total time=   0.1s
[CV 1/3] END alpha=0.034799351296856296, degree=8, kernel=rbf;, score=-2.252 total time=   0.1s
[CV 3/3] END alpha=0.01123168547060613, degree=7, kernel=linear;, score=-31.277 total time=   0.9s
[CV 2/3] END alpha=0.00016595360540435088, degree=8, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 2/3] END alpha=0.02299088440358254, degree=8, kernel=rbf;, score=-2.233 total time=   0.1s
[CV 3/3] END alpha=0.034799351296856296, degree=8, kernel=rbf;, score=-2.246 total time=   0.1s
[CV 2/3] END alpha=2.4297024876758366e-06, degree=4, kernel=rbf;, score=-2.203 total time=   1.0s
[CV 1/3] END alpha=1e-06, degree=8, kernel=rbf;, score=-2.130 total time=   1.0s
[CV 3/3] END alpha=1e-06, degree=3, kernel=rbf;, score=-2.138 total time=   1.1s
