no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
[1452, 875]
adam
0.07172746628360498
tanh
5.780420486607819e-05
[1274, 561]
adam
0.08057784742503397
tanh
8.299688870402494e-05
[1452, 875]
adam
0.07172746628360498
tanh
5.780420486607819e-05
[1274, 561]
adam
0.08057784742503397
tanh
8.299688870402494e-05
[1452, 875]
adam
0.07172746628360498
tanh
5.780420486607819e-05
[1274, 561]
adam
0.08057784742503397
tanh
8.299688870402494e-05
[1751, 375]
adam
0.028273341270478095
tanh
3.88554352877077e-05
[1000, 513]
adam
0.0001
tanh
1e-05
[1328, 449]
adam
0.0846406104010169
tanh
8.506080301957433e-05
[1751, 375]
adam
0.028273341270478095
tanh
3.88554352877077e-05
[1000, 513]
adam
0.0001
tanh
1e-05
[1328, 449]
adam
0.0846406104010169
tanh
8.506080301957433e-05
[1751, 375]
adam
0.028273341270478095
tanh
3.88554352877077e-05
[1000, 513]
adam
0.0001
tanh
1e-05
[1328, 449]
adam
0.0846406104010169
tanh
8.506080301957433e-05
[1200, 555]
adam
0.08409240686195207
tanh
8.707062385119544e-05
{'mean_fit_time': array([43.43197966, 70.85604008, 32.75377655,  6.77031541, 47.01107653,
        4.51508776, 48.07788197, 10.20497036, 24.74076041, 16.07185181,
       51.1378297 , 23.13604975, 72.35882195, 29.87150415, 16.50103625,
       68.98707589, 22.53702561, 22.87655139, 40.54995259, 16.2946504 ,
        3.48268994,  2.34919953, 18.14745927, 26.19245323, 14.92077724,
       16.85029833, 16.59904671, 22.86562602, 28.67582528, 24.62565764]), 'std_fit_time': array([10.32629701,  8.17543252,  2.45174976,  0.63293424,  1.68823515,
        0.4702152 ,  3.99571163,  2.56514389,  2.95305528,  2.70932757,
        7.27672964,  1.65054821,  2.99789907,  3.24001073,  1.67790698,
        2.93114508,  1.16549606,  1.67802838,  8.11490115,  4.59645478,
        0.07850905,  0.10822559,  0.68349554,  4.18356032,  2.45364729,
        1.81628   ,  0.46022441,  2.57796764,  1.3155127 ,  2.11800885]), 'mean_score_time': array([0.06541157, 0.05794867, 0.05998818, 0.00941062, 0.07035812,
       0.01182365, 0.07548515, 0.01706258, 0.04959925, 0.02491339,
       0.03891945, 0.04667417, 0.06624794, 0.05796202, 0.04208422,
       0.07408452, 0.02680103, 0.04799223, 0.05568027, 0.04014111,
       0.00905538, 0.00882991, 0.04570707, 0.05539258, 0.03427649,
       0.04370944, 0.04081106, 0.02817488, 0.05660701, 0.05808361]), 'std_score_time': array([1.11977531e-03, 6.24574540e-04, 7.92649052e-04, 2.07218894e-04,
       3.95310674e-04, 1.35255990e-04, 9.03390309e-04, 1.26177626e-04,
       5.69501237e-04, 1.26080279e-04, 3.41784377e-04, 1.81069384e-04,
       5.96928040e-04, 5.56819546e-05, 6.15586152e-04, 8.93617092e-04,
       2.65199516e-04, 3.05581382e-04, 1.79180511e-04, 3.65655189e-04,
       3.71791739e-04, 7.18486518e-05, 7.22671224e-04, 1.06173540e-04,
       4.35114408e-04, 1.58359088e-03, 2.61384194e-04, 1.16042645e-03,
       7.92830649e-04, 4.26181922e-04]), 'param_activation': masked_array(data=['tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[5.780420486607819e-05, 7.318157711314738e-05,
                   3.88554352877077e-05, 6.463188710508989e-05,
                   6.990051291335649e-05, 8.525176906151753e-05,
                   2.241200555859566e-05, 4.7956312339846904e-05,
                   8.299688870402494e-05, 1.633216695462469e-05, 1e-05,
                   8.707062385119544e-05, 8.951849865162319e-05,
                   7.18543078911078e-05, 9.676934327403208e-05,
                   1.424579039080017e-05, 0.0001, 8.506080301957433e-05,
                   8.721072610551958e-05, 8.342432547605761e-05, 1e-05,
                   1e-05, 8.598684723135168e-05, 9.341753004921455e-05,
                   8.561915085840199e-05, 8.557136150135618e-05,
                   8.461803543679875e-05, 1e-05, 8.353978857187277e-05,
                   8.434262728678577e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_batch_size': masked_array(data=[32, 512, 128, 256, 256, 128, 512, 32, 32, 32, 512, 32,
                   8, 32, 32, 8, 8, 32, 32, 128, 32, 128, 32, 32, 32, 32,
                   32, 128, 32, 32],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer1': masked_array(data=[1452, 1312, 1751, 1709, 1988, 1473, 1904, 1642, 1274,
                   1648, 1000, 1200, 1775, 1590, 1062, 1938, 1000, 1328,
                   1445, 1000, 1968, 1299, 1154, 1445, 1000, 1268, 1215,
                   1717, 1699, 1800],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer2': masked_array(data=[875, 824, 375, 310, 474, 411, 679, 602, 561, 915, 513,
                   555, 545, 488, 547, 605, 1000, 449, 573, 574, 300, 300,
                   565, 543, 300, 300, 300, 1000, 300, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.07172746628360498, 0.02114258685493613,
                   0.028273341270478095, 0.04123756054483316,
                   0.0404710091678661, 0.09500385934459113,
                   0.05053380192677643, 0.08321614668171554,
                   0.08057784742503397, 0.051516605962449585, 0.0001,
                   0.08409240686195207, 0.031040020850085486,
                   0.08009810503724663, 0.09257689343076103,
                   0.08797487789224756, 0.06812130235284759,
                   0.0846406104010169, 0.007650619916100617, 0.1, 0.1,
                   0.1, 0.09657724062527695, 0.08244027552404407, 0.1,
                   0.1, 0.1, 0.1, 0.07334871073957867, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_num_hl': masked_array(data=[2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2,
                   2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('activation', 'tanh'), ('alpha', 5.780420486607819e-05), ('batch_size', 32), ('layer1', 1452), ('layer2', 875), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.07172746628360498), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 7.318157711314738e-05), ('batch_size', 512), ('layer1', 1312), ('layer2', 824), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.02114258685493613), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 3.88554352877077e-05), ('batch_size', 128), ('layer1', 1751), ('layer2', 375), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.028273341270478095), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 6.463188710508989e-05), ('batch_size', 256), ('layer1', 1709), ('layer2', 310), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.04123756054483316), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 6.990051291335649e-05), ('batch_size', 256), ('layer1', 1988), ('layer2', 474), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0404710091678661), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.525176906151753e-05), ('batch_size', 128), ('layer1', 1473), ('layer2', 411), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.09500385934459113), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 2.241200555859566e-05), ('batch_size', 512), ('layer1', 1904), ('layer2', 679), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.05053380192677643), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 4.7956312339846904e-05), ('batch_size', 32), ('layer1', 1642), ('layer2', 602), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08321614668171554), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.299688870402494e-05), ('batch_size', 32), ('layer1', 1274), ('layer2', 561), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08057784742503397), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1.633216695462469e-05), ('batch_size', 32), ('layer1', 1648), ('layer2', 915), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.051516605962449585), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 512), ('layer1', 1000), ('layer2', 513), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.707062385119544e-05), ('batch_size', 32), ('layer1', 1200), ('layer2', 555), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08409240686195207), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.951849865162319e-05), ('batch_size', 8), ('layer1', 1775), ('layer2', 545), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.031040020850085486), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 7.18543078911078e-05), ('batch_size', 32), ('layer1', 1590), ('layer2', 488), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08009810503724663), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 9.676934327403208e-05), ('batch_size', 32), ('layer1', 1062), ('layer2', 547), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.09257689343076103), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1.424579039080017e-05), ('batch_size', 8), ('layer1', 1938), ('layer2', 605), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08797487789224756), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('batch_size', 8), ('layer1', 1000), ('layer2', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.06812130235284759), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.506080301957433e-05), ('batch_size', 32), ('layer1', 1328), ('layer2', 449), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0846406104010169), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.721072610551958e-05), ('batch_size', 32), ('layer1', 1445), ('layer2', 573), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.007650619916100617), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.342432547605761e-05), ('batch_size', 128), ('layer1', 1000), ('layer2', 574), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 32), ('layer1', 1968), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 128), ('layer1', 1299), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.598684723135168e-05), ('batch_size', 32), ('layer1', 1154), ('layer2', 565), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.09657724062527695), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 9.341753004921455e-05), ('batch_size', 32), ('layer1', 1445), ('layer2', 543), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08244027552404407), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.561915085840199e-05), ('batch_size', 32), ('layer1', 1000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.557136150135618e-05), ('batch_size', 32), ('layer1', 1268), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.461803543679875e-05), ('batch_size', 32), ('layer1', 1215), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 128), ('layer1', 1717), ('layer2', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.353978857187277e-05), ('batch_size', 32), ('layer1', 1699), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.07334871073957867), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.434262728678577e-05), ('batch_size', 32), ('layer1', 1800), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')])], 'split0_test_score': array([-2.57215259, -3.85890741, -3.14999502, -3.48816326, -3.08131812,
       -3.16194624, -3.6673446 , -2.97379019, -2.56268939, -3.33608562,
       -3.55589515, -2.50032304, -2.70336489, -2.89790245, -2.65340282,
       -4.40189277, -6.55942431, -2.60370753, -3.01107791, -3.0769649 ,
       -2.72707772, -3.29374139, -2.40294732, -3.11872806, -2.51291817,
       -2.27989933, -2.58591188, -3.43638931, -2.52902209, -2.72930372]), 'split1_test_score': array([-3.7496853 , -3.6794843 , -3.64931856, -3.75120941, -3.20087118,
       -2.90275004, -3.78450416, -2.99798341, -2.48627967, -3.23040876,
       -3.37467952, -2.35734636, -4.64161302, -2.43577967, -2.6030833 ,
       -5.37921753, -5.29118838, -2.60553018, -2.91398018, -2.69323698,
       -2.61972541, -3.11365646, -2.75148939, -2.48427257, -2.60797604,
       -2.84212542, -2.41457396, -3.32934536, -2.72871729, -2.62787347]), 'split2_test_score': array([-3.97068172, -3.6221228 , -3.07560426, -3.64019508, -2.91028581,
       -3.01679045, -3.17459524, -3.1275875 , -2.41855187, -2.97106834,
       -3.14390968, -2.56402627, -2.91382319, -2.52382758, -2.4516656 ,
       -6.16600218, -5.22089898, -2.39155555, -2.7933491 , -2.71273769,
       -2.64174325, -2.8222247 , -3.10201761, -2.58962594, -2.43697661,
       -2.5054897 , -2.89539081, -3.09774453, -2.53243118, -2.72366643]), 'mean_test_score': array([-3.43083987, -3.7201715 , -3.29163928, -3.62652258, -3.06415837,
       -3.02716224, -3.542148  , -3.03312037, -2.48917364, -3.17918757,
       -3.35816145, -2.47389856, -3.41960037, -2.6191699 , -2.56938391,
       -5.31570416, -5.69050389, -2.53359776, -2.90613573, -2.82764652,
       -2.66284879, -3.07654085, -2.75215144, -2.73087552, -2.51929027,
       -2.54250482, -2.63195888, -3.2878264 , -2.59672352, -2.69361454]), 'std_test_score': array([0.61385   , 0.1008574 , 0.2547343 , 0.10782245, 0.1192499 ,
       0.10607025, 0.26426358, 0.0675246 , 0.05887947, 0.15335603,
       0.16859743, 0.08642082, 0.86835452, 0.20034468, 0.08573686,
       0.72159359, 0.61508925, 0.10044176, 0.08906032, 0.17647438,
       0.04629768, 0.19427674, 0.28539463, 0.27760527, 0.06995548,
       0.23101534, 0.1989748 , 0.14133398, 0.09334407, 0.04654289]), 'rank_test_score': array([25, 28, 22, 27, 18, 16, 26, 17,  2, 20, 23,  1, 24,  8,  6, 29, 30,
        4, 15, 14, 10, 19, 13, 12,  3,  5,  9, 21,  7, 11], dtype=int32)}
-2.4738985573311254
OrderedDict([('activation', 'tanh'), ('alpha', 8.707062385119544e-05), ('batch_size', 32), ('layer1', 1200), ('layer2', 555), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08409240686195207), ('num_hl', 2), ('solver', 'adam')])
[1988, 474]
adam
0.0404710091678661
tanh
6.990051291335649e-05
[1775, 545]
adam
0.031040020850085486
tanh
8.951849865162319e-05
[1000, 574]
adam
0.1
tanh
8.342432547605761e-05
[1988, 474]
adam
0.0404710091678661
tanh
6.990051291335649e-05
[1775, 545]
adam
0.031040020850085486
tanh
8.951849865162319e-05
[1000, 574]
adam
0.1
tanh
8.342432547605761e-05
[1988, 474]
adam
0.0404710091678661
tanh
6.990051291335649e-05
[1775, 545]
adam
0.031040020850085486
tanh
8.951849865162319e-05
[1000, 574]
adam
0.1
tanh
8.342432547605761e-05
[411]
adam
0.09500385934459113
tanh
8.525176906151753e-05
[1590, 488]
adam
0.08009810503724663
tanh
7.18543078911078e-05
[300]
adam
0.1
tanh
1e-05
[411]
adam
0.09500385934459113
tanh
8.525176906151753e-05
[1590, 488]
adam
0.08009810503724663
tanh
7.18543078911078e-05
[300]
adam
0.1
tanh
1e-05
[411]
adam
0.09500385934459113
tanh
8.525176906151753e-05
[1590, 488]
adam
0.08009810503724663
tanh
7.18543078911078e-05
[300]
adam
0.1
tanh
1e-05
[1904, 679]
adam
0.05053380192677643
tanh
2.241200555859566e-05
[1062, 547]
adam
0.09257689343076103
tanh
9.676934327403208e-05
[300]
adam
0.1
tanh
1e-05
[1904, 679]
adam
0.05053380192677643
tanh
2.241200555859566e-05
[1062, 547]
adam
0.09257689343076103
tanh
9.676934327403208e-05
[300]
adam
0.1
tanh
1e-05
[1904, 679]
adam
0.05053380192677643
tanh
2.241200555859566e-05
[1062, 547]
adam
0.09257689343076103
tanh
9.676934327403208e-05
[300]
adam
0.1
tanh
1e-05
[602]
adam
0.08321614668171554
tanh
4.7956312339846904e-05
[1938, 605]
adam
0.08797487789224756
tanh
1.424579039080017e-05
[1154, 565]
adam
0.09657724062527695
tanh
8.598684723135168e-05
[602]
adam
0.08321614668171554
tanh
4.7956312339846904e-05
[1938, 605]
adam
0.08797487789224756
tanh
1.424579039080017e-05
[1154, 565]
adam
0.09657724062527695
tanh
8.598684723135168e-05
[602]
adam
0.08321614668171554
tanh
4.7956312339846904e-05
[1938, 605]
adam
0.08797487789224756
tanh
1.424579039080017e-05
[1154, 565]
adam
0.09657724062527695
tanh
8.598684723135168e-05
[1445, 543]
adam
0.08244027552404407
tanh
9.341753004921455e-05
[1445, 543]
adam
0.08244027552404407
tanh
9.341753004921455e-05
[1445, 543]
adam
0.08244027552404407
tanh
9.341753004921455e-05
[1000, 300]
adam
0.1
tanh
8.561915085840199e-05
[1000, 300]
adam
0.1
tanh
8.561915085840199e-05
[1000, 300]
adam
0.1
tanh
8.561915085840199e-05
[1268, 300]
adam
0.1
tanh
8.557136150135618e-05
[1268, 300]
adam
0.1
tanh
8.557136150135618e-05
[1268, 300]
adam
0.1
tanh
8.557136150135618e-05
[1215, 300]
adam
0.1
tanh
8.461803543679875e-05
[1215, 300]
adam
0.1
tanh
8.461803543679875e-05
[1215, 300]
adam
0.1
tanh
8.461803543679875e-05
[1000]
adam
0.1
tanh
1e-05
[1000]
adam
0.1
tanh
1e-05
[1000]
adam
0.1
tanh
1e-05
[1699, 300]
adam
0.07334871073957867
tanh
8.353978857187277e-05
[1699, 300]
adam
0.07334871073957867
tanh
8.353978857187277e-05
[1699, 300]
adam
0.07334871073957867
tanh
8.353978857187277e-05
[1312, 824]
adam
0.02114258685493613
tanh
7.318157711314738e-05
[915]
adam
0.051516605962449585
tanh
1.633216695462469e-05
[1000]
adam
0.06812130235284759
tanh
0.0001
[1800, 300]
adam
0.1
tanh
8.434262728678577e-05
[1312, 824]
adam
0.02114258685493613
tanh
7.318157711314738e-05
[915]
adam
0.051516605962449585
tanh
1.633216695462469e-05
[1000]
adam
0.06812130235284759
tanh
0.0001
[1800, 300]
adam
0.1
tanh
8.434262728678577e-05
[1312, 824]
adam
0.02114258685493613
tanh
7.318157711314738e-05
[915]
adam
0.051516605962449585
tanh
1.633216695462469e-05
[1000]
adam
0.06812130235284759
tanh
0.0001
[1800, 300]
adam
0.1
tanh
8.434262728678577e-05
[310]
adam
0.04123756054483316
tanh
6.463188710508989e-05
[1200, 555]
adam
0.08409240686195207
tanh
8.707062385119544e-05
[1445, 573]
adam
0.007650619916100617
tanh
8.721072610551958e-05
[1083, 670]
adam
0.061417310604963055
tanh
1.7602680735684837e-05
[310]
adam
0.04123756054483316
tanh
6.463188710508989e-05
[1200, 555]
adam
0.08409240686195207
tanh
8.707062385119544e-05
[1445, 573]
adam
0.007650619916100617
tanh
8.721072610551958e-05
[1083, 670]
adam
0.061417310604963055
tanh
1.7602680735684837e-05
[310]
adam
0.04123756054483316
tanh
6.463188710508989e-05
[1200, 555]
adam
0.08409240686195207
tanh
8.707062385119544e-05
[1445, 573]
adam
0.007650619916100617
tanh
8.721072610551958e-05
[1083, 670]
adam
0.061417310604963055
tanh
1.7602680735684837e-05
[1116, 973]
adam
0.021793102681473893
tanh
5.813877488634044e-05
[1116, 973]
adam
0.021793102681473893
tanh
5.813877488634044e-05
[1837, 470]
adam
0.0914419519828283
tanh
4.0771930254137786e-05
[1047, 381]
adam
0.011930387264907447
tanh
9.986323548372082e-05
[771]
adam
0.06507718012924293
tanh
1.758502399122354e-05
[1116, 973]
adam
0.021793102681473893
tanh
5.813877488634044e-05
[1837, 470]
adam
0.0914419519828283
tanh
4.0771930254137786e-05
[1047, 381]
adam
0.011930387264907447
tanh
9.986323548372082e-05
[771]
adam
0.06507718012924293
tanh
1.758502399122354e-05
[1837, 470]
adam
0.0914419519828283
tanh
4.0771930254137786e-05
[1047, 381]
adam
0.011930387264907447
tanh
9.986323548372082e-05
[771]
adam
0.06507718012924293
tanh
1.758502399122354e-05
[1846, 802]
adam
0.021155678979890607
tanh
5.20010405711215e-05
[1246, 883]
adam
0.005414004399224233
tanh
6.795763303639786e-05
[1846, 802]
adam
0.021155678979890607
tanh
5.20010405711215e-05
[1246, 883]
adam
0.005414004399224233
tanh
6.795763303639786e-05
[1751, 554]
adam
0.09366387389558928
tanh
7.703544902868335e-05
[653]
adam
0.009362017749299545
tanh
6.537611621867118e-05
[1751, 554]
adam
0.09366387389558928
tanh
7.703544902868335e-05
[653]
adam
0.009362017749299545
tanh
6.537611621867118e-05
[1846, 802]
adam
0.021155678979890607
tanh
5.20010405711215e-05
[1246, 883]
adam
0.005414004399224233
tanh
6.795763303639786e-05
[1751, 554]
adam
0.09366387389558928
tanh
7.703544902868335e-05
[653]
adam
0.009362017749299545
tanh
6.537611621867118e-05
[755]
adam
0.007388053491323744
tanh
4.459067266512911e-05
[1019, 386]
adam
0.015586608370685115
tanh
9.841561837421808e-05
[1011, 541]
adam
0.0202784742758344
tanh
5.609207414236799e-05
[1167, 388]
adam
0.015475712731263358
tanh
0.0001
[1808, 438]
adam
0.01581486938694694
tanh
8.640874897369982e-05
[2000, 765]
adam
0.015504709730735585
tanh
9.07365392540265e-05
[2000, 300]
adam
0.01578702630046517
tanh
4.204826408903877e-05
[2000, 300]
adam
0.015671093131194063
tanh
7.240296287526039e-05
[300]
adam
0.015579315435613446
tanh
2.1323055894593626e-05
[755]
adam
0.007388053491323744
tanh
4.459067266512911e-05
[1019, 386]
adam
0.015586608370685115
tanh
9.841561837421808e-05
[1011, 541]
adam
0.0202784742758344
tanh
5.609207414236799e-05
[1167, 388]
adam
0.015475712731263358
tanh
0.0001
[1808, 438]
adam
0.01581486938694694
tanh
8.640874897369982e-05
[2000, 765]
adam
0.015504709730735585
tanh
9.07365392540265e-05
[2000, 300]
adam
0.01578702630046517
tanh
4.204826408903877e-05
[2000, 300]
adam
0.015671093131194063
tanh
7.240296287526039e-05
[300]
adam
0.015579315435613446
tanh
2.1323055894593626e-05
[755]
adam
0.007388053491323744
tanh
4.459067266512911e-05
[1019, 386]
adam
0.015586608370685115
tanh
9.841561837421808e-05
[1011, 541]
adam
0.0202784742758344
tanh
5.609207414236799e-05
[1167, 388]
adam
0.015475712731263358
tanh
0.0001
[1808, 438]
adam
0.01581486938694694
tanh
8.640874897369982e-05
[2000, 765]
adam
0.015504709730735585
tanh
9.07365392540265e-05
[2000, 300]
adam
0.01578702630046517
tanh
4.204826408903877e-05
[2000, 300]
adam
0.015671093131194063
tanh
7.240296287526039e-05
[300]
adam
0.015579315435613446
tanh
2.1323055894593626e-05
[610]
adam
0.08391681429385348
tanh
3.377366672103347e-05
[610]
adam
0.08391681429385348
tanh
3.377366672103347e-05
[610]
adam
0.08391681429385348
tanh
3.377366672103347e-05
[1489, 856]
adam
0.0331573447823829
tanh
1.0786438354234018e-05
[1000]
adam
0.1
tanh
7.13908709895749e-05
[1000]
adam
0.1
tanh
3.463538720729628e-05
[1085, 694]
adam
0.04810999588270655
tanh
1.4921025771991229e-05
[1489, 856]
adam
0.0331573447823829
tanh
1.0786438354234018e-05
[1000]
adam
0.1
tanh
7.13908709895749e-05
[1000]
adam
0.1
tanh
3.463538720729628e-05
[1085, 694]
adam
0.04810999588270655
tanh
1.4921025771991229e-05
[1423, 980]
adam
0.03633774691095571
tanh
3.125930847822554e-05
[300]
adam
0.03272196057432131
tanh
0.0001
[1489, 856]
adam
0.0331573447823829
tanh
1.0786438354234018e-05
[1000]
adam
0.1
tanh
7.13908709895749e-05
[1000]
adam
0.1
tanh
3.463538720729628e-05
[1085, 694]
adam
0.04810999588270655
tanh
1.4921025771991229e-05
[1423, 980]
adam
0.03633774691095571
tanh
3.125930847822554e-05
[300]
adam
0.03272196057432131
tanh
0.0001
[1423, 980]
adam
0.03633774691095571
tanh
3.125930847822554e-05
[300]
adam
0.03272196057432131
tanh
0.0001
[1733, 300]
adam
0.03272267463072171
tanh
5.125002480815355e-05
[2000, 300]
adam
0.0001
tanh
1e-05
[2000, 300]
adam
0.03567420445028524
tanh
0.0001
[1085, 300]
adam
0.03662446788872614
tanh
1e-05
[2000, 300]
adam
0.016616228589488545
tanh
0.0001
[1733, 300]
adam
0.03272267463072171
tanh
5.125002480815355e-05
[2000, 300]
adam
0.0001
tanh
1e-05
[2000, 300]
adam
0.03567420445028524
tanh
0.0001
[1085, 300]
adam
0.03662446788872614
tanh
1e-05
[2000, 300]
adam
0.016616228589488545
tanh
0.0001
[1733, 300]
adam
0.03272267463072171
tanh
5.125002480815355e-05
[2000, 300]
adam
0.0001
tanh
1e-05
[2000, 300]
adam
0.03567420445028524
tanh
0.0001
[1085, 300]
adam
0.03662446788872614
tanh
1e-05
[2000, 300]
adam
0.016616228589488545
tanh
0.0001
[2000, 300]
adam
0.01578702630046517
tanh
4.204826408903877e-05
{'mean_fit_time': array([ 251.16933227,  468.56420461,  326.67242265,  594.04519224,
        203.60163705,  616.88715235,  368.82787569,  281.72127064,
        202.89769157,  268.37363394,  546.23914806,  455.41532207,
        595.84526793,  769.68257244,  850.13465643, 1145.95764748,
        960.20481761,  269.54397504,  591.80765804,  227.08364264,
        127.49101774,  261.24700952,  274.20978363,  344.83522336,
        143.92988157,  422.11904311, 2585.94453224,  761.23936137,
        533.85411684,  895.72711897]), 'std_fit_time': array([ 28.26907746,  71.44035339,  35.6767829 ,  21.06524558,
        14.63786309,  54.08611327, 130.27942077,  72.67387418,
        42.85467568,  31.71850373,  36.22321711,  10.14733181,
        44.3922616 ,  38.78524652,  37.78853611,  44.00091679,
        76.20461281,  11.67760381,  23.19970273,  23.5401047 ,
        14.63842891,  73.76702886,  63.00674323,  96.46027508,
         9.73174058,  95.71054326, 218.04684139,  28.53033337,
        76.21886068, 119.66604504]), 'mean_score_time': array([0.30497313, 0.32218909, 0.50256594, 0.28924847, 0.20872966,
       0.51336487, 0.35401646, 0.48090736, 0.17808517, 0.20558961,
       0.28266899, 0.28230667, 0.3218383 , 0.49420245, 0.55245503,
       0.5346384 , 0.53483367, 0.08558003, 0.41872136, 0.26503905,
       0.16874719, 0.26527317, 0.30561487, 0.40798839, 0.08762002,
       0.46751722, 0.53236659, 0.53393356, 0.29629588, 0.53660377]), 'std_score_time': array([0.00219055, 0.00698885, 0.00830955, 0.00250605, 0.00264019,
       0.00391239, 0.00420399, 0.00533456, 0.00182614, 0.00290265,
       0.00650077, 0.0022171 , 0.00388771, 0.00957584, 0.00522293,
       0.00615173, 0.00876628, 0.00110953, 0.00540585, 0.00335213,
       0.00342506, 0.00343278, 0.00404944, 0.00826681, 0.00335503,
       0.00801266, 0.00962438, 0.00780044, 0.0048737 , 0.00809946]), 'param_activation': masked_array(data=['tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[1.7602680735684837e-05, 5.813877488634044e-05,
                   4.0771930254137786e-05, 9.986323548372082e-05,
                   1.758502399122354e-05, 5.20010405711215e-05,
                   6.795763303639786e-05, 7.703544902868335e-05,
                   6.537611621867118e-05, 4.459067266512911e-05,
                   9.841561837421808e-05, 5.609207414236799e-05, 0.0001,
                   8.640874897369982e-05, 9.07365392540265e-05,
                   4.204826408903877e-05, 7.240296287526039e-05,
                   2.1323055894593626e-05, 1.0786438354234018e-05,
                   7.13908709895749e-05, 3.377366672103347e-05,
                   3.463538720729628e-05, 1.4921025771991229e-05,
                   3.125930847822554e-05, 0.0001, 5.125002480815355e-05,
                   1e-05, 0.0001, 1e-05, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_batch_size': masked_array(data=[128, 32, 32, 8, 32, 128, 32, 256, 128, 128, 8, 8, 8, 8,
                   8, 8, 8, 8, 32, 512, 256, 256, 128, 128, 8, 512, 8, 8,
                   8, 8],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer1': masked_array(data=[1083, 1116, 1837, 1047, 1356, 1846, 1246, 1751, 1317,
                   1257, 1019, 1011, 1167, 1808, 2000, 2000, 2000, 1001,
                   1489, 1116, 1420, 1171, 1085, 1423, 2000, 1733, 2000,
                   2000, 1085, 2000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer2': masked_array(data=[670, 973, 470, 381, 771, 802, 883, 554, 653, 755, 386,
                   541, 388, 438, 765, 300, 300, 300, 856, 1000, 610,
                   1000, 694, 980, 300, 300, 300, 300, 300, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.061417310604963055, 0.021793102681473893,
                   0.0914419519828283, 0.011930387264907447,
                   0.06507718012924293, 0.021155678979890607,
                   0.005414004399224233, 0.09366387389558928,
                   0.009362017749299545, 0.007388053491323744,
                   0.015586608370685115, 0.0202784742758344,
                   0.015475712731263358, 0.01581486938694694,
                   0.015504709730735585, 0.01578702630046517,
                   0.015671093131194063, 0.015579315435613446,
                   0.0331573447823829, 0.1, 0.08391681429385348, 0.1,
                   0.04810999588270655, 0.03633774691095571,
                   0.03272196057432131, 0.03272267463072171, 0.0001,
                   0.03567420445028524, 0.03662446788872614,
                   0.016616228589488545],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_num_hl': masked_array(data=[2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
                   2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('activation', 'tanh'), ('alpha', 1.7602680735684837e-05), ('batch_size', 128), ('layer1', 1083), ('layer2', 670), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.061417310604963055), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 5.813877488634044e-05), ('batch_size', 32), ('layer1', 1116), ('layer2', 973), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.021793102681473893), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 4.0771930254137786e-05), ('batch_size', 32), ('layer1', 1837), ('layer2', 470), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0914419519828283), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 9.986323548372082e-05), ('batch_size', 8), ('layer1', 1047), ('layer2', 381), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.011930387264907447), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1.758502399122354e-05), ('batch_size', 32), ('layer1', 1356), ('layer2', 771), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.06507718012924293), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 5.20010405711215e-05), ('batch_size', 128), ('layer1', 1846), ('layer2', 802), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.021155678979890607), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 6.795763303639786e-05), ('batch_size', 32), ('layer1', 1246), ('layer2', 883), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.005414004399224233), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 7.703544902868335e-05), ('batch_size', 256), ('layer1', 1751), ('layer2', 554), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.09366387389558928), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 6.537611621867118e-05), ('batch_size', 128), ('layer1', 1317), ('layer2', 653), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.009362017749299545), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 4.459067266512911e-05), ('batch_size', 128), ('layer1', 1257), ('layer2', 755), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.007388053491323744), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 9.841561837421808e-05), ('batch_size', 8), ('layer1', 1019), ('layer2', 386), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.015586608370685115), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 5.609207414236799e-05), ('batch_size', 8), ('layer1', 1011), ('layer2', 541), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0202784742758344), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('batch_size', 8), ('layer1', 1167), ('layer2', 388), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.015475712731263358), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 8.640874897369982e-05), ('batch_size', 8), ('layer1', 1808), ('layer2', 438), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.01581486938694694), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 9.07365392540265e-05), ('batch_size', 8), ('layer1', 2000), ('layer2', 765), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.015504709730735585), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 4.204826408903877e-05), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.01578702630046517), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 7.240296287526039e-05), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.015671093131194063), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 2.1323055894593626e-05), ('batch_size', 8), ('layer1', 1001), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.015579315435613446), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1.0786438354234018e-05), ('batch_size', 32), ('layer1', 1489), ('layer2', 856), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0331573447823829), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 7.13908709895749e-05), ('batch_size', 512), ('layer1', 1116), ('layer2', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 3.377366672103347e-05), ('batch_size', 256), ('layer1', 1420), ('layer2', 610), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08391681429385348), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 3.463538720729628e-05), ('batch_size', 256), ('layer1', 1171), ('layer2', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1.4921025771991229e-05), ('batch_size', 128), ('layer1', 1085), ('layer2', 694), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.04810999588270655), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 3.125930847822554e-05), ('batch_size', 128), ('layer1', 1423), ('layer2', 980), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03633774691095571), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03272196057432131), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 5.125002480815355e-05), ('batch_size', 512), ('layer1', 1733), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03272267463072171), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03567420445028524), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 1e-05), ('batch_size', 8), ('layer1', 1085), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03662446788872614), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.016616228589488545), ('num_hl', 2), ('solver', 'adam')])], 'split0_test_score': array([-2.81590392, -2.68335215, -4.06863439, -2.77256929, -2.69245244,
       -2.80535032, -3.24819461, -2.59470272, -3.49670067, -3.54119421,
       -2.37003016, -2.6839906 , -2.30724502, -2.18480959, -2.39048947,
       -2.18417229, -2.16201443, -2.77176117, -2.69528919, -3.06118084,
       -3.04518437, -3.01561854, -2.69488424, -2.97474989, -2.72148945,
       -3.31975603, -2.72018941, -2.29308962, -2.91734373, -2.89870211]), 'split1_test_score': array([-2.71765854, -2.74062678, -2.58485235, -2.53464421, -3.08100685,
       -2.81508966, -3.03655823, -2.62447578, -3.44431863, -3.40843465,
       -2.47618689, -3.2890175 , -2.3656403 , -2.41673811, -2.78141077,
       -2.3312827 , -2.90436326, -2.33035427, -3.00480427, -3.29483196,
       -3.27225365, -3.04244083, -2.84834719, -2.64777379, -2.39358757,
       -3.11742187, -2.90543304, -2.31096102, -3.01115889, -2.79073447]), 'split2_test_score': array([-2.69347935, -2.53503932, -3.74103403, -2.4977917 , -2.906459  ,
       -2.77523452, -2.73974556, -2.75709574, -3.49935389, -3.5909343 ,
       -2.35403169, -2.27027845, -2.29364869, -2.31470319, -2.61127412,
       -2.31076612, -2.62485707, -2.44403143, -2.51073947, -2.91383132,
       -2.51749612, -2.71735273, -2.63048799, -2.70543921, -2.68640934,
       -3.13406516, -2.47051289, -2.66558121, -2.57828372, -2.24170024]), 'mean_test_score': array([-2.74234727, -2.65300609, -3.46484026, -2.6016684 , -2.8933061 ,
       -2.79855817, -3.00816613, -2.65875808, -3.4801244 , -3.51352106,
       -2.40008291, -2.74776219, -2.32217801, -2.30541696, -2.59439145,
       -2.27540704, -2.56374492, -2.51538229, -2.73694431, -3.08994804,
       -2.94497805, -2.92513737, -2.72457314, -2.77598763, -2.60049545,
       -3.19041435, -2.69871178, -2.42321061, -2.83559545, -2.64371227]), 'std_test_score': array([0.05294081, 0.0866303 , 0.63645609, 0.12177811, 0.15889909,
       0.01696483, 0.20854207, 0.07058957, 0.02534166, 0.07703196,
       0.05420854, 0.41833593, 0.03122972, 0.09491183, 0.16003881,
       0.06505417, 0.30612793, 0.18713315, 0.20384041, 0.15686732,
       0.31617054, 0.14733341, 0.09138465, 0.14250416, 0.14700523,
       0.09171042, 0.17820372, 0.17153712, 0.18593425, 0.28766243]), 'rank_test_score': array([17, 12, 28, 10, 22, 20, 25, 13, 29, 30,  4, 18,  3,  2,  8,  1,  7,
        6, 16, 26, 24, 23, 15, 19,  9, 27, 14,  5, 21, 11], dtype=int32)}
-2.275407036592609
OrderedDict([('activation', 'tanh'), ('alpha', 4.204826408903877e-05), ('batch_size', 8), ('layer1', 2000), ('layer2', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.01578702630046517), ('num_hl', 2), ('solver', 'adam')])
