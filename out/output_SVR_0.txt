no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([4.63291113, 4.79534729, 4.86313041, 4.72100584, 4.71623508,
       4.60858091, 1.92351492, 4.73822419, 2.94993401, 2.88032619,
       4.6831193 , 3.36217388, 3.34866754, 3.35755626, 3.41443491,
       3.34807189, 3.36247516, 3.41552393, 3.43601902, 3.45857334,
       3.38378191, 3.33916982, 3.41331077, 3.36027511, 3.40971557,
       3.39308174, 3.35421983, 3.3521382 , 3.4127535 , 3.3649416 ,
       3.43730084, 3.35990731, 3.36866728, 3.33738359, 3.42846727,
       3.38009556, 3.36922081, 3.35470231, 3.34388407, 3.41973511,
       3.43810924, 3.37897714, 3.39137077, 3.41112375, 3.1477739 ,
       3.39512531, 3.44924633, 3.39742986, 3.37883441, 3.38461971]), 'std_fit_time': array([0.12415671, 0.08886504, 0.09019679, 0.06345856, 0.04706255,
       0.10098384, 0.24560845, 0.091848  , 0.41827714, 0.62672029,
       0.06634968, 0.06491196, 0.08635196, 0.01922013, 0.04001521,
       0.02808625, 0.04797335, 0.05238568, 0.05408827, 0.0404166 ,
       0.0667091 , 0.00829504, 0.06601185, 0.02550745, 0.02780777,
       0.05097697, 0.06699799, 0.04409871, 0.03705744, 0.0695484 ,
       0.03670464, 0.03285476, 0.06939729, 0.05284866, 0.08842096,
       0.04256236, 0.04132424, 0.03440053, 0.02337977, 0.02547734,
       0.03226181, 0.04055878, 0.06712831, 0.05887827, 0.25813191,
       0.04202695, 0.02607242, 0.10880848, 0.07632175, 0.02918595]), 'mean_score_time': array([2.68784936, 2.6524659 , 1.82020561, 2.64030687, 2.83135843,
       2.70672385, 0.48732972, 2.68483257, 0.95274639, 0.95863374,
       2.7232674 , 1.19423978, 1.21022932, 1.14821688, 1.23081716,
       1.21370888, 1.16596365, 1.19148032, 1.17294709, 1.23431333,
       1.1455822 , 1.16827114, 1.18655467, 1.14343079, 1.19396369,
       1.1761845 , 1.18487501, 1.1617945 , 1.1700259 , 1.16664052,
       1.23124846, 1.17733105, 1.18888116, 1.15282687, 1.22017717,
       1.17799354, 1.18068854, 1.18854372, 1.16485405, 1.22895495,
       1.18949286, 1.1511658 , 1.13017098, 1.15601921, 1.05191731,
       1.20664144, 1.22504616, 1.21191971, 1.17967661, 1.16580598]), 'std_score_time': array([0.03666647, 0.03605094, 0.04630263, 0.07156497, 0.14904525,
       0.11036566, 0.09847818, 0.08462875, 0.19896657, 0.28980234,
       0.05506604, 0.01141821, 0.0837297 , 0.01585166, 0.02492168,
       0.03301421, 0.01696616, 0.02808718, 0.01233991, 0.02486209,
       0.01912622, 0.02990943, 0.02515989, 0.02006158, 0.0505354 ,
       0.04236414, 0.03781453, 0.02817447, 0.03621862, 0.04044738,
       0.0216195 , 0.05837704, 0.01931881, 0.00797611, 0.05513864,
       0.0238515 , 0.03114652, 0.03205579, 0.01515028, 0.00821867,
       0.01029094, 0.02465673, 0.01379163, 0.00761354, 0.10832664,
       0.03984261, 0.07148048, 0.06652753, 0.03634002, 0.01563693]), 'param_C': masked_array(data=[10.45782757963395, 14.59703419096062,
                   6.951772452037259, 16.521328726040117,
                   10.120203741058692, 4.870879560942059,
                   17.600716604375094, 15.824012778929113,
                   9.002455811715649, 19.705402855703003,
                   14.744082489346955, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[5, 3, 6, 4, 2, 3, 6, 4, 3, 4, 4, 2, 2, 2, 2, 2, 2, 2,
                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                   2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_epsilon': masked_array(data=[0.6475756282370874, 0.3025479335225678,
                   0.1098719157417569, 0.6437505570839912,
                   0.44829316593367363, 0.5679819169676502,
                   0.25732399218895774, 0.10455684079106593,
                   0.36413082561996557, 0.6768655521034987,
                   0.43596151839088376, 0.008827917785139219,
                   0.00918419602969018, 0.017761689065354247,
                   0.025625746748138972, 0.03257753740334291,
                   0.03871209453887539, 0.044130087702751,
                   0.049002663096656816, 0.05336362250560727,
                   0.05798116684212995, 0.0626934796555824,
                   0.06679135240405941, 0.07085964712542434,
                   0.07438533256988904, 0.07793307299872264,
                   0.08125376727649487, 0.08386034029518995,
                   0.08902680854475871, 0.08920698038553582,
                   0.09164539687889132, 0.09297930690980753,
                   0.09597545542892102, 0.09899790427586619,
                   0.10156806203217589, 0.10377589616371315,
                   0.10539461056782952, 0.10741248306801178,
                   0.10948004918882831, 0.11175237829107819,
                   0.11334619720082166, 0.11463415250181155,
                   0.11707069285991488, 0.11824290844876782,
                   0.14880202988353158, 0.1044478899710214,
                   0.08884725185719403, 0.11035053637980875,
                   0.11450088063177859, 0.11667960841753945],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'sigmoid', 'rbf', 'rbf', 'rbf', 'poly',
                   'rbf', 'poly', 'poly', 'rbf', 'poly', 'poly', 'poly',
                   'poly', 'poly', 'poly', 'poly', 'poly', 'poly', 'poly',
                   'poly', 'poly', 'poly', 'poly', 'poly', 'poly', 'poly',
                   'poly', 'poly', 'poly', 'poly', 'poly', 'poly', 'poly',
                   'poly', 'poly', 'poly', 'poly', 'poly', 'poly', 'poly',
                   'poly', 'poly', 'poly', 'poly', 'poly', 'poly', 'poly',
                   'poly'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_shrinking': masked_array(data=[True, False, True, False, True, True, False, True,
                   True, True, False, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('C', 10.45782757963395), ('degree', 5), ('epsilon', 0.6475756282370874), ('kernel', 'rbf'), ('shrinking', True)]), OrderedDict([('C', 14.59703419096062), ('degree', 3), ('epsilon', 0.3025479335225678), ('kernel', 'rbf'), ('shrinking', False)]), OrderedDict([('C', 6.951772452037259), ('degree', 6), ('epsilon', 0.1098719157417569), ('kernel', 'sigmoid'), ('shrinking', True)]), OrderedDict([('C', 16.521328726040117), ('degree', 4), ('epsilon', 0.6437505570839912), ('kernel', 'rbf'), ('shrinking', False)]), OrderedDict([('C', 10.120203741058692), ('degree', 2), ('epsilon', 0.44829316593367363), ('kernel', 'rbf'), ('shrinking', True)]), OrderedDict([('C', 4.870879560942059), ('degree', 3), ('epsilon', 0.5679819169676502), ('kernel', 'rbf'), ('shrinking', True)]), OrderedDict([('C', 17.600716604375094), ('degree', 6), ('epsilon', 0.25732399218895774), ('kernel', 'poly'), ('shrinking', False)]), OrderedDict([('C', 15.824012778929113), ('degree', 4), ('epsilon', 0.10455684079106593), ('kernel', 'rbf'), ('shrinking', True)]), OrderedDict([('C', 9.002455811715649), ('degree', 3), ('epsilon', 0.36413082561996557), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 19.705402855703003), ('degree', 4), ('epsilon', 0.6768655521034987), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 14.744082489346955), ('degree', 4), ('epsilon', 0.43596151839088376), ('kernel', 'rbf'), ('shrinking', False)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.008827917785139219), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.00918419602969018), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.017761689065354247), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.025625746748138972), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.03257753740334291), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.03871209453887539), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.044130087702751), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.049002663096656816), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.05336362250560727), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.05798116684212995), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.0626934796555824), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.06679135240405941), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.07085964712542434), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.07438533256988904), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.07793307299872264), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.08125376727649487), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.08386034029518995), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.08902680854475871), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.08920698038553582), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.09164539687889132), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.09297930690980753), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.09597545542892102), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.09899790427586619), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.10156806203217589), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.10377589616371315), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.10539461056782952), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.10741248306801178), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.10948004918882831), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11175237829107819), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11334619720082166), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11463415250181155), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11707069285991488), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11824290844876782), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 3), ('epsilon', 0.14880202988353158), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.1044478899710214), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.08884725185719403), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11035053637980875), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11450088063177859), ('kernel', 'poly'), ('shrinking', True)]), OrderedDict([('C', 1.0), ('degree', 2), ('epsilon', 0.11667960841753945), ('kernel', 'poly'), ('shrinking', True)])], 'split0_test_score': array([-6.21735043e+00, -1.28870099e+01, -9.68651704e+01, -7.40026896e+00,
       -3.60665748e+00, -7.23473518e+00, -5.53016233e+07, -1.41114031e+01,
       -2.09982003e+04, -8.00705111e+05, -4.31598981e+00, -1.40688058e+03,
       -1.40783855e+03, -1.40728866e+03, -1.41723639e+03, -1.41650984e+03,
       -1.41701046e+03, -1.42631400e+03, -1.42583181e+03, -1.42632582e+03,
       -1.42735081e+03, -1.42952277e+03, -1.78296392e+03, -1.78534643e+03,
       -1.78435308e+03, -1.78681575e+03, -1.78455944e+03, -1.78559381e+03,
       -1.78281734e+03, -1.78281482e+03, -1.78202517e+03, -1.78208551e+03,
       -1.78432762e+03, -1.78791154e+03, -1.78675159e+03, -1.78779008e+03,
       -1.78786183e+03, -1.78897848e+03, -1.78929058e+03, -1.78929837e+03,
       -1.78983754e+03, -1.79067078e+03, -1.79074776e+03, -1.79040353e+03,
       -1.18569403e+04, -1.78699934e+03, -1.78614444e+03, -1.78921850e+03,
       -1.79009006e+03, -1.79050053e+03]), 'split1_test_score': array([-3.92091801e+00, -1.30390734e+01, -2.89494742e+02, -3.87464840e+00,
       -2.60589626e+00, -6.39387671e+00, -2.60566132e+08, -1.15420130e+01,
       -6.36411476e+02, -3.63224044e+05, -8.33573585e+00, -1.29240163e+03,
       -1.29225580e+03, -1.28645508e+03, -1.28754749e+03, -1.28854704e+03,
       -1.28885266e+03, -1.29391425e+03, -1.29278684e+03, -1.29495394e+03,
       -1.29584457e+03, -1.29890411e+03, -1.30068936e+03, -1.30121700e+03,
       -1.30349909e+03, -1.30297373e+03, -1.30374522e+03, -1.28316315e+03,
       -1.28398959e+03, -1.28398961e+03, -1.30385076e+03, -1.28531348e+03,
       -1.28468495e+03, -1.28871700e+03, -1.28928262e+03, -1.29062942e+03,
       -1.29133712e+03, -1.29284307e+03, -1.29320922e+03, -1.29517283e+03,
       -1.29459104e+03, -1.29514186e+03, -1.29013169e+03, -1.29017854e+03,
       -1.06806598e+03, -1.29107806e+03, -1.28398957e+03, -1.29352416e+03,
       -1.29514185e+03, -1.29195203e+03]), 'split2_test_score': array([-5.47368992e+00, -9.94472805e+00, -1.38313795e+02, -1.13031389e+01,
       -9.93114673e+00, -9.23254444e+00, -1.33053282e+06, -1.58485888e+01,
       -6.27804542e+03, -6.08625958e+04, -6.78946657e+00, -8.11831561e+02,
       -8.11792218e+02, -8.11102228e+02, -8.11357588e+02, -8.15191134e+02,
       -1.03524453e+03, -1.03483229e+03, -1.03680373e+03, -1.03630844e+03,
       -1.04283486e+03, -1.04325710e+03, -1.04276206e+03, -1.04335122e+03,
       -1.04454979e+03, -8.69321103e+02, -8.68770040e+02, -8.69237165e+02,
       -1.04973518e+03, -1.04935843e+03, -1.04903705e+03, -1.04866301e+03,
       -1.04847424e+03, -1.04859502e+03, -1.04921607e+03, -1.04915109e+03,
       -8.68352447e+02, -8.68490483e+02, -8.69532765e+02, -8.68637204e+02,
       -8.68663460e+02, -8.69044694e+02, -8.67968577e+02, -8.67673552e+02,
       -8.22385996e+03, -8.68440384e+02, -1.04970822e+03, -8.69139278e+02,
       -8.68780939e+02, -8.67583641e+02]), 'mean_test_score': array([-5.20398612e+00, -1.19569371e+01, -1.74891236e+02, -7.52601874e+00,
       -5.38123349e+00, -7.62038545e+00, -1.05732763e+08, -1.38340016e+01,
       -9.30421907e+03, -4.08263917e+05, -6.48039741e+00, -1.17037126e+03,
       -1.17062886e+03, -1.16828199e+03, -1.17204716e+03, -1.17341601e+03,
       -1.24703588e+03, -1.25168685e+03, -1.25180746e+03, -1.25252940e+03,
       -1.25534341e+03, -1.25722799e+03, -1.37547178e+03, -1.37663821e+03,
       -1.37746732e+03, -1.31970353e+03, -1.31902490e+03, -1.31266471e+03,
       -1.37218070e+03, -1.37205429e+03, -1.37830432e+03, -1.37202067e+03,
       -1.37249560e+03, -1.37507452e+03, -1.37508342e+03, -1.37585686e+03,
       -1.31585047e+03, -1.31677068e+03, -1.31734419e+03, -1.31770280e+03,
       -1.31769735e+03, -1.31828578e+03, -1.31628268e+03, -1.31608521e+03,
       -7.04962209e+03, -1.31550593e+03, -1.37328074e+03, -1.31729398e+03,
       -1.31800428e+03, -1.31667874e+03]), 'std_test_score': array([9.56715065e-01, 1.42420033e+00, 8.27847405e+01, 3.03397180e+00,
       3.24311205e+00, 1.19053299e+00, 1.11678852e+08, 1.76906051e+00,
       8.58366302e+03, 3.03713878e+05, 1.65554268e+00, 2.57797585e+02,
       2.58086088e+02, 2.57336646e+02, 2.60483559e+02, 2.58634122e+02,
       1.58635403e+02, 1.62587100e+02, 1.61441823e+02, 1.62025248e+02,
       1.59568974e+02, 1.60422289e+02, 3.06777885e+02, 3.07577084e+02,
       3.06518845e+02, 3.74752382e+02, 3.74025540e+02, 3.74682204e+02,
       3.05707504e+02, 3.05838857e+02, 3.03837013e+02, 3.05631307e+02,
       3.06760583e+02, 3.07939870e+02, 3.07149253e+02, 3.07511167e+02,
       3.75788111e+02, 3.76168345e+02, 3.75877182e+02, 3.76195822e+02,
       3.76422499e+02, 3.76608012e+02, 3.77176582e+02, 3.77148088e+02,
       4.48211843e+03, 3.75397725e+02, 3.07207054e+02, 3.75996630e+02,
       3.76470133e+02, 3.77184707e+02]), 'rank_test_score': array([ 1,  6,  8,  4,  2,  5, 50,  7, 48, 49,  3, 10, 11,  9, 12, 13, 14,
       15, 16, 17, 18, 19, 42, 44, 45, 34, 33, 20, 37, 36, 46, 35, 38, 40,
       41, 43, 22, 26, 28, 30, 29, 32, 24, 23, 47, 21, 39, 27, 31, 25],
      dtype=int32)}
-5.20398612095557
OrderedDict([('C', 10.45782757963395), ('degree', 5), ('epsilon', 0.6475756282370874), ('kernel', 'rbf'), ('shrinking', True)])
[CV 3/3] END C=17.600716604375094, degree=6, epsilon=0.25732399218895774, kernel=poly, shrinking=False;, score=-1330532.819 total time=   2.8s
[CV 1/3] END C=1.0, degree=2, epsilon=0.08902680854475871, kernel=poly, shrinking=True;, score=-1782.817 total time=   4.6s
[CV 3/3] END C=9.002455811715649, degree=3, epsilon=0.36413082561996557, kernel=poly, shrinking=True;, score=-6278.045 total time=   4.2s
[CV 3/3] END C=1.0, degree=2, epsilon=0.08920698038553582, kernel=poly, shrinking=True;, score=-1049.358 total time=   4.4s
[CV 2/3] END C=9.002455811715649, degree=3, epsilon=0.36413082561996557, kernel=poly, shrinking=True;, score=-636.411 total time=   3.0s
[CV 2/3] END C=1.0, degree=2, epsilon=0.08920698038553582, kernel=poly, shrinking=True;, score=-1283.990 total time=   4.5s
[CV 2/3] END C=19.705402855703003, degree=4, epsilon=0.6768655521034987, kernel=poly, shrinking=True;, score=-363224.044 total time=   2.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.09164539687889132, kernel=poly, shrinking=True;, score=-1303.851 total time=   4.6s
[CV 1/3] END C=15.824012778929113, degree=4, epsilon=0.10455684079106593, kernel=rbf, shrinking=True;, score=-14.111 total time=   7.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.08920698038553582, kernel=poly, shrinking=True;, score=-1782.815 total time=   4.7s
[CV 3/3] END C=19.705402855703003, degree=4, epsilon=0.6768655521034987, kernel=poly, shrinking=True;, score=-60862.596 total time=   4.4s
[CV 3/3] END C=1.0, degree=2, epsilon=0.09164539687889132, kernel=poly, shrinking=True;, score=-1049.037 total time=   4.7s
[CV 1/3] END C=9.002455811715649, degree=3, epsilon=0.36413082561996557, kernel=poly, shrinking=True;, score=-20998.200 total time=   4.4s
[CV 1/3] END C=1.0, degree=2, epsilon=0.09164539687889132, kernel=poly, shrinking=True;, score=-1782.025 total time=   4.7s
[CV 2/3] END C=14.744082489346955, degree=4, epsilon=0.43596151839088376, kernel=rbf, shrinking=False;, score=-8.336 total time=   7.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.09297930690980753, kernel=poly, shrinking=True;, score=-1048.663 total time=   4.5s
[CV 3/3] END C=14.744082489346955, degree=4, epsilon=0.43596151839088376, kernel=rbf, shrinking=False;, score=-6.789 total time=   7.2s
[CV 2/3] END C=1.0, degree=2, epsilon=0.09297930690980753, kernel=poly, shrinking=True;, score=-1285.313 total time=   4.5s
[CV 1/3] END C=19.705402855703003, degree=4, epsilon=0.6768655521034987, kernel=poly, shrinking=True;, score=-800705.111 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.09297930690980753, kernel=poly, shrinking=True;, score=-1782.086 total time=   4.7s
[CV 2/3] END C=1.0, degree=2, epsilon=0.008827917785139219, kernel=poly, shrinking=True;, score=-1292.402 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.09597545542892102, kernel=poly, shrinking=True;, score=-1048.474 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.008827917785139219, kernel=poly, shrinking=True;, score=-811.832 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.09597545542892102, kernel=poly, shrinking=True;, score=-1284.685 total time=   4.5s
[CV 1/3] END C=14.744082489346955, degree=4, epsilon=0.43596151839088376, kernel=rbf, shrinking=False;, score=-4.316 total time=   7.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.09597545542892102, kernel=poly, shrinking=True;, score=-1784.328 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.00918419602969018, kernel=poly, shrinking=True;, score=-811.792 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.09899790427586619, kernel=poly, shrinking=True;, score=-1048.595 total time=   4.4s
[CV 1/3] END C=1.0, degree=2, epsilon=0.00918419602969018, kernel=poly, shrinking=True;, score=-1407.839 total time=   4.4s
[CV 2/3] END C=1.0, degree=2, epsilon=0.09899790427586619, kernel=poly, shrinking=True;, score=-1288.717 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.017761689065354247, kernel=poly, shrinking=True;, score=-1407.289 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.10156806203217589, kernel=poly, shrinking=True;, score=-1049.216 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.008827917785139219, kernel=poly, shrinking=True;, score=-1406.881 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.09899790427586619, kernel=poly, shrinking=True;, score=-1787.912 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.017761689065354247, kernel=poly, shrinking=True;, score=-811.102 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.10156806203217589, kernel=poly, shrinking=True;, score=-1289.283 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.00918419602969018, kernel=poly, shrinking=True;, score=-1292.256 total time=   4.8s
[CV 1/3] END C=1.0, degree=2, epsilon=0.10156806203217589, kernel=poly, shrinking=True;, score=-1786.752 total time=   4.8s
[CV 2/3] END C=1.0, degree=2, epsilon=0.017761689065354247, kernel=poly, shrinking=True;, score=-1286.455 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.10377589616371315, kernel=poly, shrinking=True;, score=-1787.790 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.025625746748138972, kernel=poly, shrinking=True;, score=-811.358 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.10377589616371315, kernel=poly, shrinking=True;, score=-1290.629 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.025625746748138972, kernel=poly, shrinking=True;, score=-1287.547 total time=   4.7s
[CV 3/3] END C=1.0, degree=2, epsilon=0.10377589616371315, kernel=poly, shrinking=True;, score=-1049.151 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.03257753740334291, kernel=poly, shrinking=True;, score=-1288.547 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.10539461056782952, kernel=poly, shrinking=True;, score=-868.352 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.03257753740334291, kernel=poly, shrinking=True;, score=-815.191 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.10539461056782952, kernel=poly, shrinking=True;, score=-1291.337 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.025625746748138972, kernel=poly, shrinking=True;, score=-1417.236 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.10539461056782952, kernel=poly, shrinking=True;, score=-1787.862 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.03871209453887539, kernel=poly, shrinking=True;, score=-1035.245 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.10741248306801178, kernel=poly, shrinking=True;, score=-1292.843 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.03871209453887539, kernel=poly, shrinking=True;, score=-1288.853 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.10741248306801178, kernel=poly, shrinking=True;, score=-868.490 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.03257753740334291, kernel=poly, shrinking=True;, score=-1416.510 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.10741248306801178, kernel=poly, shrinking=True;, score=-1788.978 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.044130087702751, kernel=poly, shrinking=True;, score=-1293.914 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.10948004918882831, kernel=poly, shrinking=True;, score=-1293.209 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.03871209453887539, kernel=poly, shrinking=True;, score=-1417.010 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.10948004918882831, kernel=poly, shrinking=True;, score=-1789.291 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.044130087702751, kernel=poly, shrinking=True;, score=-1034.832 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.10948004918882831, kernel=poly, shrinking=True;, score=-869.533 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.049002663096656816, kernel=poly, shrinking=True;, score=-1036.804 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11175237829107819, kernel=poly, shrinking=True;, score=-1295.173 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.049002663096656816, kernel=poly, shrinking=True;, score=-1292.787 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11175237829107819, kernel=poly, shrinking=True;, score=-868.637 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.044130087702751, kernel=poly, shrinking=True;, score=-1426.314 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11175237829107819, kernel=poly, shrinking=True;, score=-1789.298 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.05336362250560727, kernel=poly, shrinking=True;, score=-1426.326 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11334619720082166, kernel=poly, shrinking=True;, score=-1294.591 total time=   4.6s
[CV 2/3] END C=1.0, degree=2, epsilon=0.05336362250560727, kernel=poly, shrinking=True;, score=-1294.954 total time=   4.7s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11334619720082166, kernel=poly, shrinking=True;, score=-868.663 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.049002663096656816, kernel=poly, shrinking=True;, score=-1425.832 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11334619720082166, kernel=poly, shrinking=True;, score=-1789.838 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.05798116684212995, kernel=poly, shrinking=True;, score=-1427.351 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11463415250181155, kernel=poly, shrinking=True;, score=-869.045 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.05798116684212995, kernel=poly, shrinking=True;, score=-1042.835 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11463415250181155, kernel=poly, shrinking=True;, score=-1295.142 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.05336362250560727, kernel=poly, shrinking=True;, score=-1036.308 total time=   4.8s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11463415250181155, kernel=poly, shrinking=True;, score=-1790.671 total time=   4.6s
[CV 3/3] END C=10.45782757963395, degree=5, epsilon=0.6475756282370874, kernel=rbf, shrinking=True;, score=-5.474 total time=   7.2s
[CV 2/3] END C=1.0, degree=2, epsilon=0.0626934796555824, kernel=poly, shrinking=True;, score=-1298.904 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11707069285991488, kernel=poly, shrinking=True;, score=-867.969 total time=   4.4s
[CV 1/3] END C=10.45782757963395, degree=5, epsilon=0.6475756282370874, kernel=rbf, shrinking=True;, score=-6.217 total time=   7.3s
[CV 3/3] END C=1.0, degree=2, epsilon=0.0626934796555824, kernel=poly, shrinking=True;, score=-1043.257 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11707069285991488, kernel=poly, shrinking=True;, score=-1290.132 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.05798116684212995, kernel=poly, shrinking=True;, score=-1295.845 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11707069285991488, kernel=poly, shrinking=True;, score=-1790.748 total time=   4.6s
[CV 1/3] END C=14.59703419096062, degree=3, epsilon=0.3025479335225678, kernel=rbf, shrinking=False;, score=-12.887 total time=   7.4s
[CV 3/3] END C=1.0, degree=2, epsilon=0.06679135240405941, kernel=poly, shrinking=True;, score=-1042.762 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11824290844876782, kernel=poly, shrinking=True;, score=-1290.179 total time=   4.5s
[CV 2/3] END C=10.45782757963395, degree=5, epsilon=0.6475756282370874, kernel=rbf, shrinking=True;, score=-3.921 total time=   7.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.06679135240405941, kernel=poly, shrinking=True;, score=-1782.964 total time=   4.7s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11824290844876782, kernel=poly, shrinking=True;, score=-867.674 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.0626934796555824, kernel=poly, shrinking=True;, score=-1429.523 total time=   4.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11824290844876782, kernel=poly, shrinking=True;, score=-1790.404 total time=   4.5s
[CV 1/3] END C=6.951772452037259, degree=6, epsilon=0.1098719157417569, kernel=sigmoid, shrinking=True;, score=-96.865 total time=   6.7s
[CV 3/3] END C=1.0, degree=2, epsilon=0.07085964712542434, kernel=poly, shrinking=True;, score=-1043.351 total time=   4.4s
[CV 2/3] END C=1.0, degree=3, epsilon=0.14880202988353158, kernel=poly, shrinking=True;, score=-1068.066 total time=   3.7s
[CV 2/3] END C=14.59703419096062, degree=3, epsilon=0.3025479335225678, kernel=rbf, shrinking=False;, score=-13.039 total time=   7.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.07085964712542434, kernel=poly, shrinking=True;, score=-1785.346 total time=   4.5s
[CV 3/3] END C=1.0, degree=3, epsilon=0.14880202988353158, kernel=poly, shrinking=True;, score=-8223.860 total time=   4.4s
[CV 3/3] END C=14.59703419096062, degree=3, epsilon=0.3025479335225678, kernel=rbf, shrinking=False;, score=-9.945 total time=   7.4s
[CV 2/3] END C=1.0, degree=2, epsilon=0.06679135240405941, kernel=poly, shrinking=True;, score=-1300.689 total time=   4.7s
[CV 1/3] END C=1.0, degree=3, epsilon=0.14880202988353158, kernel=poly, shrinking=True;, score=-11856.940 total time=   4.5s
[CV 3/3] END C=6.951772452037259, degree=6, epsilon=0.1098719157417569, kernel=sigmoid, shrinking=True;, score=-138.314 total time=   6.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.07085964712542434, kernel=poly, shrinking=True;, score=-1301.217 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.1044478899710214, kernel=poly, shrinking=True;, score=-1786.999 total time=   4.5s
[CV 3/3] END C=16.521328726040117, degree=4, epsilon=0.6437505570839912, kernel=rbf, shrinking=False;, score=-11.303 total time=   7.3s
[CV 2/3] END C=1.0, degree=2, epsilon=0.07438533256988904, kernel=poly, shrinking=True;, score=-1303.499 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.1044478899710214, kernel=poly, shrinking=True;, score=-868.440 total time=   4.6s
[CV 1/3] END C=16.521328726040117, degree=4, epsilon=0.6437505570839912, kernel=rbf, shrinking=False;, score=-7.400 total time=   7.3s
[CV 3/3] END C=1.0, degree=2, epsilon=0.07438533256988904, kernel=poly, shrinking=True;, score=-1044.550 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.1044478899710214, kernel=poly, shrinking=True;, score=-1291.078 total time=   4.7s
[CV 2/3] END C=16.521328726040117, degree=4, epsilon=0.6437505570839912, kernel=rbf, shrinking=False;, score=-3.875 total time=   7.5s
[CV 1/3] END C=1.0, degree=2, epsilon=0.07793307299872264, kernel=poly, shrinking=True;, score=-1786.816 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.08884725185719403, kernel=poly, shrinking=True;, score=-1283.990 total time=   4.6s
[CV 3/3] END C=10.120203741058692, degree=2, epsilon=0.44829316593367363, kernel=rbf, shrinking=True;, score=-9.931 total time=   7.3s
[CV 2/3] END C=1.0, degree=2, epsilon=0.07793307299872264, kernel=poly, shrinking=True;, score=-1302.974 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.08884725185719403, kernel=poly, shrinking=True;, score=-1049.708 total time=   4.7s
[CV 2/3] END C=6.951772452037259, degree=6, epsilon=0.1098719157417569, kernel=sigmoid, shrinking=True;, score=-289.495 total time=   6.8s
[CV 1/3] END C=1.0, degree=2, epsilon=0.07438533256988904, kernel=poly, shrinking=True;, score=-1784.353 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.08884725185719403, kernel=poly, shrinking=True;, score=-1786.144 total time=   4.8s
[CV 1/3] END C=4.870879560942059, degree=3, epsilon=0.5679819169676502, kernel=rbf, shrinking=True;, score=-7.235 total time=   7.2s
[CV 2/3] END C=1.0, degree=2, epsilon=0.08125376727649487, kernel=poly, shrinking=True;, score=-1303.745 total time=   4.4s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11035053637980875, kernel=poly, shrinking=True;, score=-1293.524 total time=   4.5s
[CV 1/3] END C=10.120203741058692, degree=2, epsilon=0.44829316593367363, kernel=rbf, shrinking=True;, score=-3.607 total time=   7.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.08125376727649487, kernel=poly, shrinking=True;, score=-1784.559 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11035053637980875, kernel=poly, shrinking=True;, score=-869.139 total time=   4.5s
[CV 2/3] END C=10.120203741058692, degree=2, epsilon=0.44829316593367363, kernel=rbf, shrinking=True;, score=-2.606 total time=   7.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.07793307299872264, kernel=poly, shrinking=True;, score=-869.321 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11035053637980875, kernel=poly, shrinking=True;, score=-1789.219 total time=   4.9s
[CV 1/3] END C=17.600716604375094, degree=6, epsilon=0.25732399218895774, kernel=poly, shrinking=False;, score=-55301623.262 total time=   2.4s
[CV 3/3] END C=1.0, degree=2, epsilon=0.08386034029518995, kernel=poly, shrinking=True;, score=-869.237 total time=   4.4s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11450088063177859, kernel=poly, shrinking=True;, score=-1295.142 total time=   4.5s
[CV 3/3] END C=4.870879560942059, degree=3, epsilon=0.5679819169676502, kernel=rbf, shrinking=True;, score=-9.233 total time=   7.3s
[CV 3/3] END C=1.0, degree=2, epsilon=0.08125376727649487, kernel=poly, shrinking=True;, score=-868.770 total time=   4.7s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11450088063177859, kernel=poly, shrinking=True;, score=-1790.090 total time=   4.7s
[CV 2/3] END C=17.600716604375094, degree=6, epsilon=0.25732399218895774, kernel=poly, shrinking=False;, score=-260566132.331 total time=   2.0s
[CV 2/3] END C=1.0, degree=2, epsilon=0.08386034029518995, kernel=poly, shrinking=True;, score=-1283.163 total time=   4.6s
[CV 1/3] END C=1.0, degree=2, epsilon=0.11667960841753945, kernel=poly, shrinking=True;, score=-1790.501 total time=   4.5s
[CV 2/3] END C=4.870879560942059, degree=3, epsilon=0.5679819169676502, kernel=rbf, shrinking=True;, score=-6.394 total time=   7.4s
[CV 1/3] END C=1.0, degree=2, epsilon=0.08386034029518995, kernel=poly, shrinking=True;, score=-1785.594 total time=   4.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11450088063177859, kernel=poly, shrinking=True;, score=-868.781 total time=   4.4s
[CV 2/3] END C=15.824012778929113, degree=4, epsilon=0.10455684079106593, kernel=rbf, shrinking=True;, score=-11.542 total time=   7.5s
[CV 3/3] END C=1.0, degree=2, epsilon=0.08902680854475871, kernel=poly, shrinking=True;, score=-1049.735 total time=   4.5s
[CV 2/3] END C=1.0, degree=2, epsilon=0.11667960841753945, kernel=poly, shrinking=True;, score=-1291.952 total time=   4.5s
[CV 3/3] END C=15.824012778929113, degree=4, epsilon=0.10455684079106593, kernel=rbf, shrinking=True;, score=-15.849 total time=   7.3s
[CV 2/3] END C=1.0, degree=2, epsilon=0.08902680854475871, kernel=poly, shrinking=True;, score=-1283.990 total time=   4.6s
[CV 3/3] END C=1.0, degree=2, epsilon=0.11667960841753945, kernel=poly, shrinking=True;, score=-867.584 total time=   4.6s
