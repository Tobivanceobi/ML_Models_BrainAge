no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Process ID:  1
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=685, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-27.052 total time=  11.9s
[CV 2/3] END C=685, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-28.392 total time=  11.6s
[CV 3/3] END C=685, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-25.842 total time=  11.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=728, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-27.065 total time=  13.9s
[CV 2/3] END C=728, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-30.117 total time=  14.1s
[CV 3/3] END C=728, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-25.872 total time=  14.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=367, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-27.367 total time=  12.3s
[CV 2/3] END C=367, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-28.338 total time=  12.1s
[CV 3/3] END C=367, fit_intercept=True, max_iter=500, penalty=l2, solver=lbfgs, tol=0.005;, score=-25.719 total time=  11.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=773, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.299 total time= 1.5min
[CV 2/3] END C=773, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.485 total time= 1.6min
[CV 3/3] END C=773, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.910 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=624, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-25.875 total time=  52.3s
[CV 2/3] END C=624, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-27.313 total time=  53.3s
[CV 3/3] END C=624, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-25.978 total time=  51.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=736, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-25.832 total time=  52.0s
[CV 2/3] END C=736, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-27.395 total time=  52.3s
[CV 3/3] END C=736, fit_intercept=True, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.232 total time=  49.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=622, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-27.429 total time=  14.4s
[CV 2/3] END C=622, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-29.962 total time=  13.7s
[CV 3/3] END C=622, fit_intercept=True, max_iter=500, penalty=l2, solver=liblinear, tol=0.005;, score=-25.724 total time=  14.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=206, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-25.747 total time=  51.7s
[CV 2/3] END C=206, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-27.202 total time=  51.9s
[CV 3/3] END C=206, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.216 total time=  49.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=780, fit_intercept=False, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-27.128 total time=  11.2s
[CV 2/3] END C=780, fit_intercept=False, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-28.371 total time=  12.0s
[CV 3/3] END C=780, fit_intercept=False, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-25.279 total time=  10.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=294, fit_intercept=True, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-27.147 total time=  12.6s
[CV 2/3] END C=294, fit_intercept=True, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-28.512 total time=  13.1s
[CV 3/3] END C=294, fit_intercept=True, max_iter=500, penalty=l2, solver=newton-cg, tol=0.005;, score=-25.533 total time=  19.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.337 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.199 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.699 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.410 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.450 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.735 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=998, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.198 total time= 1.5min
[CV 2/3] END C=998, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.529 total time= 1.6min
[CV 3/3] END C=998, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.956 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.315 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.343 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.795 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.280 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.302 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.672 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.280 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.420 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.754 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.337 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.305 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.883 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.342 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.292 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.915 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.258 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.305 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.828 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.321 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.460 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.730 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.212 total time= 1.5min
[CV 2/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.267 total time= 1.5min
[CV 3/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.087 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=3, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.674 total time= 1.4min
[CV 2/3] END C=3, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.747 total time= 1.4min
[CV 3/3] END C=3, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.891 total time= 1.2min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.340 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.180 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.694 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=2, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.954 total time= 1.3min
[CV 2/3] END C=2, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.134 total time= 1.4min
[CV 3/3] END C=2, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.858 total time= 1.1min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1000, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.470 total time= 1.5min
[CV 2/3] END C=1000, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.564 total time= 1.6min
[CV 3/3] END C=1000, fit_intercept=True, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.025 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.823 total time= 1.3min
[CV 2/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.935 total time= 1.3min
[CV 3/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.795 total time= 1.1min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=4, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.720 total time= 1.4min
[CV 2/3] END C=4, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.016 total time= 1.4min
[CV 3/3] END C=4, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.672 total time= 1.2min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.318 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.417 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.754 total time=  59.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.562 total time=  42.1s
[CV 2/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.411 total time=  44.0s
[CV 3/3] END C=2, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.027 total time=  40.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.130 total time= 1.5min
[CV 2/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.330 total time= 1.6min
[CV 3/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.101 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-25.970 total time=  52.6s
[CV 2/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-27.346 total time=  51.9s
[CV 3/3] END C=999, fit_intercept=False, max_iter=500, penalty=l2, solver=sag, tol=0.005;, score=-26.117 total time=  49.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.228 total time= 1.5min
[CV 2/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-26.556 total time= 1.5min
[CV 3/3] END C=1000, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.883 total time= 1.4min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.323 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.232 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.694 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.361 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.335 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.757 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.424 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.240 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.902 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.226 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.398 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.798 total time=  59.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.386 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.243 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.773 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.334 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.286 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.831 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.304 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.147 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.814 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.312 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.335 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.732 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.215 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.436 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.691 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.152 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.371 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.732 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.261 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.305 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.790 total time=  59.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.378 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.207 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.836 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.302 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.357 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.705 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.307 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.262 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.716 total time=  59.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.283 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.131 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.822 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.201 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.578 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.907 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.212 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.343 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.738 total time= 1.0min
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.465 total time= 1.2min
[CV 2/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-27.417 total time= 1.2min
[CV 3/3] END C=1, fit_intercept=False, max_iter=500, penalty=l2, solver=saga, tol=0.005;, score=-25.724 total time= 1.0min
{'mean_fit_time': array([11.47168787, 14.00788863, 11.87603839, 87.33734608, 52.38781039,
       51.36198115, 14.15470664, 51.13654844, 11.18787646, 14.90864309,
       67.40664657, 67.394526  , 88.24745202, 67.28099211, 66.66471561,
       67.03211053, 67.32423369, 66.66198874, 67.12888757, 67.87377739,
       87.69870241, 79.72566199, 67.17271876, 76.05136283, 88.27960579,
       75.36142961, 81.23490914, 66.64204009, 42.04316346, 87.89221795,
       51.38721609, 88.18802238, 67.18017626, 67.06511839, 67.56241775,
       66.63159275, 67.03073422, 67.40599744, 67.36502941, 67.40950052,
       66.62096922, 66.97712191, 66.81348618, 67.37801862, 67.31965407,
       66.81874371, 66.91521446, 66.81353203, 67.16952205, 67.16021562]), 'std_fit_time': array([0.36905656, 0.08500572, 0.40938259, 4.67162638, 0.72323809,
       1.08215116, 0.31676461, 0.96218233, 0.62494703, 2.92464162,
       5.05385958, 5.00500615, 4.83913735, 4.84048257, 4.67503195,
       4.92995249, 5.08455391, 4.61193882, 4.93439425, 4.08079764,
       4.55163832, 4.11282164, 4.96233001, 5.41918281, 4.02754847,
       4.68015001, 4.81101444, 5.04701095, 1.60730589, 4.28726487,
       1.28767929, 4.74957344, 5.02641145, 4.51345978, 4.93761006,
       5.39530546, 4.47372539, 5.12612978, 5.18536091, 5.17570149,
       4.62762012, 4.48139771, 5.20637394, 5.13282355, 4.77806747,
       5.1144162 , 4.61782324, 4.71255474, 4.62206721, 5.02021041]), 'mean_score_time': array([0.00584857, 0.00512966, 0.00388575, 0.00650605, 0.00983485,
       0.00606092, 0.00343299, 0.00512369, 0.01781774, 0.01015004,
       0.00919286, 0.00943247, 0.00670656, 0.00525228, 0.00539239,
       0.00885296, 0.00601617, 0.00636983, 0.00830642, 0.00666038,
       0.00548156, 0.00657431, 0.0059913 , 0.00828234, 0.00601411,
       0.00837628, 0.00775027, 0.01867255, 0.00655301, 0.00773247,
       0.00748881, 0.00714612, 0.00684166, 0.00882387, 0.01051664,
       0.00763488, 0.01202321, 0.00680351, 0.00653664, 0.00951052,
       0.01008097, 0.01152682, 0.0150435 , 0.01557334, 0.01165271,
       0.00879947, 0.01550396, 0.0120221 , 0.01251364, 0.00882641]), 'std_score_time': array([3.10628393e-03, 3.96625356e-04, 4.54256786e-04, 3.05386953e-04,
       3.10716157e-03, 1.38029758e-03, 7.58158586e-05, 5.40227542e-04,
       1.13871508e-02, 3.92500102e-03, 2.81403653e-03, 5.35443543e-03,
       1.47577090e-03, 3.67027848e-04, 9.01462578e-05, 4.31623172e-03,
       1.47948709e-03, 3.08690286e-04, 2.03545581e-03, 5.49381537e-04,
       3.21468788e-04, 5.52595647e-04, 8.31233587e-04, 2.80080407e-03,
       1.09948662e-03, 1.27086173e-03, 1.48446539e-03, 1.72080024e-02,
       6.14163370e-04, 1.50475239e-03, 2.74723899e-03, 1.09158495e-03,
       4.32123573e-04, 2.76925146e-03, 4.05567925e-03, 1.06941725e-03,
       7.05835402e-03, 8.10611412e-04, 1.14474491e-03, 7.02658425e-03,
       2.49363454e-03, 5.05562596e-03, 7.40648837e-03, 1.16268290e-02,
       4.47626707e-03, 9.52871090e-04, 7.30976619e-03, 6.53773382e-03,
       2.53031825e-03, 3.80537663e-03]), 'param_C': masked_array(data=[685, 728, 367, 773, 624, 736, 622, 206, 780, 294, 1, 1,
                   998, 1, 1, 1, 1, 1, 1, 1, 1000, 3, 1, 2, 1000, 2, 4, 1,
                   2, 999, 999, 1000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, False, True, True, True, False,
                   False, True, True, True, True, False, False, False,
                   True, False, True, False, False, True, True, True,
                   True, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
                   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
                   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
                   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
                   500, 500, 500, 500, 500, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'liblinear', 'lbfgs', 'saga', 'sag', 'sag',
                   'liblinear', 'sag', 'newton-cg', 'newton-cg', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'sag', 'saga', 'sag', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005,
                   0.005, 0.005],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('C', 685), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'lbfgs'), ('tol', 0.005)]), OrderedDict([('C', 728), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'liblinear'), ('tol', 0.005)]), OrderedDict([('C', 367), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'lbfgs'), ('tol', 0.005)]), OrderedDict([('C', 773), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 624), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.005)]), OrderedDict([('C', 736), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.005)]), OrderedDict([('C', 622), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'liblinear'), ('tol', 0.005)]), OrderedDict([('C', 206), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.005)]), OrderedDict([('C', 780), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'newton-cg'), ('tol', 0.005)]), OrderedDict([('C', 294), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'newton-cg'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 998), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1000), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 3), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 2), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1000), ('fit_intercept', True), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 2), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 4), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 2), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.005)]), OrderedDict([('C', 999), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 999), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'sag'), ('tol', 0.005)]), OrderedDict([('C', 1000), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)]), OrderedDict([('C', 1), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)])], 'split0_test_score': array([-27.05163043, -27.06521739, -27.36684783, -26.29891304,
       -25.875     , -25.83152174, -27.42934783, -25.74728261,
       -27.12771739, -27.14673913, -25.33695652, -25.41032609,
       -26.19836957, -25.31521739, -25.2798913 , -25.2798913 ,
       -25.33695652, -25.3423913 , -25.25815217, -25.32065217,
       -26.21195652, -25.67391304, -25.33967391, -25.95380435,
       -26.4701087 , -25.82336957, -25.7201087 , -25.31793478,
       -26.5625    , -26.13043478, -25.9701087 , -26.22826087,
       -25.32336957, -25.36141304, -25.42391304, -25.22554348,
       -25.38586957, -25.33423913, -25.30434783, -25.3125    ,
       -25.21467391, -25.15217391, -25.26086957, -25.37771739,
       -25.30163043, -25.30706522, -25.2826087 , -25.20108696,
       -25.21195652, -25.46467391]), 'split1_test_score': array([-28.39237057, -30.11716621, -28.33787466, -26.48501362,
       -27.3133515 , -27.39509537, -29.96185286, -27.20163488,
       -28.37057221, -28.51226158, -27.19891008, -27.44959128,
       -26.52861035, -27.34332425, -27.30245232, -27.41961853,
       -27.30517711, -27.29155313, -27.30517711, -27.46049046,
       -26.26702997, -26.74659401, -27.17983651, -27.13351499,
       -26.5640327 , -26.9346049 , -26.01634877, -27.41689373,
       -26.41144414, -26.32970027, -27.34604905, -26.55585831,
       -27.23160763, -27.33514986, -27.23978202, -27.39782016,
       -27.24250681, -27.28610354, -27.14713896, -27.33514986,
       -27.4359673 , -27.37057221, -27.30517711, -27.20708447,
       -27.35694823, -27.26158038, -27.13079019, -27.57765668,
       -27.34332425, -27.41689373]), 'split2_test_score': array([-25.84153005, -25.8715847 , -25.71857923, -25.90983607,
       -25.97814208, -26.23224044, -25.72404372, -26.21584699,
       -25.27868852, -25.53278689, -25.69945355, -25.73497268,
       -25.95628415, -25.79508197, -25.67213115, -25.75409836,
       -25.88251366, -25.91530055, -25.82786885, -25.7295082 ,
       -26.08743169, -25.89071038, -25.69398907, -25.8579235 ,
       -26.02459016, -25.79508197, -25.67213115, -25.75409836,
       -26.0273224 , -26.1010929 , -26.11748634, -25.88251366,
       -25.69398907, -25.7568306 , -25.90163934, -25.79781421,
       -25.77322404, -25.83060109, -25.81420765, -25.73224044,
       -25.69125683, -25.73224044, -25.78961749, -25.83606557,
       -25.70491803, -25.71584699, -25.82240437, -25.90710383,
       -25.73770492, -25.72404372]), 'mean_test_score': array([-27.09517702, -27.6846561 , -27.14110057, -26.23125424,
       -26.38883119, -26.48628585, -27.70508147, -26.38825483,
       -26.92565937, -27.0639292 , -26.07844005, -26.19829668,
       -26.22775469, -26.15120787, -26.08482492, -26.15120273,
       -26.17488243, -26.18308166, -26.13039938, -26.17021694,
       -26.18880606, -26.10373914, -26.0711665 , -26.31508094,
       -26.35291052, -26.18435215, -25.80286287, -26.16297563,
       -26.33375552, -26.18707598, -26.47788136, -26.22221095,
       -26.08298876, -26.15113117, -26.1884448 , -26.14039262,
       -26.13386681, -26.15031459, -26.08856481, -26.1266301 ,
       -26.11396602, -26.08499552, -26.11855472, -26.14028914,
       -26.12116557, -26.09483086, -26.07860109, -26.22861582,
       -26.0976619 , -26.20187045]), 'std_test_score': array([1.04183142, 1.78773951, 1.08117174, 0.23963944, 0.65508927,
       0.66312137, 1.74103003, 0.60612346, 1.27031669, 1.21777406,
       0.80599456, 0.89467032, 0.23457328, 0.86541844, 0.87575696,
       0.91756092, 0.82969179, 0.81796007, 0.86263987, 0.92750386,
       0.07512586, 0.46310334, 0.79718116, 0.58004252, 0.23530281,
       0.53063449, 0.15222272, 0.90435709, 0.22528561, 0.10155951,
       0.61682866, 0.27492509, 0.82616935, 0.85264841, 0.76856492,
       0.91931731, 0.79971781, 0.82829391, 0.77692715, 0.87156393,
       0.95482926, 0.93937918, 0.86639026, 0.77720009, 0.88920538,
       0.84172599, 0.77596017, 0.99651004, 0.90659027, 0.86565172]), 'rank_test_score': array([47, 49, 48, 37, 42, 44, 50, 41, 45, 46,  3, 32, 35, 23,  6, 22, 26,
       27, 16, 25, 31, 11,  2, 38, 40, 28,  1, 24, 39, 29, 43, 34,  5, 21,
       30, 19, 17, 20,  8, 15, 12,  7, 13, 18, 14,  9,  4, 36, 10, 33],
      dtype=int32)}
-25.80286287234504
OrderedDict([('C', 4), ('fit_intercept', False), ('max_iter', 500), ('penalty', 'l2'), ('solver', 'saga'), ('tol', 0.005)])
