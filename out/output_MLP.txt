no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
[1568, 656]
adam
0.07693171566827633
relu
0.010724372498101578
[1568, 656]
adam
0.07693171566827633
relu
0.010724372498101578
[648]
adam
0.01345422212245513
tanh
0.018381248804279812
[345]
adam
0.026580084799090506
relu
0.011215333016869916
[648]
adam
0.01345422212245513
tanh
0.018381248804279812
[345]
adam
0.026580084799090506
relu
0.011215333016869916
[869]
adam
0.04635086431068693
relu
0.042194505128550885
[345]
adam
0.026580084799090506
relu
0.011215333016869916
[648]
adam
0.01345422212245513
tanh
0.018381248804279812
[924]
adam
0.03735106231708483
tanh
0.018126239481411927
[1034, 467]
adam
0.043009346875718384
tanh
0.023168023459297898
[924]
adam
0.03735106231708483
tanh
0.018126239481411927
[1034, 467]
adam
0.043009346875718384
tanh
0.023168023459297898
[924]
adam
0.03735106231708483
tanh
0.018126239481411927
[300]
adam
0.03338858594701365
relu
0.002627521609339031
[300]
adam
0.03338858594701365
relu
0.002627521609339031
[300]
adam
0.03338858594701365
relu
0.002627521609339031
[300]
adam
0.0001
relu
0.0001
[300]
adam
0.0001
relu
0.0001
[300]
adam
0.0001
relu
0.0001
[300]
adam
0.0001
relu
0.010687073401050306
[300]
adam
0.0001
relu
0.010687073401050306
[300]
adam
0.0001
relu
0.010687073401050306
[448]
adam
0.02096340689184766
relu
0.009774744962921808
[448]
adam
0.02096340689184766
relu
0.009774744962921808
[448]
adam
0.02096340689184766
relu
0.009774744962921808
[869]
adam
0.04635086431068693
relu
0.042194505128550885
[412]
adam
0.06319754748177622
tanh
0.004787836133117108
[2000, 300]
adam
0.009746717218745432
relu
0.011124011591236044
[1034, 467]
adam
0.043009346875718384
tanh
0.023168023459297898
[1771, 824]
adam
0.0032342896101625255
relu
0.03816186599703867
[300]
adam
0.0001
relu
0.0001
[1784, 448]
adam
0.03861720815062543
tanh
0.01249622691412318
[1771, 824]
adam
0.0032342896101625255
relu
0.03816186599703867
[300]
adam
0.0001
relu
0.0001
[1784, 448]
adam
0.03861720815062543
tanh
0.01249622691412318
[1771, 824]
adam
0.0032342896101625255
relu
0.03816186599703867
[300]
adam
0.0001
relu
0.0001
[1784, 448]
adam
0.03861720815062543
tanh
0.01249622691412318
[836]
adam
0.0913209284578167
tanh
0.03594691395604942
[300]
adam
0.0001
relu
0.012370575261210697
[836]
adam
0.0913209284578167
tanh
0.03594691395604942
[300]
adam
0.0001
relu
0.012370575261210697
[836]
adam
0.0913209284578167
tanh
0.03594691395604942
[300]
adam
0.0001
relu
0.012370575261210697
[1568, 656]
adam
0.07693171566827633
relu
0.010724372498101578
[412]
adam
0.06319754748177622
tanh
0.004787836133117108
[2000, 300]
adam
0.009746717218745432
relu
0.011124011591236044
[2000, 493]
adam
0.0001
relu
0.05
[470]
adam
0.030427651742038122
relu
0.0001
[2000, 300]
adam
0.0001
relu
0.05
[1263, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
tanh
0.012985533092937047
[470]
adam
0.030427651742038122
relu
0.0001
[2000, 300]
adam
0.0001
relu
0.05
[1263, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
tanh
0.012985533092937047
[470]
adam
0.030427651742038122
relu
0.0001
[2000, 300]
adam
0.0001
relu
0.05
[1263, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
tanh
0.012985533092937047
[2000, 493]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.1
relu
0.05
[1000, 1000]
adam
0.02356411315248434
tanh
0.02064261226146209
[1000]
adam
0.07760158161750011
tanh
0.04288095036028819
[1000]
adam
0.07760158161750011
tanh
0.04288095036028819
[1000]
adam
0.0001
relu
0.028942635363847353
[1000]
adam
0.0001
relu
0.028942635363847353
[1000]
adam
0.0001
relu
0.028942635363847353
[869]
adam
0.04635086431068693
relu
0.042194505128550885
[412]
adam
0.06319754748177622
tanh
0.004787836133117108
[2000, 300]
adam
0.009746717218745432
relu
0.011124011591236044
[2000, 493]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.1
relu
0.05
[1000, 1000]
adam
0.02356411315248434
tanh
0.02064261226146209
[2000, 1000]
adam
0.0001
relu
0.05
[1000]
adam
0.07760158161750011
tanh
0.04288095036028819
[2000, 1000]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.1
relu
0.05
[1000, 1000]
adam
0.02356411315248434
tanh
0.02064261226146209
[2000, 1000]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.023795710619051915
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.023795710619051915
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1000]
adam
0.023795710619051915
relu
0.05
[2000, 300]
adam
0.0001
tanh
0.05
[2000, 300]
adam
0.0001
tanh
0.05
[2000, 300]
adam
0.0001
relu
0.05
{'mean_fit_time': array([ 66.05519493,  21.3841482 ,  13.30412904,  30.13427647,
        89.59170349,   7.99310486,  13.61308583,  22.72542175,
        63.14560866,  31.05397137,   8.11870837,  12.36902881,
        34.00477163,  32.87314884,  16.69025413,  48.11215758,
        30.84356507,  31.52319988, 136.80384811, 152.57601269,
        97.20215408,  88.67007454,  65.26908175,  67.1765577 ,
        34.50052905,  93.3099304 , 123.0059913 , 223.20510268,
        22.63848829, 144.75462747]), 'std_fit_time': array([50.57364864, 22.81650752,  1.86557844, 21.43904266, 18.34358885,
        1.22826449,  4.34344781,  5.768841  ,  9.51452694,  3.46403073,
        2.03158898,  4.56646052,  1.45001239,  1.56558836,  3.99390691,
       29.6152337 ,  0.26468701,  0.6157202 , 45.53241135, 39.00580713,
       30.1103979 , 92.96111934, 11.38646755, 11.93808374,  4.66169069,
        0.61015172, 23.05132234, 16.03025358, 15.14198295, 29.91118609]), 'mean_score_time': array([0.05016748, 0.02756516, 0.02327005, 0.0445358 , 0.06793753,
       0.01783633, 0.01280133, 0.0316538 , 0.05993978, 0.03035355,
       0.01818935, 0.01285092, 0.01286745, 0.01186299, 0.01508482,
       0.0581011 , 0.01248177, 0.01230168, 0.05786053, 0.06176249,
       0.03964742, 0.05913981, 0.03420424, 0.05174422, 0.03485473,
       0.02861389, 0.05844839, 0.07112908, 0.02729066, 0.07353473]), 'std_score_time': array([0.00081828, 0.00106523, 0.00051212, 0.00093193, 0.00118841,
       0.00111577, 0.00035153, 0.00057137, 0.00101519, 0.00016839,
       0.00014053, 0.00116908, 0.00116644, 0.00042998, 0.00052052,
       0.00247023, 0.00156274, 0.00045288, 0.00031296, 0.00254098,
       0.00038112, 0.00097052, 0.00044432, 0.00076154, 0.00126043,
       0.00094123, 0.0021964 , 0.00128154, 0.00022745, 0.00062632]), 'param_activation': masked_array(data=['relu', 'relu', 'tanh', 'tanh', 'tanh', 'tanh', 'relu',
                   'tanh', 'relu', 'tanh', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu',
                   'relu', 'tanh'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.010724372498101578, 0.042194505128550885,
                   0.018381248804279812, 0.023168023459297898,
                   0.01249622691412318, 0.004787836133117108,
                   0.011215333016869916, 0.018126239481411927,
                   0.03816186599703867, 0.03594691395604942, 0.0001,
                   0.002627521609339031, 0.0001, 0.010687073401050306,
                   0.009774744962921808, 0.011124011591236044, 0.0001,
                   0.012370575261210697, 0.05, 0.05, 0.05, 0.05,
                   0.012985533092937047, 0.02064261226146209,
                   0.04288095036028819, 0.028942635363847353, 0.05, 0.05,
                   0.05, 0.05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer1': masked_array(data=[5881, 7336, 5204, 9135, 9697, 5741, 8918, 6688, 8679,
                   8530, 9507, 9030, 5000, 10000, 9330, 8622, 8628, 5000,
                   10000, 10000, 8635, 10000, 5000, 5000, 5869, 5000,
                   9359, 5000, 5863, 5000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer2': masked_array(data=[2820, 2489, 4888, 2628, 4631, 3351, 3639, 4002, 4517,
                   3908, 2392, 3214, 5000, 5000, 3280, 5000, 2615, 5000,
                   5000, 5000, 4273, 5000, 2000, 2138, 2000, 3099, 5000,
                   5000, 2000, 5000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer3': masked_array(data=[1568, 1405, 1550, 1034, 1784, 1945, 1770, 1377, 1771,
                   1746, 1845, 1777, 1000, 2000, 1840, 2000, 1128, 1290,
                   2000, 2000, 1263, 2000, 1000, 1000, 1000, 2000, 2000,
                   2000, 1534, 2000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer4': masked_array(data=[656, 869, 648, 467, 448, 412, 345, 924, 824, 836, 470,
                   300, 300, 300, 448, 300, 300, 300, 300, 493, 300, 300,
                   1000, 1000, 1000, 1000, 300, 1000, 1000, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'constant', 'constant', 'constant',
                   'adaptive', 'constant', 'constant', 'constant',
                   'adaptive', 'adaptive', 'constant', 'constant',
                   'adaptive', 'constant', 'constant', 'adaptive',
                   'adaptive', 'adaptive', 'constant', 'adaptive',
                   'constant', 'constant', 'adaptive', 'adaptive',
                   'constant', 'adaptive', 'constant', 'constant',
                   'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.07693171566827633, 0.04635086431068693,
                   0.01345422212245513, 0.043009346875718384,
                   0.03861720815062543, 0.06319754748177622,
                   0.026580084799090506, 0.03735106231708483,
                   0.0032342896101625255, 0.0913209284578167,
                   0.030427651742038122, 0.03338858594701365, 0.0001,
                   0.0001, 0.02096340689184766, 0.009746717218745432,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.1, 0.0001,
                   0.02356411315248434, 0.07760158161750011, 0.0001,
                   0.0001, 0.0001, 0.023795710619051915, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_num_hl': masked_array(data=[2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,
                   2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('activation', 'relu'), ('alpha', 0.010724372498101578), ('layer1', 5881), ('layer2', 2820), ('layer3', 1568), ('layer4', 656), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.07693171566827633), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.042194505128550885), ('layer1', 7336), ('layer2', 2489), ('layer3', 1405), ('layer4', 869), ('learning_rate', 'constant'), ('learning_rate_init', 0.04635086431068693), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.018381248804279812), ('layer1', 5204), ('layer2', 4888), ('layer3', 1550), ('layer4', 648), ('learning_rate', 'constant'), ('learning_rate_init', 0.01345422212245513), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.023168023459297898), ('layer1', 9135), ('layer2', 2628), ('layer3', 1034), ('layer4', 467), ('learning_rate', 'constant'), ('learning_rate_init', 0.043009346875718384), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.01249622691412318), ('layer1', 9697), ('layer2', 4631), ('layer3', 1784), ('layer4', 448), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03861720815062543), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.004787836133117108), ('layer1', 5741), ('layer2', 3351), ('layer3', 1945), ('layer4', 412), ('learning_rate', 'constant'), ('learning_rate_init', 0.06319754748177622), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.011215333016869916), ('layer1', 8918), ('layer2', 3639), ('layer3', 1770), ('layer4', 345), ('learning_rate', 'constant'), ('learning_rate_init', 0.026580084799090506), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.018126239481411927), ('layer1', 6688), ('layer2', 4002), ('layer3', 1377), ('layer4', 924), ('learning_rate', 'constant'), ('learning_rate_init', 0.03735106231708483), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.03816186599703867), ('layer1', 8679), ('layer2', 4517), ('layer3', 1771), ('layer4', 824), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0032342896101625255), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.03594691395604942), ('layer1', 8530), ('layer2', 3908), ('layer3', 1746), ('layer4', 836), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0913209284578167), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 9507), ('layer2', 2392), ('layer3', 1845), ('layer4', 470), ('learning_rate', 'constant'), ('learning_rate_init', 0.030427651742038122), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.002627521609339031), ('layer1', 9030), ('layer2', 3214), ('layer3', 1777), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.03338858594701365), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 5000), ('layer3', 1000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.010687073401050306), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.009774744962921808), ('layer1', 9330), ('layer2', 3280), ('layer3', 1840), ('layer4', 448), ('learning_rate', 'constant'), ('learning_rate_init', 0.02096340689184766), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.011124011591236044), ('layer1', 8622), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.009746717218745432), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 8628), ('layer2', 2615), ('layer3', 1128), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.012370575261210697), ('layer1', 5000), ('layer2', 5000), ('layer3', 1290), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 493), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 8635), ('layer2', 4273), ('layer3', 1263), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.012985533092937047), ('layer1', 5000), ('layer2', 2000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.02064261226146209), ('layer1', 5000), ('layer2', 2138), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.02356411315248434), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.04288095036028819), ('layer1', 5869), ('layer2', 2000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.07760158161750011), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.028942635363847353), ('layer1', 5000), ('layer2', 3099), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 9359), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5863), ('layer2', 2000), ('layer3', 1534), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.023795710619051915), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')])], 'split0_test_score': array([ -3.18724156,  -2.55597579,  -2.64389562,  -2.70993238,
        -2.65549952,  -2.67872748,  -2.01256411,  -2.62299862,
        -2.17896737,  -3.68563351,  -1.97419717,  -2.0130245 ,
        -1.9947057 ,  -2.00119182,  -2.01782968,  -2.37417573,
        -2.0018361 ,  -1.98970143,  -1.97909525,  -2.06693445,
        -2.10245173, -10.80461059,  -2.04735293,  -2.63021897,
        -3.32756986,  -1.99630522,  -1.94951773,  -1.9793755 ,
        -2.05308262,  -2.0554948 ]), 'split1_test_score': array([-2.94794881, -3.23338239, -2.99177276, -2.99122611, -3.11429185,
       -3.02608293, -2.03794278, -3.0711352 , -2.08202333, -3.1900931 ,
       -2.23211147, -2.14474131, -2.04279944, -2.03340157, -2.04149254,
       -1.9739191 , -2.06255232, -2.02345937, -1.91995062, -2.01188456,
       -1.98997351, -4.03872791, -2.08351361, -3.00759762, -3.06320303,
       -1.97582112, -1.96463359, -2.10240551, -2.21330345, -2.03763781]), 'split2_test_score': array([-2.10214418, -2.27901898, -2.76160822, -2.75101122, -3.35190964,
       -2.74480677, -1.99227916, -2.74269986, -2.16072791, -3.30739467,
       -1.98249547, -2.12653567, -2.02524433, -1.99907108, -2.02499811,
       -3.73117999, -2.02447315, -1.98174531, -2.07118042, -1.99855   ,
       -2.03845181, -2.29094158, -2.00447849, -3.07102671, -2.93417981,
       -1.97873441, -1.94585936, -2.14702071, -2.33933228, -1.99376483]), 'mean_test_score': array([-2.74577818, -2.68945905, -2.7990922 , -2.8173899 , -3.040567  ,
       -2.81653906, -2.01426202, -2.81227789, -2.14057287, -3.39437376,
       -2.0629347 , -2.09476716, -2.02091649, -2.01122149, -2.02810678,
       -2.69309161, -2.02962052, -1.99830204, -1.99007543, -2.02578967,
       -2.04362568, -5.71142669, -2.04511501, -2.90294777, -3.10831757,
       -1.98362025, -1.95333689, -2.07626724, -2.20190612, -2.02896581]), 'std_test_score': array([0.46548455, 0.40088711, 0.1444724 , 0.12405949, 0.28904818,
       0.15060565, 0.01868071, 0.18945083, 0.04206508, 0.21144597,
       0.119674  , 0.05827669, 0.01987125, 0.01570757, 0.00990726,
       0.75200707, 0.0250531 , 0.01808302, 0.06222559, 0.02959867,
       0.04606455, 3.67142851, 0.03230473, 0.19457913, 0.16373846,
       0.00904814, 0.0081264 , 0.07089258, 0.1171385 , 0.02593646]), 'rank_test_score': array([21, 19, 22, 25, 27, 24,  6, 23, 17, 29, 14, 16,  7,  5,  9, 20, 11,
        4,  3,  8, 12, 30, 13, 26, 28,  2,  1, 15, 18, 10], dtype=int32)}
-1.9533368929954442
OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 9359), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')])
[343]
adam
0.09231250873330192
tanh
0.04920036000636897
[343]
adam
0.09231250873330192
tanh
0.04920036000636897
[343]
adam
0.09231250873330192
tanh
0.04920036000636897
[854]
adam
0.00891255251862054
relu
0.01902484056878385
[854]
adam
0.00891255251862054
relu
0.01902484056878385
[854]
adam
0.00891255251862054
relu
0.01902484056878385
[1716, 882]
adam
0.072497571884209
tanh
0.04882733794484795
[1716, 882]
adam
0.072497571884209
tanh
0.04882733794484795
[1716, 882]
adam
0.072497571884209
tanh
0.04882733794484795
[1690, 541]
adam
0.03241784828028945
relu
0.04865212771041225
[594]
adam
0.04094134287067444
relu
0.021028947759474895
[1000, 1000]
adam
0.028182481976764887
relu
0.05
[594]
adam
0.04094134287067444
relu
0.021028947759474895
[1000, 1000]
adam
0.028182481976764887
relu
0.05
[300]
adam
0.0001
relu
0.0001
[1877, 767]
adam
0.006943728620831019
tanh
0.0475989645262339
[670]
adam
0.08007485760166394
tanh
0.0472717017965001
[1110, 1000]
adam
0.052270876890140976
relu
0.0001
[1390, 819]
adam
0.06892419521707278
tanh
0.017135664130826164
[1131, 845]
adam
0.0001
relu
0.05
[1110, 1000]
adam
0.052270876890140976
relu
0.0001
[2000, 300]
adam
0.0001
tanh
0.05
[1877, 767]
adam
0.006943728620831019
tanh
0.0475989645262339
[670]
adam
0.08007485760166394
tanh
0.0472717017965001
[1110, 1000]
adam
0.052270876890140976
relu
0.0001
[1755, 425]
adam
0.016926046667622242
relu
0.040381146317640074
[1968, 300]
adam
0.1
relu
0.0001
[2000, 1000]
adam
0.1
tanh
0.0001
[1755, 425]
adam
0.016926046667622242
relu
0.040381146317640074
[1968, 300]
adam
0.1
relu
0.0001
[2000, 1000]
adam
0.1
tanh
0.0001
[1755, 425]
adam
0.016926046667622242
relu
0.040381146317640074
[1968, 300]
adam
0.1
relu
0.0001
[2000, 1000]
adam
0.1
tanh
0.0001
[1390, 819]
adam
0.06892419521707278
tanh
0.017135664130826164
[1131, 845]
adam
0.0001
relu
0.05
[1000, 1000]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1000, 1000]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1390, 819]
adam
0.06892419521707278
tanh
0.017135664130826164
[1131, 845]
adam
0.0001
relu
0.05
[1000, 1000]
adam
0.0001
relu
0.05
[2000, 300]
adam
0.0001
relu
0.05
[1000, 1000]
adam
0.0001
tanh
0.05
[1000]
adam
0.022554482359330302
relu
0.05
[1000, 1000]
adam
0.0001
tanh
0.05
[1000]
adam
0.022554482359330302
relu
0.05
[1000, 1000]
adam
0.0001
tanh
0.05
[1000]
adam
0.022554482359330302
relu
0.05
[2000, 300]
adam
0.07643228107673627
relu
0.05
[1690, 541]
adam
0.03241784828028945
relu
0.04865212771041225
[1000]
adam
0.07220190044906506
relu
0.0001
[1000]
adam
0.0001
relu
0.0454120697180107
[2000, 300]
adam
0.07643228107673627
relu
0.05
[1690, 541]
adam
0.03241784828028945
relu
0.04865212771041225
[1000]
adam
0.07220190044906506
relu
0.0001
[1000]
adam
0.0001
relu
0.0454120697180107
[2000, 300]
adam
0.07643228107673627
relu
0.05
[1000]
adam
0.0012650546315277282
relu
0.05
[594]
adam
0.04094134287067444
relu
0.021028947759474895
[1000]
adam
0.07220190044906506
relu
0.0001
[1000]
adam
0.0001
relu
0.0454120697180107
[1000]
adam
0.0012650546315277282
relu
0.05
[1000]
adam
0.0012650546315277282
relu
0.05
[1893, 633]
adam
0.06142773945537516
relu
0.022533489769777575
[1000, 1000]
adam
0.028182481976764887
relu
0.05
[1000]
adam
0.07122806511922564
tanh
0.0001
[610]
adam
0.026601887804333226
relu
0.05
[1893, 633]
adam
0.06142773945537516
relu
0.022533489769777575
[460]
adam
0.058670237882302675
tanh
0.05
[1000]
adam
0.07122806511922564
tanh
0.0001
[610]
adam
0.026601887804333226
relu
0.05
[1893, 633]
adam
0.06142773945537516
relu
0.022533489769777575
[460]
adam
0.058670237882302675
tanh
0.05
[1000]
adam
0.07122806511922564
tanh
0.0001
[610]
adam
0.026601887804333226
relu
0.05
[2000, 853]
adam
0.0001
relu
0.022950199246198434
{'mean_fit_time': array([ 66.69096581,  42.64251725,   6.27312795,  14.77437234,
        20.11268179,  38.51429566,  37.92133633,   8.07020664,
        45.88042895,  12.07324918,  90.4611872 ,  31.91227619,
        23.89002577,  18.57236878,   9.32453068,  16.92521397,
        23.64165378,  79.30937934,  18.25596778,  47.67806872,
        46.50274706,   4.30149778,  56.36860943,  86.38214525,
        13.20872887,  25.83420801,  15.54030768,  10.54488206,
        21.65588125, 115.32508357]), 'std_fit_time': array([ 8.87479659,  6.23252744,  0.52541571,  1.85577259,  2.71961421,
        5.80313726, 10.48618465,  1.98211523, 26.56118816,  0.5144001 ,
        7.91093016, 34.99579821,  4.76583811, 10.6433388 ,  3.32840758,
        1.70191807,  4.64115652,  9.75605892,  0.44412133,  7.27838263,
        2.26440943,  0.5917944 , 17.37024739, 11.00016477,  1.55597451,
       26.17390729,  6.58926796,  3.54915006,  1.99437202, 26.09594536]), 'mean_score_time': array([0.05768538, 0.04759097, 0.00978486, 0.0145491 , 0.03455496,
       0.05608654, 0.03313621, 0.01012079, 0.03880771, 0.01559019,
       0.02763351, 0.03466376, 0.01431616, 0.02492166, 0.01116538,
       0.00803073, 0.02939272, 0.02613187, 0.06616449, 0.0405972 ,
       0.01460314, 0.02080433, 0.06462153, 0.03423309, 0.01590896,
       0.03455059, 0.01442703, 0.01043018, 0.01477846, 0.04388324]), 'std_score_time': array([5.36479348e-04, 1.67932060e-03, 1.10747498e-03, 2.78222416e-04,
       6.50381267e-04, 8.47807706e-04, 3.27721425e-04, 1.67974006e-04,
       3.30280581e-04, 6.19789843e-04, 6.82050991e-04, 9.20670445e-04,
       2.50933890e-04, 9.90131051e-06, 1.41501109e-04, 1.03277157e-03,
       4.98551549e-04, 2.56846938e-04, 3.94204819e-04, 5.78677501e-04,
       5.69579374e-04, 2.02846469e-04, 7.94124875e-04, 7.64790688e-04,
       5.93171082e-04, 1.55696527e-03, 1.18805732e-04, 3.40480560e-04,
       8.81432301e-04, 5.11917959e-04]), 'param_activation': masked_array(data=['tanh', 'tanh', 'tanh', 'relu', 'relu', 'tanh', 'relu',
                   'relu', 'relu', 'tanh', 'relu', 'relu', 'relu', 'relu',
                   'tanh', 'relu', 'relu', 'relu', 'tanh', 'tanh', 'relu',
                   'tanh', 'tanh', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.0475989645262339, 0.017135664130826164,
                   0.04920036000636897, 0.01902484056878385,
                   0.040381146317640074, 0.04882733794484795,
                   0.04865212771041225, 0.021028947759474895,
                   0.022533489769777575, 0.0472717017965001, 0.05, 0.0001,
                   0.0001, 0.05, 0.05, 0.0001, 0.0001, 0.05, 0.0001, 0.05,
                   0.0454120697180107, 0.0001, 0.05, 0.05, 0.05, 0.05,
                   0.05, 0.05, 0.0001, 0.022950199246198434],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer1': masked_array(data=[7411, 5398, 9979, 8999, 7104, 7171, 8578, 9092, 8656,
                   8305, 5000, 10000, 5000, 10000, 10000, 5000, 5000,
                   10000, 5000, 10000, 10000, 8593, 5000, 10000, 10000,
                   10000, 9886, 9856, 5000, 8041],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer2': masked_array(data=[4538, 2377, 4828, 4475, 3807, 2664, 4575, 3447, 2239,
                   2556, 2000, 2171, 5000, 2557, 5000, 2000, 3925, 3325,
                   5000, 2000, 2695, 4159, 2984, 5000, 5000, 5000, 4465,
                   4487, 5000, 4109],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer3': masked_array(data=[1877, 1390, 1363, 1499, 1755, 1716, 1690, 1763, 1893,
                   1437, 1131, 1968, 1000, 1000, 2000, 2000, 1110, 1000,
                   2000, 1000, 2000, 1000, 2000, 2000, 2000, 2000, 2000,
                   1916, 2000, 2000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer4': masked_array(data=[767, 819, 343, 854, 425, 882, 541, 594, 633, 670, 845,
                   300, 1000, 1000, 460, 300, 1000, 1000, 1000, 1000,
                   1000, 1000, 1000, 300, 1000, 300, 1000, 610, 1000, 853],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['constant', 'constant', 'adaptive', 'adaptive',
                   'constant', 'constant', 'adaptive', 'constant',
                   'adaptive', 'adaptive', 'constant', 'constant',
                   'adaptive', 'adaptive', 'constant', 'adaptive',
                   'constant', 'constant', 'constant', 'constant',
                   'adaptive', 'adaptive', 'constant', 'constant',
                   'constant', 'constant', 'constant', 'constant',
                   'constant', 'constant'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.006943728620831019, 0.06892419521707278,
                   0.09231250873330192, 0.00891255251862054,
                   0.016926046667622242, 0.072497571884209,
                   0.03241784828028945, 0.04094134287067444,
                   0.06142773945537516, 0.08007485760166394, 0.0001, 0.1,
                   0.07220190044906506, 0.028182481976764887,
                   0.058670237882302675, 0.0001, 0.052270876890140976,
                   0.0001, 0.1, 0.0001, 0.0001, 0.07122806511922564,
                   0.051166563839776934, 0.0001, 0.022554482359330302,
                   0.07643228107673627, 0.0012650546315277282,
                   0.026601887804333226, 0.057494237271993334, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_num_hl': masked_array(data=[2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2,
                   2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('activation', 'tanh'), ('alpha', 0.0475989645262339), ('layer1', 7411), ('layer2', 4538), ('layer3', 1877), ('layer4', 767), ('learning_rate', 'constant'), ('learning_rate_init', 0.006943728620831019), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.017135664130826164), ('layer1', 5398), ('layer2', 2377), ('layer3', 1390), ('layer4', 819), ('learning_rate', 'constant'), ('learning_rate_init', 0.06892419521707278), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.04920036000636897), ('layer1', 9979), ('layer2', 4828), ('layer3', 1363), ('layer4', 343), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.09231250873330192), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.01902484056878385), ('layer1', 8999), ('layer2', 4475), ('layer3', 1499), ('layer4', 854), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.00891255251862054), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.040381146317640074), ('layer1', 7104), ('layer2', 3807), ('layer3', 1755), ('layer4', 425), ('learning_rate', 'constant'), ('learning_rate_init', 0.016926046667622242), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.04882733794484795), ('layer1', 7171), ('layer2', 2664), ('layer3', 1716), ('layer4', 882), ('learning_rate', 'constant'), ('learning_rate_init', 0.072497571884209), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.04865212771041225), ('layer1', 8578), ('layer2', 4575), ('layer3', 1690), ('layer4', 541), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03241784828028945), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.021028947759474895), ('layer1', 9092), ('layer2', 3447), ('layer3', 1763), ('layer4', 594), ('learning_rate', 'constant'), ('learning_rate_init', 0.04094134287067444), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.022533489769777575), ('layer1', 8656), ('layer2', 2239), ('layer3', 1893), ('layer4', 633), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.06142773945537516), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0472717017965001), ('layer1', 8305), ('layer2', 2556), ('layer3', 1437), ('layer4', 670), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08007485760166394), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 2000), ('layer3', 1131), ('layer4', 845), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 10000), ('layer2', 2171), ('layer3', 1968), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 5000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.07220190044906506), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 2557), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.028182481976764887), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 460), ('learning_rate', 'constant'), ('learning_rate_init', 0.058670237882302675), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 2000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 3925), ('layer3', 1110), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.052270876890140976), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 3325), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.1), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 2000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0454120697180107), ('layer1', 10000), ('layer2', 2695), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.0001), ('layer1', 8593), ('layer2', 4159), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.07122806511922564), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 2984), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.051166563839776934), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.022554482359330302), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.07643228107673627), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 9886), ('layer2', 4465), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.0012650546315277282), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 9856), ('layer2', 4487), ('layer3', 1916), ('layer4', 610), ('learning_rate', 'constant'), ('learning_rate_init', 0.026601887804333226), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.057494237271993334), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.022950199246198434), ('layer1', 8041), ('layer2', 4109), ('layer3', 2000), ('layer4', 853), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')])], 'split0_test_score': array([-2.63166514, -2.71678907, -2.61749817, -2.07031437, -2.02741185,
       -2.88805709, -2.15035092, -2.31384701, -2.02551353, -3.39958347,
       -2.09701853, -2.65883812, -2.05334813, -2.50646642, -2.84821513,
       -2.07253816, -2.66500662, -2.07780592, -2.75400706, -2.05763849,
       -2.03709846, -2.62084937, -2.77839973, -2.02935659, -2.10270432,
       -3.82555562, -2.04800198, -2.10777332, -2.40693079, -2.07750755]), 'split1_test_score': array([-3.06567146, -3.10499911, -2.98522102, -2.25499444, -2.10027867,
       -3.00445437, -2.06268596, -2.05445922, -5.7823362 , -3.11622975,
       -1.90736623, -2.99739004, -2.06034776, -2.66643918, -3.14504514,
       -2.14120904, -2.10985017, -2.03908436, -3.01588912, -2.33061702,
       -2.02042553, -3.27316456, -3.02614884, -1.92245433, -2.07866532,
       -8.54599939, -2.03323771, -2.20877682, -2.41534116, -1.89479404]), 'split2_test_score': array([ -2.87595664,  -3.40004417,  -2.96170071,  -2.17421674,
        -2.40095701,  -2.88011148,  -2.3074067 ,  -2.15806619,
        -1.98888713,  -5.38220881,  -2.02333094, -13.37556553,
        -2.21071869,  -2.53323215,  -2.80482817,  -2.10282838,
        -2.58125883,  -2.02385442,  -3.1783423 ,  -2.11974116,
        -2.11981197,  -2.73689272,  -3.0196675 ,  -2.09189905,
        -2.10064881,  -2.84394947,  -2.11508464,  -2.30034965,
        -2.35883055,  -2.04576029]), 'mean_test_score': array([-2.85776441, -3.07394412, -2.85480663, -2.16650852, -2.17621585,
       -2.92420765, -2.17348119, -2.17545747, -3.26557895, -3.96600734,
       -2.00923857, -6.34393123, -2.10813819, -2.56871259, -2.93269615,
       -2.10552519, -2.45203854, -2.0469149 , -2.98274616, -2.16933222,
       -2.05911199, -2.87696889, -2.94140536, -2.01456999, -2.09400615,
       -5.07183482, -2.06544144, -2.20563326, -2.39370083, -2.00602063]), 'std_test_score': array([0.1776487 , 0.27980076, 0.16807693, 0.07559208, 0.1616763 ,
       0.05683564, 0.10123674, 0.10660628, 1.77967894, 1.0080649 ,
       0.07806384, 4.97403693, 0.07259163, 0.06996174, 0.15119453,
       0.02809955, 0.24436732, 0.02271092, 0.17481217, 0.11682972,
       0.04345774, 0.28412999, 0.11529275, 0.06996123, 0.01088002,
       2.48907643, 0.03561677, 0.07865037, 0.02489493, 0.07970984]), 'rank_test_score': array([20, 26, 19, 10, 14, 22, 12, 13, 27, 28,  2, 30,  9, 18, 23,  8, 17,
        4, 25, 11,  5, 21, 24,  3,  7, 29,  6, 15, 16,  1], dtype=int32)}
-2.0060206277561
OrderedDict([('activation', 'relu'), ('alpha', 0.022950199246198434), ('layer1', 8041), ('layer2', 4109), ('layer3', 2000), ('layer4', 853), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 2), ('solver', 'adam')])
[300]
adam
0.0001
relu
0.0001
[2000, 1000]
adam
0.051166563839776934
tanh
0.05
[1000]
adam
0.057494237271993334
relu
0.0001
[648]
adam
0.08596977970729913
tanh
0.012622164808766349
[1877, 767]
adam
0.006943728620831019
tanh
0.0475989645262339
[670]
adam
0.08007485760166394
tanh
0.0472717017965001
[300]
adam
0.0001
relu
0.0001
[2000, 1000]
adam
0.051166563839776934
tanh
0.05
[1000]
adam
0.057494237271993334
relu
0.0001
[648]
adam
0.08596977970729913
tanh
0.012622164808766349
[460]
adam
0.058670237882302675
tanh
0.05
[2000, 1000]
adam
0.051166563839776934
tanh
0.05
[1000]
adam
0.057494237271993334
relu
0.0001
[648]
adam
0.08596977970729913
tanh
0.012622164808766349
[1754, 823]
adam
0.06668216309707369
relu
0.023972846815683117
[1754, 823]
adam
0.06668216309707369
relu
0.023972846815683117
[450]
adam
0.008683908885140826
tanh
0.031563217552282884
[2000, 853]
adam
0.0001
relu
0.022950199246198434
[1748, 736]
adam
0.02654637716094662
tanh
0.013048749342980795
[300]
adam
0.1
relu
0.0001
[2000, 853]
adam
0.0001
relu
0.022950199246198434
[1748, 736]
adam
0.02654637716094662
tanh
0.013048749342980795
[300]
adam
0.1
relu
0.0001
[2000, 853]
adam
0.0001
relu
0.022950199246198434
[1748, 736]
adam
0.02654637716094662
tanh
0.013048749342980795
[300]
adam
0.1
relu
0.0001
[450]
adam
0.008683908885140826
tanh
0.031563217552282884
[300]
adam
0.0001
relu
0.015325383393435338
[450]
adam
0.008683908885140826
tanh
0.031563217552282884
[300]
adam
0.0001
relu
0.015325383393435338
[1581, 825]
adam
0.0980036807344887
relu
0.04413002100873608
[1000]
adam
0.1
tanh
0.05
[1581, 825]
adam
0.0980036807344887
relu
0.04413002100873608
[1000]
adam
0.1
tanh
0.05
[1581, 825]
adam
0.0980036807344887
relu
0.04413002100873608
[1000]
adam
0.1
tanh
0.05
[877]
adam
0.0001
relu
0.016060202153640776
{'mean_fit_time': array([ 8.17979876, 49.38814791, 36.8009843 ,  8.82004929, 11.79595208,
        3.1834681 , 52.39708845, 11.5667359 , 61.2037286 , 21.19618392,
        3.88487252, 41.88169003, 36.94383065, 16.20802879, 45.5378979 ,
       49.00243878, 18.27565519, 17.19638785, 49.63029957, 48.46009382,
        9.17916918, 47.29741621, 45.61609181, 11.20579759, 45.6694448 ,
       47.31102411, 17.85156012, 13.56176956,  2.25687822, 47.1262188 ]), 'std_fit_time': array([5.71599280e-01, 2.74383806e+00, 9.81830371e+00, 2.28481152e+00,
       5.17635907e+00, 6.78203479e-01, 7.70100063e+00, 2.00044615e+00,
       1.14485396e+01, 2.09292143e+01, 2.53037814e+00, 2.26302436e-01,
       1.09704322e-01, 1.63071229e+00, 6.73402367e-01, 5.49506799e-01,
       6.34433521e+00, 2.05715996e+00, 3.72070657e-01, 2.11245753e+00,
       4.23096547e+00, 8.83027768e-01, 6.09859909e-01, 1.22941229e+01,
       1.87883753e-02, 4.00406582e+00, 7.26748836e-01, 2.20998944e+00,
       1.62251709e-02, 9.25042741e-01]), 'mean_score_time': array([0.01424575, 0.05221494, 0.04039462, 0.01081848, 0.0401957 ,
       0.01137129, 0.05188942, 0.01302417, 0.05207205, 0.03686897,
       0.00642522, 0.0138166 , 0.01165263, 0.0066456 , 0.01446939,
       0.01452804, 0.01515444, 0.02131009, 0.01574572, 0.01461879,
       0.01426299, 0.01432252, 0.0143671 , 0.02719092, 0.01468301,
       0.01521985, 0.00764696, 0.02116982, 0.02683663, 0.0140748 ]), 'std_score_time': array([1.09077130e-04, 2.50656240e-04, 5.63708697e-04, 3.03084377e-04,
       1.81380021e-03, 5.04330547e-04, 8.54299071e-04, 8.43198000e-04,
       9.84098498e-04, 1.62551236e-03, 6.63635715e-04, 8.10903776e-04,
       5.95640468e-05, 4.95872677e-04, 4.38878936e-04, 2.87219951e-04,
       6.70728553e-04, 8.34806372e-04, 5.07451690e-04, 4.07507889e-04,
       2.82786904e-04, 2.08602042e-04, 3.27878399e-04, 7.99056753e-04,
       4.10439413e-04, 3.40838759e-04, 5.90435202e-04, 5.15099734e-04,
       4.94597259e-04, 1.15924890e-04]), 'param_activation': masked_array(data=['tanh', 'tanh', 'tanh', 'relu', 'relu', 'tanh', 'tanh',
                   'relu', 'tanh', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'tanh', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'tanh', 'relu', 'relu', 'relu', 'tanh',
                   'tanh', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.012622164808766349, 0.013048749342980795,
                   0.03169798334681853, 0.011771591377244536,
                   0.023972846815683117, 0.031563217552282884,
                   0.026427715957552892, 0.014655815484633714,
                   0.01651168411735425, 0.04413002100873608, 0.0001,
                   0.016060202153640776, 0.015742590617603903,
                   0.015325383393435338, 0.015430960401141438,
                   0.015433349377530397, 0.017506446463695282, 0.05, 0.05,
                   0.05, 0.0001, 0.05, 0.05, 0.05, 0.0001, 0.05, 0.05,
                   0.05, 0.05, 0.05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer1': masked_array(data=[9730, 9059, 9881, 6860, 8629, 5287, 8273, 7208, 5985,
                   5197, 5000, 7419, 7522, 5000, 10000, 5000, 7888, 10000,
                   10000, 10000, 10000, 5000, 5000, 10000, 10000, 10000,
                   10000, 10000, 10000, 5000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer2': masked_array(data=[4800, 3552, 3853, 3611, 3072, 2812, 3433, 3544, 2469,
                   2700, 5000, 3406, 3072, 4207, 5000, 2000, 3722, 5000,
                   2000, 5000, 3575, 5000, 5000, 5000, 5000, 2000, 5000,
                   3061, 5000, 5000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer3': masked_array(data=[1869, 1748, 1270, 1844, 1754, 1756, 1618, 1479, 1944,
                   1581, 2000, 1426, 1872, 1000, 1000, 1000, 1000, 1000,
                   1000, 1000, 1000, 2000, 1000, 1000, 2000, 2000, 1000,
                   1000, 1000, 2000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_layer4': masked_array(data=[648, 736, 660, 640, 823, 450, 811, 825, 484, 825, 300,
                   877, 731, 300, 1000, 1000, 962, 1000, 1000, 1000, 1000,
                   1000, 1000, 300, 1000, 1000, 300, 1000, 300, 1000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'constant', 'adaptive', 'constant',
                   'constant', 'constant', 'adaptive', 'adaptive',
                   'constant', 'constant', 'constant', 'adaptive',
                   'constant', 'adaptive', 'constant', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.08596977970729913, 0.02654637716094662,
                   0.020663455792273196, 0.002535463794961649,
                   0.06668216309707369, 0.008683908885140826,
                   0.017754278567339084, 0.008480106891463255,
                   0.09503450451364318, 0.0980036807344887, 0.1, 0.0001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.00327804348466717,
                   0.1, 0.0001, 0.0001, 0.013596768019254121, 0.0001,
                   0.0001, 0.06521721958924659, 0.0001, 0.0001, 0.0001,
                   0.03596584943561712, 0.045092982662730804, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_num_hl': masked_array(data=[1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'adam', 'adam', 'adam',
                   'adam', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('activation', 'tanh'), ('alpha', 0.012622164808766349), ('layer1', 9730), ('layer2', 4800), ('layer3', 1869), ('layer4', 648), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.08596977970729913), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.013048749342980795), ('layer1', 9059), ('layer2', 3552), ('layer3', 1748), ('layer4', 736), ('learning_rate', 'constant'), ('learning_rate_init', 0.02654637716094662), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.03169798334681853), ('layer1', 9881), ('layer2', 3853), ('layer3', 1270), ('layer4', 660), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.020663455792273196), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.011771591377244536), ('layer1', 6860), ('layer2', 3611), ('layer3', 1844), ('layer4', 640), ('learning_rate', 'constant'), ('learning_rate_init', 0.002535463794961649), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.023972846815683117), ('layer1', 8629), ('layer2', 3072), ('layer3', 1754), ('layer4', 823), ('learning_rate', 'constant'), ('learning_rate_init', 0.06668216309707369), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.031563217552282884), ('layer1', 5287), ('layer2', 2812), ('layer3', 1756), ('layer4', 450), ('learning_rate', 'constant'), ('learning_rate_init', 0.008683908885140826), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.026427715957552892), ('layer1', 8273), ('layer2', 3433), ('layer3', 1618), ('layer4', 811), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.017754278567339084), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.014655815484633714), ('layer1', 7208), ('layer2', 3544), ('layer3', 1479), ('layer4', 825), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.008480106891463255), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.01651168411735425), ('layer1', 5985), ('layer2', 2469), ('layer3', 1944), ('layer4', 484), ('learning_rate', 'constant'), ('learning_rate_init', 0.09503450451364318), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.04413002100873608), ('layer1', 5197), ('layer2', 2700), ('layer3', 1581), ('layer4', 825), ('learning_rate', 'constant'), ('learning_rate_init', 0.0980036807344887), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 300), ('learning_rate', 'constant'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.016060202153640776), ('layer1', 7419), ('layer2', 3406), ('layer3', 1426), ('layer4', 877), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.015742590617603903), ('layer1', 7522), ('layer2', 3072), ('layer3', 1872), ('layer4', 731), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.015325383393435338), ('layer1', 5000), ('layer2', 4207), ('layer3', 1000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.015430960401141438), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'constant'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.015433349377530397), ('layer1', 5000), ('layer2', 2000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.017506446463695282), ('layer1', 7888), ('layer2', 3722), ('layer3', 1000), ('layer4', 962), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.00327804348466717), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.1), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 2000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 10000), ('layer2', 3575), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.013596768019254121), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 5000), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.06521721958924659), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.0001), ('layer1', 10000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 2000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 3061), ('layer3', 1000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.03596584943561712), ('num_hl', 1), ('solver', 'adam')]), OrderedDict([('activation', 'tanh'), ('alpha', 0.05), ('layer1', 10000), ('layer2', 5000), ('layer3', 1000), ('layer4', 300), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.045092982662730804), ('num_hl', 2), ('solver', 'adam')]), OrderedDict([('activation', 'relu'), ('alpha', 0.05), ('layer1', 5000), ('layer2', 5000), ('layer3', 2000), ('layer4', 1000), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')])], 'split0_test_score': array([ -3.74163934,  -2.61762221,  -2.6604983 ,  -2.3178231 ,
       -47.95369313,  -2.6932143 ,  -2.90765067,  -2.10612857,
        -2.62229247,  -2.16540252,  -2.23610457,  -2.09809916,
        -2.10315319,  -2.09188334,  -2.09546769,  -2.09198394,
        -2.15800195,  -3.37950756,  -2.09243984,  -2.10083053,
        -2.08057928,  -2.0927283 ,  -2.09799041,  -2.62731135,
        -2.09993279,  -2.1078871 ,  -2.10103229,  -2.8055169 ,
        -2.62983381,  -2.07726524]), 'split1_test_score': array([ -3.2096855 ,  -2.99374503,  -2.98610167,  -2.37663201,
        -5.37148662,  -2.99177105,  -3.01043624,  -2.18814287,
        -3.16205842, -32.58496767,  -2.25307013,  -2.18064429,
        -2.20482721,  -2.19984259,  -2.1802528 ,  -2.17845898,
        -2.23476405,  -3.31294951,  -2.17359198,  -2.1748625 ,
        -2.19485249,  -2.17864719,  -2.18808526,  -2.99367322,
        -2.17555388,  -2.17389302,  -2.19311229,  -2.98718687,
        -2.98653029,  -2.1779445 ]), 'split2_test_score': array([ -3.09822458,  -2.93177155,  -2.77184981,  -2.14440227,
        -2.49600143,  -2.83694661,  -2.80386677,  -2.13319912,
        -3.00180484, -10.47787718, -10.20079219,  -2.10617155,
        -2.12245116,  -2.11727661,  -2.14414222,  -2.12515864,
        -2.20562442,  -2.72080535,  -2.13361701,  -2.14388134,
        -2.73583261,  -2.12397339,  -2.13586236,  -2.79615085,
        -2.13337663,  -2.14502483,  -2.12007564,  -2.92544392,
        -2.87567676,  -2.12972849]), 'mean_test_score': array([ -3.34984981,  -2.84771293,  -2.80614993,  -2.27961913,
       -18.6070604 ,  -2.84064399,  -2.90731789,  -2.14249019,
        -2.92871858, -15.07608246,  -4.89665563,  -2.128305  ,
        -2.14347719,  -2.13633418,  -2.13995424,  -2.13186719,
        -2.19946347,  -3.13775414,  -2.13321628,  -2.13985812,
        -2.33708812,  -2.13178296,  -2.14064601,  -2.80571181,
        -2.13628777,  -2.14226832,  -2.1380734 ,  -2.90604923,
        -2.83068028,  -2.12831274]), 'std_test_score': array([ 0.28074919,  0.16465415,  0.13512158,  0.098581  , 20.78438105,
        0.12191332,  0.08433196,  0.03412066,  0.22633754, 12.83731812,
        3.75059733,  0.0371559 ,  0.0440906 ,  0.04608827,  0.03473983,
        0.03562056,  0.03163935,  0.29607681,  0.03313143,  0.03035702,
        0.28578834,  0.03550827,  0.03693627,  0.14971932,  0.03094073,
        0.02701721,  0.03968729,  0.07542374,  0.14905616,  0.04111433]), 'rank_test_score': array([27, 22, 19, 16, 30, 21, 24, 13, 25, 29, 28,  1, 14,  7, 10,  4, 15,
       26,  5,  9, 17,  3, 11, 18,  6, 12,  8, 23, 20,  2], dtype=int32)}
-2.1283049965036978
OrderedDict([('activation', 'relu'), ('alpha', 0.016060202153640776), ('layer1', 7419), ('layer2', 3406), ('layer3', 1426), ('layer4', 877), ('learning_rate', 'adaptive'), ('learning_rate_init', 0.0001), ('num_hl', 1), ('solver', 'adam')])
[1618, 811]
adam
0.017754278567339084
tanh
0.026427715957552892
[1000]
adam
0.0001
relu
0.015430960401141438
[1000]
adam
0.0001
relu
0.05
[1618, 811]
adam
0.017754278567339084
tanh
0.026427715957552892
[1000]
adam
0.0001
relu
0.015430960401141438
[1000]
adam
0.0001
relu
0.05
[825]
adam
0.008480106891463255
relu
0.014655815484633714
[1000]
adam
0.0001
relu
0.015433349377530397
[1000, 300]
adam
0.06521721958924659
tanh
0.05
[825]
adam
0.008480106891463255
relu
0.014655815484633714
[1000]
adam
0.0001
relu
0.015433349377530397
[1000, 300]
adam
0.06521721958924659
tanh
0.05
[1618, 811]
adam
0.017754278567339084
tanh
0.026427715957552892
[1000]
adam
0.0001
relu
0.015430960401141438
[1000]
adam
0.0001
relu
0.05
[825]
adam
0.008480106891463255
relu
0.014655815484633714
[1000]
adam
0.0001
relu
0.015433349377530397
[1000, 300]
adam
0.06521721958924659
tanh
0.05
[1944, 484]
adam
0.09503450451364318
tanh
0.01651168411735425
[962]
adam
0.00327804348466717
relu
0.017506446463695282
[1000]
adam
0.0001
relu
0.0001
[1944, 484]
adam
0.09503450451364318
tanh
0.01651168411735425
[962]
adam
0.00327804348466717
relu
0.017506446463695282
[1000]
adam
0.0001
relu
0.0001
[1944, 484]
adam
0.09503450451364318
tanh
0.01651168411735425
[962]
adam
0.00327804348466717
relu
0.017506446463695282
[1000]
adam
0.0001
relu
0.0001
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[300]
adam
0.0001
relu
0.05
[300]
adam
0.0001
relu
0.05
[300]
adam
0.0001
relu
0.05
[1270, 660]
adam
0.020663455792273196
tanh
0.03169798334681853
[877]
adam
0.0001
relu
0.016060202153640776
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.03596584943561712
tanh
0.05
[1270, 660]
adam
0.020663455792273196
tanh
0.03169798334681853
[877]
adam
0.0001
relu
0.016060202153640776
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.03596584943561712
tanh
0.05
[640]
adam
0.002535463794961649
relu
0.011771591377244536
[731]
adam
0.0001
relu
0.015742590617603903
[1000]
adam
0.013596768019254121
relu
0.0001
[1000, 300]
adam
0.045092982662730804
tanh
0.05
[640]
adam
0.002535463794961649
relu
0.011771591377244536
[731]
adam
0.0001
relu
0.015742590617603903
[1000]
adam
0.013596768019254121
relu
0.0001
[1000, 300]
adam
0.045092982662730804
tanh
0.05
[1270, 660]
adam
0.020663455792273196
tanh
0.03169798334681853
[877]
adam
0.0001
relu
0.016060202153640776
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.03596584943561712
tanh
0.05
[640]
adam
0.002535463794961649
relu
0.011771591377244536
[731]
adam
0.0001
relu
0.015742590617603903
[1000]
adam
0.013596768019254121
relu
0.0001
[1000, 300]
adam
0.045092982662730804
tanh
0.05
[1754, 823]
adam
0.06668216309707369
relu
0.023972846815683117
[300]
adam
0.0001
relu
0.015325383393435338
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
[1000]
adam
0.0001
relu
0.05
