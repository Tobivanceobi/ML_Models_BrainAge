no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=128, estimator__n_neighbors=40, estimator__p=2, max_features=0.48951660220329585, max_samples=0.1728223247548491, n_estimators=181;, score=-2.284 total time=   1.8s
[CV 2/3] END estimator__leaf_size=128, estimator__n_neighbors=40, estimator__p=2, max_features=0.48951660220329585, max_samples=0.1728223247548491, n_estimators=181;, score=-2.599 total time=   0.7s
[CV 3/3] END estimator__leaf_size=128, estimator__n_neighbors=40, estimator__p=2, max_features=0.48951660220329585, max_samples=0.1728223247548491, n_estimators=181;, score=-2.446 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=33, estimator__n_neighbors=49, estimator__p=1, max_features=0.8714093375986637, max_samples=0.22109533411792712, n_estimators=164;, score=-2.197 total time=   1.6s
[CV 2/3] END estimator__leaf_size=33, estimator__n_neighbors=49, estimator__p=1, max_features=0.8714093375986637, max_samples=0.22109533411792712, n_estimators=164;, score=-2.518 total time=   1.4s
[CV 3/3] END estimator__leaf_size=33, estimator__n_neighbors=49, estimator__p=1, max_features=0.8714093375986637, max_samples=0.22109533411792712, n_estimators=164;, score=-2.357 total time=   1.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=16, estimator__n_neighbors=47, estimator__p=1, max_features=0.5073163702831578, max_samples=0.1172875771430549, n_estimators=128;, score=-2.409 total time=   0.6s
[CV 2/3] END estimator__leaf_size=16, estimator__n_neighbors=47, estimator__p=1, max_features=0.5073163702831578, max_samples=0.1172875771430549, n_estimators=128;, score=-2.725 total time=   0.6s
[CV 3/3] END estimator__leaf_size=16, estimator__n_neighbors=47, estimator__p=1, max_features=0.5073163702831578, max_samples=0.1172875771430549, n_estimators=128;, score=-2.588 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=77, estimator__n_neighbors=50, estimator__p=1, max_features=0.4980093467313629, max_samples=0.43001405225332356, n_estimators=189;, score=-2.093 total time=   1.9s
[CV 2/3] END estimator__leaf_size=77, estimator__n_neighbors=50, estimator__p=1, max_features=0.4980093467313629, max_samples=0.43001405225332356, n_estimators=189;, score=-2.384 total time=   1.8s
[CV 3/3] END estimator__leaf_size=77, estimator__n_neighbors=50, estimator__p=1, max_features=0.4980093467313629, max_samples=0.43001405225332356, n_estimators=189;, score=-2.223 total time=   1.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=209, estimator__n_neighbors=32, estimator__p=2, max_features=0.31185074175415906, max_samples=0.7751322806738928, n_estimators=144;, score=-2.094 total time=   1.3s
[CV 2/3] END estimator__leaf_size=209, estimator__n_neighbors=32, estimator__p=2, max_features=0.31185074175415906, max_samples=0.7751322806738928, n_estimators=144;, score=-2.366 total time=   1.3s
[CV 3/3] END estimator__leaf_size=209, estimator__n_neighbors=32, estimator__p=2, max_features=0.31185074175415906, max_samples=0.7751322806738928, n_estimators=144;, score=-2.240 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=287, estimator__n_neighbors=24, estimator__p=2, max_features=0.7935652116662132, max_samples=0.2300628330090972, n_estimators=199;, score=-2.149 total time=   1.2s
[CV 2/3] END estimator__leaf_size=287, estimator__n_neighbors=24, estimator__p=2, max_features=0.7935652116662132, max_samples=0.2300628330090972, n_estimators=199;, score=-2.453 total time=   1.3s
[CV 3/3] END estimator__leaf_size=287, estimator__n_neighbors=24, estimator__p=2, max_features=0.7935652116662132, max_samples=0.2300628330090972, n_estimators=199;, score=-2.302 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=133, estimator__n_neighbors=14, estimator__p=1, max_features=0.6554661122055693, max_samples=0.15669182202115867, n_estimators=89;, score=-2.071 total time=   0.6s
[CV 2/3] END estimator__leaf_size=133, estimator__n_neighbors=14, estimator__p=1, max_features=0.6554661122055693, max_samples=0.15669182202115867, n_estimators=89;, score=-2.345 total time=   0.6s
[CV 3/3] END estimator__leaf_size=133, estimator__n_neighbors=14, estimator__p=1, max_features=0.6554661122055693, max_samples=0.15669182202115867, n_estimators=89;, score=-2.203 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=154, estimator__n_neighbors=28, estimator__p=1, max_features=0.37020872410954064, max_samples=0.27619861756613207, n_estimators=92;, score=-2.078 total time=   0.6s
[CV 2/3] END estimator__leaf_size=154, estimator__n_neighbors=28, estimator__p=1, max_features=0.37020872410954064, max_samples=0.27619861756613207, n_estimators=92;, score=-2.367 total time=   0.6s
[CV 3/3] END estimator__leaf_size=154, estimator__n_neighbors=28, estimator__p=1, max_features=0.37020872410954064, max_samples=0.27619861756613207, n_estimators=92;, score=-2.213 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=99, estimator__n_neighbors=4, estimator__p=1, max_features=0.8710344254335834, max_samples=0.5772227084471524, n_estimators=53;, score=-2.044 total time=   2.4s
[CV 2/3] END estimator__leaf_size=99, estimator__n_neighbors=4, estimator__p=1, max_features=0.8710344254335834, max_samples=0.5772227084471524, n_estimators=53;, score=-2.203 total time=   1.4s
[CV 3/3] END estimator__leaf_size=99, estimator__n_neighbors=4, estimator__p=1, max_features=0.8710344254335834, max_samples=0.5772227084471524, n_estimators=53;, score=-2.131 total time=   1.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=113, estimator__n_neighbors=6, estimator__p=1, max_features=0.9379479298155985, max_samples=0.8933179042966948, n_estimators=103;, score=-2.054 total time=   3.7s
[CV 2/3] END estimator__leaf_size=113, estimator__n_neighbors=6, estimator__p=1, max_features=0.9379479298155985, max_samples=0.8933179042966948, n_estimators=103;, score=-2.203 total time=   3.4s
[CV 3/3] END estimator__leaf_size=113, estimator__n_neighbors=6, estimator__p=1, max_features=0.9379479298155985, max_samples=0.8933179042966948, n_estimators=103;, score=-2.137 total time=   3.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=75, estimator__n_neighbors=3, estimator__p=1, max_features=0.37498140563965143, max_samples=0.7319424591841955, n_estimators=50;, score=-2.038 total time=   2.1s
[CV 2/3] END estimator__leaf_size=75, estimator__n_neighbors=3, estimator__p=1, max_features=0.37498140563965143, max_samples=0.7319424591841955, n_estimators=50;, score=-2.189 total time=   0.8s
[CV 3/3] END estimator__leaf_size=75, estimator__n_neighbors=3, estimator__p=1, max_features=0.37498140563965143, max_samples=0.7319424591841955, n_estimators=50;, score=-2.133 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=2, max_features=0.10806621575222874, max_samples=0.5108476477443934, n_estimators=161;, score=-2.091 total time=   1.3s
[CV 2/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=2, max_features=0.10806621575222874, max_samples=0.5108476477443934, n_estimators=161;, score=-2.284 total time=   0.5s
[CV 3/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=2, max_features=0.10806621575222874, max_samples=0.5108476477443934, n_estimators=161;, score=-2.185 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=78;, score=-1.997 total time=   0.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=78;, score=-2.182 total time=   0.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=78;, score=-2.099 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.8111504804007096, max_samples=0.1, n_estimators=97;, score=-2.087 total time=   0.5s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.8111504804007096, max_samples=0.1, n_estimators=97;, score=-2.350 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.8111504804007096, max_samples=0.1, n_estimators=97;, score=-2.249 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.6695859082249077, max_samples=0.5115308183256562, n_estimators=80;, score=-1.981 total time=   1.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.6695859082249077, max_samples=0.5115308183256562, n_estimators=80;, score=-2.204 total time=   1.3s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.6695859082249077, max_samples=0.5115308183256562, n_estimators=80;, score=-2.121 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=2, max_features=0.22432959741202946, max_samples=0.5010833355575648, n_estimators=68;, score=-2.089 total time=   0.5s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=2, max_features=0.22432959741202946, max_samples=0.5010833355575648, n_estimators=68;, score=-2.336 total time=   0.3s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=2, max_features=0.22432959741202946, max_samples=0.5010833355575648, n_estimators=68;, score=-2.209 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2934114660956769, n_estimators=50;, score=-1.997 total time=   2.1s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2934114660956769, n_estimators=50;, score=-2.203 total time=   0.8s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2934114660956769, n_estimators=50;, score=-2.128 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-1.985 total time=   1.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.193 total time=   1.0s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.087 total time=   1.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-1.984 total time=   1.0s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.190 total time=   1.0s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.085 total time=   1.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=0.13846578806695695, max_samples=1.0, n_estimators=200;, score=-2.029 total time=   1.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=0.13846578806695695, max_samples=1.0, n_estimators=200;, score=-2.294 total time=   1.3s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=0.13846578806695695, max_samples=1.0, n_estimators=200;, score=-2.156 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.117 total time=   6.0s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.309 total time=   6.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.228 total time=   6.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=0.1, max_samples=0.6396164691870769, n_estimators=200;, score=-2.004 total time=   0.8s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=0.1, max_samples=0.6396164691870769, n_estimators=200;, score=-2.239 total time=   0.7s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=0.1, max_samples=0.6396164691870769, n_estimators=200;, score=-2.123 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.9062310067033605, n_estimators=172;, score=-2.099 total time=   0.7s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.9062310067033605, n_estimators=172;, score=-2.284 total time=   0.7s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.9062310067033605, n_estimators=172;, score=-2.179 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.42535824160840996, n_estimators=200;, score=-2.033 total time=   3.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.42535824160840996, n_estimators=200;, score=-2.184 total time=   3.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.42535824160840996, n_estimators=200;, score=-2.125 total time=   3.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1377878273892586, max_samples=0.3984429558010655, n_estimators=200;, score=-1.992 total time=   0.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1377878273892586, max_samples=0.3984429558010655, n_estimators=200;, score=-2.168 total time=   0.7s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1377878273892586, max_samples=0.3984429558010655, n_estimators=200;, score=-2.091 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.48694156211124484, n_estimators=50;, score=-1.984 total time=   1.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.48694156211124484, n_estimators=50;, score=-2.185 total time=   0.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.48694156211124484, n_estimators=50;, score=-2.104 total time=   0.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.010 total time=   9.0s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.256 total time=   8.6s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.131 total time=   8.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=30, estimator__p=1, max_features=1.0, max_samples=0.5224177368346714, n_estimators=200;, score=-2.020 total time=   4.1s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=30, estimator__p=1, max_features=1.0, max_samples=0.5224177368346714, n_estimators=200;, score=-2.274 total time=   4.2s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=30, estimator__p=1, max_features=1.0, max_samples=0.5224177368346714, n_estimators=200;, score=-2.141 total time=   4.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.23788716355392792, n_estimators=66;, score=-2.001 total time=   0.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.23788716355392792, n_estimators=66;, score=-2.212 total time=   0.3s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.23788716355392792, n_estimators=66;, score=-2.107 total time=   0.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=26, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-1.978 total time=   8.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=26, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.213 total time=   8.7s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=26, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.117 total time=   8.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.8065907132000388, n_estimators=54;, score=-2.027 total time=   2.9s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.8065907132000388, n_estimators=54;, score=-2.287 total time=   2.2s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.8065907132000388, n_estimators=54;, score=-2.148 total time=   2.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=50;, score=-1.995 total time=   0.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=50;, score=-2.236 total time=   0.4s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=50;, score=-2.113 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=0.1, max_samples=0.8987276461569377, n_estimators=50;, score=-2.000 total time=   0.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=0.1, max_samples=0.8987276461569377, n_estimators=50;, score=-2.243 total time=   0.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=0.1, max_samples=0.8987276461569377, n_estimators=50;, score=-2.119 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3446020744097352, n_estimators=200;, score=-1.982 total time=   6.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3446020744097352, n_estimators=200;, score=-2.181 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3446020744097352, n_estimators=200;, score=-2.084 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4087094052051281, max_samples=0.354516688316608, n_estimators=50;, score=-1.989 total time=   1.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4087094052051281, max_samples=0.354516688316608, n_estimators=50;, score=-2.191 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4087094052051281, max_samples=0.354516688316608, n_estimators=50;, score=-2.110 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=0.4525862196307021, n_estimators=200;, score=-1.994 total time=   1.4s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=0.4525862196307021, n_estimators=200;, score=-2.217 total time=   0.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=9, estimator__p=1, max_features=0.1, max_samples=0.4525862196307021, n_estimators=200;, score=-2.117 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.33537260282278347, n_estimators=200;, score=-1.982 total time=   0.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.33537260282278347, n_estimators=200;, score=-2.182 total time=   0.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.33537260282278347, n_estimators=200;, score=-2.085 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.097 total time=   5.7s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.368 total time=   5.8s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.245 total time=   5.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.757635523751, n_estimators=200;, score=-1.978 total time=   6.0s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.757635523751, n_estimators=200;, score=-2.214 total time=   5.9s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.757635523751, n_estimators=200;, score=-2.121 total time=   6.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.006 total time=   3.8s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.203 total time=   2.6s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=10, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.137 total time=   2.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.20176650954283423, n_estimators=200;, score=-1.985 total time=   2.2s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.20176650954283423, n_estimators=200;, score=-2.183 total time=   1.7s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.20176650954283423, n_estimators=200;, score=-2.109 total time=   1.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2804025452624002, n_estimators=200;, score=-1.984 total time=   0.5s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2804025452624002, n_estimators=200;, score=-2.190 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2804025452624002, n_estimators=200;, score=-2.089 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3672802670965545, n_estimators=200;, score=-1.984 total time=   0.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3672802670965545, n_estimators=200;, score=-2.178 total time=   0.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.3672802670965545, n_estimators=200;, score=-2.086 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.9272104276635887, n_estimators=200;, score=-1.993 total time=   1.0s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.9272104276635887, n_estimators=200;, score=-2.160 total time=   1.0s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.9272104276635887, n_estimators=200;, score=-2.088 total time=   1.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.34986345097089744, max_samples=1.0, n_estimators=200;, score=-2.085 total time=   2.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.34986345097089744, max_samples=1.0, n_estimators=200;, score=-2.187 total time=   2.7s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.34986345097089744, max_samples=1.0, n_estimators=200;, score=-2.148 total time=   2.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.6093711245906818, max_samples=0.659756995964611, n_estimators=200;, score=-2.001 total time=   3.0s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.6093711245906818, max_samples=0.659756995964611, n_estimators=200;, score=-2.254 total time=   3.0s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.6093711245906818, max_samples=0.659756995964611, n_estimators=200;, score=-2.134 total time=   3.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7206440809073877, n_estimators=200;, score=-1.990 total time=   0.8s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7206440809073877, n_estimators=200;, score=-2.164 total time=   0.8s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7206440809073877, n_estimators=200;, score=-2.085 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4716657434712571, max_samples=0.4914589552630937, n_estimators=200;, score=-2.032 total time=   1.9s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4716657434712571, max_samples=0.4914589552630937, n_estimators=200;, score=-2.173 total time=   2.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4716657434712571, max_samples=0.4914589552630937, n_estimators=200;, score=-2.108 total time=   1.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.1, max_samples=0.8488529430931351, n_estimators=200;, score=-1.986 total time=   0.9s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.1, max_samples=0.8488529430931351, n_estimators=200;, score=-2.172 total time=   0.9s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.1, max_samples=0.8488529430931351, n_estimators=200;, score=-2.081 total time=   0.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=0.7168367526664544, n_estimators=200;, score=-2.062 total time=   0.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=0.7168367526664544, n_estimators=200;, score=-2.343 total time=   0.9s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=0.7168367526664544, n_estimators=200;, score=-2.189 total time=   0.9s
{'mean_fit_time': array([0.69764296, 0.61887757, 0.23656424, 0.94759623, 0.88627728,
       0.77746701, 0.27688289, 0.27322698, 1.04929821, 1.7590398 ,
       0.80845801, 0.40887523, 0.2685794 , 0.24376957, 0.65711284,
       0.21839221, 0.78614958, 0.5566988 , 0.49312989, 0.62369339,
       4.43337329, 0.3271029 , 0.4091924 , 1.63061166, 0.25313322,
       0.5544316 , 4.63956944, 2.03633221, 0.16188884, 4.17446081,
       1.36889505, 0.32006915, 0.20081107, 2.21536183, 0.651395  ,
       0.38920037, 0.23359386, 4.0891095 , 2.76440231, 1.78853059,
       0.92939885, 0.22750831, 0.24237577, 0.48582737, 1.45064505,
       1.58661739, 0.37064552, 1.02994633, 0.43416015, 0.38654979]), 'std_fit_time': array([5.09132436e-01, 1.78817481e-02, 9.99381109e-03, 1.53002539e-02,
       5.76237565e-03, 2.30975876e-02, 6.00471740e-03, 4.39094720e-03,
       4.88569623e-01, 9.64259170e-02, 5.75291058e-01, 2.19347238e-01,
       1.52409251e-02, 4.08718734e-03, 2.11848645e-02, 5.65800395e-02,
       5.41658207e-01, 1.30341074e-01, 1.25676875e-02, 1.12684524e-02,
       5.98005299e-02, 6.07233926e-03, 2.29442139e-02, 1.77564866e-02,
       3.77810000e-02, 5.54445464e-01, 3.68101624e-02, 7.25286211e-02,
       5.85210554e-03, 1.44781226e-01, 3.50623393e-01, 1.72064841e-01,
       5.16999660e-03, 2.81990790e+00, 5.69670415e-01, 2.55888839e-01,
       4.92045974e-03, 5.67006716e-02, 6.23691768e-02, 5.71299330e-01,
       1.72390252e-01, 2.53679484e-02, 3.36448443e-03, 1.85890317e-03,
       2.21315195e-02, 2.01788730e-02, 1.28138419e-02, 1.12461317e-01,
       5.12332990e-03, 1.97420553e-02]), 'mean_score_time': array([0.38541214, 0.84487772, 0.33046405, 0.89460079, 0.41660182,
       0.44694575, 0.30958676, 0.29401326, 0.66871357, 1.8062102 ,
       0.39989479, 0.35883697, 0.27176722, 0.22021373, 0.61836767,
       0.19571463, 0.45236683, 0.59357762, 0.50191768, 0.67420665,
       1.69246459, 0.43060454, 0.27058601, 1.80113904, 0.35491967,
       0.18430487, 4.20965846, 2.18534199, 0.17500369, 4.17898687,
       1.07018963, 0.24314872, 0.22463886, 0.37515545, 0.27780541,
       0.43631975, 0.29407358, 1.64452895, 3.28714458, 1.17073607,
       0.97860789, 0.27011315, 0.3104283 , 0.4690578 , 1.30472557,
       1.47074866, 0.45558246, 0.92669717, 0.45605421, 0.47959924]), 'std_score_time': array([0.01163162, 0.07966736, 0.00059952, 0.01785197, 0.0191369 ,
       0.00557851, 0.01774618, 0.00344284, 0.02663436, 0.01872722,
       0.03363555, 0.12764127, 0.01526634, 0.00535556, 0.0052872 ,
       0.00026374, 0.03352106, 0.07762039, 0.01278468, 0.00380875,
       0.06363258, 0.01634754, 0.00530579, 0.00259473, 0.04311966,
       0.00022687, 0.13035183, 0.06710921, 0.00047352, 0.15173822,
       0.04542675, 0.01373657, 0.00810302, 0.16762548, 0.01398677,
       0.12999379, 0.00497379, 0.01742045, 0.10628302, 0.04173002,
       0.04129469, 0.00545036, 0.00278424, 0.00069353, 0.04439401,
       0.02081539, 0.00287707, 0.05300294, 0.01004185, 0.00908719]), 'param_estimator__leaf_size': masked_array(data=[128, 33, 16, 77, 209, 287, 133, 154, 99, 113, 75, 157,
                   3, 300, 3, 300, 3, 3, 3, 3, 300, 3, 3, 3, 3, 3, 3, 3,
                   3, 3, 3, 300, 3, 300, 300, 300, 3, 3, 3, 3, 300, 300,
                   3, 300, 300, 300, 3, 300, 3, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__n_neighbors': masked_array(data=[40, 49, 47, 50, 32, 24, 14, 28, 4, 6, 3, 3, 3, 3, 10,
                   10, 3, 10, 9, 50, 9, 16, 3, 3, 3, 3, 50, 30, 3, 26, 50,
                   17, 18, 3, 3, 9, 3, 50, 20, 10, 3, 3, 3, 3, 3, 29, 3,
                   3, 5, 50],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__p': masked_array(data=[2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1,
                   1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_features': masked_array(data=[0.48951660220329585, 0.8714093375986637,
                   0.5073163702831578, 0.4980093467313629,
                   0.31185074175415906, 0.7935652116662132,
                   0.6554661122055693, 0.37020872410954064,
                   0.8710344254335834, 0.9379479298155985,
                   0.37498140563965143, 0.10806621575222874, 0.1,
                   0.8111504804007096, 0.6695859082249077,
                   0.22432959741202946, 1.0, 0.1, 0.1,
                   0.13846578806695695, 1.0, 0.1, 0.1, 1.0,
                   0.1377878273892586, 0.1, 1.0, 1.0, 0.1, 1.0, 1.0, 0.1,
                   0.1, 0.1, 0.4087094052051281, 0.1, 0.1, 1.0, 1.0, 1.0,
                   1.0, 0.1, 0.1, 0.1, 0.34986345097089744,
                   0.6093711245906818, 0.1, 0.4716657434712571, 0.1, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_samples': masked_array(data=[0.1728223247548491, 0.22109533411792712,
                   0.1172875771430549, 0.43001405225332356,
                   0.7751322806738928, 0.2300628330090972,
                   0.15669182202115867, 0.27619861756613207,
                   0.5772227084471524, 0.8933179042966948,
                   0.7319424591841955, 0.5108476477443934, 1.0, 0.1,
                   0.5115308183256562, 0.5010833355575648,
                   0.2934114660956769, 1.0, 1.0, 1.0, 1.0,
                   0.6396164691870769, 0.9062310067033605,
                   0.42535824160840996, 0.3984429558010655,
                   0.48694156211124484, 1.0, 0.5224177368346714,
                   0.23788716355392792, 1.0, 0.8065907132000388, 1.0,
                   0.8987276461569377, 0.3446020744097352,
                   0.354516688316608, 0.4525862196307021,
                   0.33537260282278347, 1.0, 0.757635523751, 1.0,
                   0.20176650954283423, 0.2804025452624002,
                   0.3672802670965545, 0.9272104276635887, 1.0,
                   0.659756995964611, 0.7206440809073877,
                   0.4914589552630937, 0.8488529430931351,
                   0.7168367526664544],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[181, 164, 128, 189, 144, 199, 89, 92, 53, 103, 50, 161,
                   78, 97, 80, 68, 50, 200, 200, 200, 200, 200, 172, 200,
                   200, 50, 200, 200, 66, 200, 54, 50, 50, 200, 50, 200,
                   200, 200, 200, 50, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('estimator__leaf_size', 128), ('estimator__n_neighbors', 40), ('estimator__p', 2), ('max_features', 0.48951660220329585), ('max_samples', 0.1728223247548491), ('n_estimators', 181)]), OrderedDict([('estimator__leaf_size', 33), ('estimator__n_neighbors', 49), ('estimator__p', 1), ('max_features', 0.8714093375986637), ('max_samples', 0.22109533411792712), ('n_estimators', 164)]), OrderedDict([('estimator__leaf_size', 16), ('estimator__n_neighbors', 47), ('estimator__p', 1), ('max_features', 0.5073163702831578), ('max_samples', 0.1172875771430549), ('n_estimators', 128)]), OrderedDict([('estimator__leaf_size', 77), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 0.4980093467313629), ('max_samples', 0.43001405225332356), ('n_estimators', 189)]), OrderedDict([('estimator__leaf_size', 209), ('estimator__n_neighbors', 32), ('estimator__p', 2), ('max_features', 0.31185074175415906), ('max_samples', 0.7751322806738928), ('n_estimators', 144)]), OrderedDict([('estimator__leaf_size', 287), ('estimator__n_neighbors', 24), ('estimator__p', 2), ('max_features', 0.7935652116662132), ('max_samples', 0.2300628330090972), ('n_estimators', 199)]), OrderedDict([('estimator__leaf_size', 133), ('estimator__n_neighbors', 14), ('estimator__p', 1), ('max_features', 0.6554661122055693), ('max_samples', 0.15669182202115867), ('n_estimators', 89)]), OrderedDict([('estimator__leaf_size', 154), ('estimator__n_neighbors', 28), ('estimator__p', 1), ('max_features', 0.37020872410954064), ('max_samples', 0.27619861756613207), ('n_estimators', 92)]), OrderedDict([('estimator__leaf_size', 99), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.8710344254335834), ('max_samples', 0.5772227084471524), ('n_estimators', 53)]), OrderedDict([('estimator__leaf_size', 113), ('estimator__n_neighbors', 6), ('estimator__p', 1), ('max_features', 0.9379479298155985), ('max_samples', 0.8933179042966948), ('n_estimators', 103)]), OrderedDict([('estimator__leaf_size', 75), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.37498140563965143), ('max_samples', 0.7319424591841955), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 157), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.10806621575222874), ('max_samples', 0.5108476477443934), ('n_estimators', 161)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 78)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.8111504804007096), ('max_samples', 0.1), ('n_estimators', 97)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 10), ('estimator__p', 1), ('max_features', 0.6695859082249077), ('max_samples', 0.5115308183256562), ('n_estimators', 80)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 10), ('estimator__p', 2), ('max_features', 0.22432959741202946), ('max_samples', 0.5010833355575648), ('n_estimators', 68)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.2934114660956769), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 10), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 9), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 0.13846578806695695), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 9), ('estimator__p', 2), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 16), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.6396164691870769), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.1), ('max_samples', 0.9062310067033605), ('n_estimators', 172)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.42535824160840996), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1377878273892586), ('max_samples', 0.3984429558010655), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.48694156211124484), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 30), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.5224177368346714), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.23788716355392792), ('n_estimators', 66)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 26), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8065907132000388), ('n_estimators', 54)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 17), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 18), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.8987276461569377), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.3446020744097352), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.4087094052051281), ('max_samples', 0.354516688316608), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 9), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.4525862196307021), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.33537260282278347), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 50), ('estimator__p', 2), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 20), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.757635523751), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 10), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.20176650954283423), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.2804025452624002), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.3672802670965545), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.9272104276635887), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.34986345097089744), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 29), ('estimator__p', 1), ('max_features', 0.6093711245906818), ('max_samples', 0.659756995964611), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.7206440809073877), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.4716657434712571), ('max_samples', 0.4914589552630937), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.8488529430931351), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.7168367526664544), ('n_estimators', 200)])], 'split0_test_score': array([-2.28392143, -2.1965806 , -2.40855617, -2.093099  , -2.09430935,
       -2.14888055, -2.07064314, -2.07831129, -2.04446472, -2.05408601,
       -2.03848694, -2.09094981, -1.99651787, -2.08663381, -1.98148232,
       -2.08868051, -1.99725484, -1.98469233, -1.98391217, -2.02949751,
       -2.11685285, -2.00361153, -2.09886488, -2.0326279 , -1.99194222,
       -1.98375545, -2.01012283, -2.01989736, -2.00094364, -1.9777316 ,
       -2.02718236, -1.99540539, -1.99959785, -1.98202226, -1.98940965,
       -1.99430887, -1.98189728, -2.09737382, -1.977729  , -2.00633322,
       -1.98520215, -1.98398599, -1.98351372, -1.99347028, -2.08462536,
       -2.00112719, -1.9901089 , -2.03154084, -1.98644796, -2.06245814]), 'split1_test_score': array([-2.59880506, -2.51799936, -2.72514469, -2.38388081, -2.36637082,
       -2.45342795, -2.34465291, -2.36689507, -2.20303824, -2.20315684,
       -2.18902663, -2.28379265, -2.18192025, -2.35034974, -2.20439608,
       -2.33571176, -2.2025583 , -2.19296691, -2.19007711, -2.29428902,
       -2.30875178, -2.23938844, -2.28373128, -2.18412391, -2.16784846,
       -2.18455014, -2.25569712, -2.27369162, -2.21165492, -2.21349492,
       -2.28663357, -2.23573459, -2.24258633, -2.18120458, -2.19082612,
       -2.21727011, -2.1818296 , -2.36760673, -2.21363562, -2.20252863,
       -2.18262901, -2.19015617, -2.17787498, -2.16032393, -2.18709148,
       -2.25371375, -2.16430178, -2.17276877, -2.17247476, -2.34316799]), 'split2_test_score': array([-2.44632297, -2.35680068, -2.58830472, -2.22279343, -2.23968736,
       -2.30228236, -2.20271008, -2.2129806 , -2.13099885, -2.13741512,
       -2.1328675 , -2.18460313, -2.09928964, -2.24869886, -2.12142869,
       -2.20851397, -2.12843826, -2.08669625, -2.08450257, -2.15588196,
       -2.2277632 , -2.12273023, -2.17911375, -2.1245597 , -2.09081536,
       -2.10389323, -2.13084915, -2.14086945, -2.1067428 , -2.11703718,
       -2.14789942, -2.11258447, -2.11930249, -2.0839019 , -2.10971559,
       -2.11727618, -2.08457306, -2.24474975, -2.12107667, -2.13653262,
       -2.10852933, -2.08908038, -2.08593593, -2.08755746, -2.14836312,
       -2.13398337, -2.08521834, -2.10835024, -2.08054022, -2.18945681]), 'mean_test_score': array([-2.44301649, -2.35712688, -2.57400186, -2.23325775, -2.23345584,
       -2.30153028, -2.20600204, -2.21939565, -2.12616727, -2.13155266,
       -2.12012702, -2.18644853, -2.09257592, -2.2285608 , -2.1024357 ,
       -2.21096875, -2.10941713, -2.0881185 , -2.08616395, -2.1598895 ,
       -2.21778928, -2.12191007, -2.18723664, -2.1137705 , -2.08353535,
       -2.09073294, -2.13222304, -2.14481948, -2.10644712, -2.10275457,
       -2.15390512, -2.11457482, -2.12049556, -2.08237625, -2.09665045,
       -2.10961839, -2.08276665, -2.23657677, -2.1041471 , -2.11513149,
       -2.09212016, -2.08774084, -2.08244154, -2.08045056, -2.14002665,
       -2.1296081 , -2.07987634, -2.10421995, -2.07982098, -2.19836098]), 'std_test_score': array([0.12857196, 0.13121886, 0.12964182, 0.11894156, 0.111156  ,
       0.12433209, 0.11188824, 0.11790113, 0.06482746, 0.06099893,
       0.06211435, 0.07873857, 0.07583894, 0.1085992 , 0.0919898 ,
       0.10086502, 0.0848871 , 0.08503369, 0.08417468, 0.10813782,
       0.07865922, 0.09625727, 0.07568964, 0.06231675, 0.07199769,
       0.08250059, 0.10025999, 0.10364871, 0.08602277, 0.09677837,
       0.10600561, 0.09812408, 0.09920322, 0.081323  , 0.08274528,
       0.09118446, 0.08163202, 0.11047339, 0.09704961, 0.08151346,
       0.08143008, 0.08417395, 0.07938611, 0.06830284, 0.04224491,
       0.10316443, 0.07121419, 0.05772998, 0.07594683, 0.11477215]), 'rank_test_score': array([49, 48, 50, 44, 45, 47, 39, 42, 28, 30, 25, 36, 13, 43, 15, 40, 20,
       10,  8, 35, 41, 27, 37, 22,  7, 11, 31, 33, 19, 16, 34, 23, 26,  4,
       14, 21,  6, 46, 17, 24, 12,  9,  5,  3, 32, 29,  2, 18,  1, 38],
      dtype=int32)}
-2.079820979056056
OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.8488529430931351), ('n_estimators', 200)])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=261, estimator__n_neighbors=39, estimator__p=1, max_features=0.9796667116754179, max_samples=0.7846077245367234, n_estimators=115;, score=-1.995 total time=   1.8s
[CV 2/3] END estimator__leaf_size=261, estimator__n_neighbors=39, estimator__p=1, max_features=0.9796667116754179, max_samples=0.7846077245367234, n_estimators=115;, score=-2.235 total time=   1.8s
[CV 3/3] END estimator__leaf_size=261, estimator__n_neighbors=39, estimator__p=1, max_features=0.9796667116754179, max_samples=0.7846077245367234, n_estimators=115;, score=-2.141 total time=   1.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=100, estimator__n_neighbors=37, estimator__p=2, max_features=0.577774382322747, max_samples=0.6266048181794063, n_estimators=81;, score=-2.109 total time=   0.6s
[CV 2/3] END estimator__leaf_size=100, estimator__n_neighbors=37, estimator__p=2, max_features=0.577774382322747, max_samples=0.6266048181794063, n_estimators=81;, score=-2.377 total time=   0.6s
[CV 3/3] END estimator__leaf_size=100, estimator__n_neighbors=37, estimator__p=2, max_features=0.577774382322747, max_samples=0.6266048181794063, n_estimators=81;, score=-2.249 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=31, estimator__n_neighbors=4, estimator__p=1, max_features=0.36945104344654167, max_samples=0.8242271540954308, n_estimators=79;, score=-1.915 total time=   0.7s
[CV 2/3] END estimator__leaf_size=31, estimator__n_neighbors=4, estimator__p=1, max_features=0.36945104344654167, max_samples=0.8242271540954308, n_estimators=79;, score=-2.077 total time=   0.7s
[CV 3/3] END estimator__leaf_size=31, estimator__n_neighbors=4, estimator__p=1, max_features=0.36945104344654167, max_samples=0.8242271540954308, n_estimators=79;, score=-2.113 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=79, estimator__n_neighbors=33, estimator__p=1, max_features=0.610663200497542, max_samples=0.7697050126626928, n_estimators=54;, score=-1.983 total time=   1.7s
[CV 2/3] END estimator__leaf_size=79, estimator__n_neighbors=33, estimator__p=1, max_features=0.610663200497542, max_samples=0.7697050126626928, n_estimators=54;, score=-2.221 total time=   0.8s
[CV 3/3] END estimator__leaf_size=79, estimator__n_neighbors=33, estimator__p=1, max_features=0.610663200497542, max_samples=0.7697050126626928, n_estimators=54;, score=-2.139 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=80, estimator__n_neighbors=15, estimator__p=1, max_features=0.5163813895390919, max_samples=0.8986005742381943, n_estimators=175;, score=-1.928 total time=   2.0s
[CV 2/3] END estimator__leaf_size=80, estimator__n_neighbors=15, estimator__p=1, max_features=0.5163813895390919, max_samples=0.8986005742381943, n_estimators=175;, score=-2.123 total time=   1.6s
[CV 3/3] END estimator__leaf_size=80, estimator__n_neighbors=15, estimator__p=1, max_features=0.5163813895390919, max_samples=0.8986005742381943, n_estimators=175;, score=-2.088 total time=   1.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=14, estimator__n_neighbors=48, estimator__p=1, max_features=0.7820661940592069, max_samples=0.5608586751763694, n_estimators=63;, score=-2.066 total time=   0.9s
[CV 2/3] END estimator__leaf_size=14, estimator__n_neighbors=48, estimator__p=1, max_features=0.7820661940592069, max_samples=0.5608586751763694, n_estimators=63;, score=-2.348 total time=   0.8s
[CV 3/3] END estimator__leaf_size=14, estimator__n_neighbors=48, estimator__p=1, max_features=0.7820661940592069, max_samples=0.5608586751763694, n_estimators=63;, score=-2.192 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=183, estimator__n_neighbors=32, estimator__p=2, max_features=0.6571416736511511, max_samples=0.9960604054518707, n_estimators=62;, score=-2.047 total time=   0.9s
[CV 2/3] END estimator__leaf_size=183, estimator__n_neighbors=32, estimator__p=2, max_features=0.6571416736511511, max_samples=0.9960604054518707, n_estimators=62;, score=-2.301 total time=   0.8s
[CV 3/3] END estimator__leaf_size=183, estimator__n_neighbors=32, estimator__p=2, max_features=0.6571416736511511, max_samples=0.9960604054518707, n_estimators=62;, score=-2.220 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=96, estimator__n_neighbors=50, estimator__p=2, max_features=0.4727900289437643, max_samples=0.7626423339778339, n_estimators=62;, score=-2.113 total time=   0.6s
[CV 2/3] END estimator__leaf_size=96, estimator__n_neighbors=50, estimator__p=2, max_features=0.4727900289437643, max_samples=0.7626423339778339, n_estimators=62;, score=-2.387 total time=   0.6s
[CV 3/3] END estimator__leaf_size=96, estimator__n_neighbors=50, estimator__p=2, max_features=0.4727900289437643, max_samples=0.7626423339778339, n_estimators=62;, score=-2.257 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=289, estimator__n_neighbors=5, estimator__p=1, max_features=0.9997601639723311, max_samples=0.12750090574311082, n_estimators=91;, score=-1.980 total time=   0.8s
[CV 2/3] END estimator__leaf_size=289, estimator__n_neighbors=5, estimator__p=1, max_features=0.9997601639723311, max_samples=0.12750090574311082, n_estimators=91;, score=-2.201 total time=   0.5s
[CV 3/3] END estimator__leaf_size=289, estimator__n_neighbors=5, estimator__p=1, max_features=0.9997601639723311, max_samples=0.12750090574311082, n_estimators=91;, score=-2.144 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=197, estimator__n_neighbors=39, estimator__p=2, max_features=0.8051447106710171, max_samples=0.4859954169521311, n_estimators=102;, score=-2.136 total time=   0.8s
[CV 2/3] END estimator__leaf_size=197, estimator__n_neighbors=39, estimator__p=2, max_features=0.8051447106710171, max_samples=0.4859954169521311, n_estimators=102;, score=-2.407 total time=   0.8s
[CV 3/3] END estimator__leaf_size=197, estimator__n_neighbors=39, estimator__p=2, max_features=0.8051447106710171, max_samples=0.4859954169521311, n_estimators=102;, score=-2.271 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.016 total time=   3.6s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.144 total time=   3.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.199 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=69;, score=-2.023 total time=   1.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=69;, score=-2.145 total time=   1.6s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=69;, score=-2.211 total time=   1.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.23013116561712801, max_samples=0.2533969985708045, n_estimators=200;, score=-1.957 total time=   0.4s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.23013116561712801, max_samples=0.2533969985708045, n_estimators=200;, score=-2.180 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.23013116561712801, max_samples=0.2533969985708045, n_estimators=200;, score=-2.114 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-1.937 total time=   0.7s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.139 total time=   0.7s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=10, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.101 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3890509242512855, max_samples=1.0, n_estimators=200;, score=-1.943 total time=   1.6s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3890509242512855, max_samples=1.0, n_estimators=200;, score=-2.099 total time=   1.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3890509242512855, max_samples=1.0, n_estimators=200;, score=-2.134 total time=   1.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3007588523518895, max_samples=0.7199596906827822, n_estimators=200;, score=-1.910 total time=   1.0s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3007588523518895, max_samples=0.7199596906827822, n_estimators=200;, score=-2.079 total time=   1.0s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3007588523518895, max_samples=0.7199596906827822, n_estimators=200;, score=-2.091 total time=   1.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7026417712211988, n_estimators=200;, score=-1.918 total time=   0.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7026417712211988, n_estimators=200;, score=-2.095 total time=   0.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.7026417712211988, n_estimators=200;, score=-2.088 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=287, estimator__n_neighbors=3, estimator__p=1, max_features=0.29739908414143157, max_samples=0.7071209372579385, n_estimators=200;, score=-1.913 total time=   1.0s
[CV 2/3] END estimator__leaf_size=287, estimator__n_neighbors=3, estimator__p=1, max_features=0.29739908414143157, max_samples=0.7071209372579385, n_estimators=200;, score=-2.073 total time=   1.0s
[CV 3/3] END estimator__leaf_size=287, estimator__n_neighbors=3, estimator__p=1, max_features=0.29739908414143157, max_samples=0.7071209372579385, n_estimators=200;, score=-2.099 total time=   1.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=296, estimator__n_neighbors=3, estimator__p=1, max_features=0.24028163903205801, max_samples=0.7294687656636407, n_estimators=200;, score=-1.913 total time=   0.9s
[CV 2/3] END estimator__leaf_size=296, estimator__n_neighbors=3, estimator__p=1, max_features=0.24028163903205801, max_samples=0.7294687656636407, n_estimators=200;, score=-2.076 total time=   0.9s
[CV 3/3] END estimator__leaf_size=296, estimator__n_neighbors=3, estimator__p=1, max_features=0.24028163903205801, max_samples=0.7294687656636407, n_estimators=200;, score=-2.095 total time=   0.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.10006179950407564, max_samples=0.738694818878428, n_estimators=200;, score=-2.008 total time=   0.5s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.10006179950407564, max_samples=0.738694818878428, n_estimators=200;, score=-2.212 total time=   0.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.10006179950407564, max_samples=0.738694818878428, n_estimators=200;, score=-2.189 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=11, estimator__p=1, max_features=0.6699054813303905, max_samples=0.6505333667203659, n_estimators=200;, score=-1.926 total time=   1.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=11, estimator__p=1, max_features=0.6699054813303905, max_samples=0.6505333667203659, n_estimators=200;, score=-2.114 total time=   2.0s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=11, estimator__p=1, max_features=0.6699054813303905, max_samples=0.6505333667203659, n_estimators=200;, score=-2.095 total time=   1.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=7, estimator__p=1, max_features=0.3374988799139129, max_samples=0.7700626280419715, n_estimators=200;, score=-1.910 total time=   1.2s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=7, estimator__p=1, max_features=0.3374988799139129, max_samples=0.7700626280419715, n_estimators=200;, score=-2.090 total time=   1.1s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=7, estimator__p=1, max_features=0.3374988799139129, max_samples=0.7700626280419715, n_estimators=200;, score=-2.088 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.1, n_estimators=71;, score=-2.101 total time=   0.3s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.1, n_estimators=71;, score=-2.373 total time=   0.3s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=0.1, n_estimators=71;, score=-2.234 total time=   0.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.692179172229783, n_estimators=63;, score=-1.962 total time=   0.4s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.692179172229783, n_estimators=63;, score=-2.197 total time=   0.3s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.692179172229783, n_estimators=63;, score=-2.116 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-1.942 total time=   3.7s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.140 total time=   3.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.098 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.28068354113945065, max_samples=0.6923539056911827, n_estimators=50;, score=-1.918 total time=   1.7s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.28068354113945065, max_samples=0.6923539056911827, n_estimators=50;, score=-2.094 total time=   0.4s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.28068354113945065, max_samples=0.6923539056911827, n_estimators=50;, score=-2.096 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=258, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=174;, score=-2.034 total time=   6.6s
[CV 2/3] END estimator__leaf_size=258, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=174;, score=-2.297 total time=   0.6s
[CV 3/3] END estimator__leaf_size=258, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=174;, score=-2.176 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.44846398420045086, max_samples=0.7202881421151905, n_estimators=200;, score=-1.914 total time=   1.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.44846398420045086, max_samples=0.7202881421151905, n_estimators=200;, score=-2.082 total time=   1.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.44846398420045086, max_samples=0.7202881421151905, n_estimators=200;, score=-2.095 total time=   1.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2858131384418098, max_samples=0.7256922903454506, n_estimators=200;, score=-1.910 total time=   1.0s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2858131384418098, max_samples=0.7256922903454506, n_estimators=200;, score=-2.087 total time=   1.0s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2858131384418098, max_samples=0.7256922903454506, n_estimators=200;, score=-2.090 total time=   0.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.319517772946596, max_samples=0.7870659802104175, n_estimators=200;, score=-1.909 total time=   1.0s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.319517772946596, max_samples=0.7870659802104175, n_estimators=200;, score=-2.077 total time=   1.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.319517772946596, max_samples=0.7870659802104175, n_estimators=200;, score=-2.094 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=24, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=200;, score=-2.261 total time=   0.7s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=24, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=200;, score=-2.561 total time=   0.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=24, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=200;, score=-2.417 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.708720052565016, max_samples=0.42793998486562745, n_estimators=200;, score=-1.923 total time=   1.4s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.708720052565016, max_samples=0.42793998486562745, n_estimators=200;, score=-2.087 total time=   1.4s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.708720052565016, max_samples=0.42793998486562745, n_estimators=200;, score=-2.102 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3318212146281383, max_samples=0.4926102520026102, n_estimators=200;, score=-1.910 total time=   0.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3318212146281383, max_samples=0.4926102520026102, n_estimators=200;, score=-2.079 total time=   0.8s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.3318212146281383, max_samples=0.4926102520026102, n_estimators=200;, score=-2.096 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.42138336662179054, max_samples=0.5694159225460563, n_estimators=200;, score=-1.913 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.42138336662179054, max_samples=0.5694159225460563, n_estimators=200;, score=-2.083 total time=   1.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.42138336662179054, max_samples=0.5694159225460563, n_estimators=200;, score=-2.097 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=8, estimator__p=1, max_features=0.5028050758663669, max_samples=0.8216465899334613, n_estimators=200;, score=-1.911 total time=   1.7s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=8, estimator__p=1, max_features=0.5028050758663669, max_samples=0.8216465899334613, n_estimators=200;, score=-2.094 total time=   1.7s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=8, estimator__p=1, max_features=0.5028050758663669, max_samples=0.8216465899334613, n_estimators=200;, score=-2.087 total time=   1.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4231781444405831, max_samples=0.3893398462135035, n_estimators=200;, score=-1.918 total time=   0.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4231781444405831, max_samples=0.3893398462135035, n_estimators=200;, score=-2.091 total time=   0.8s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.4231781444405831, max_samples=0.3893398462135035, n_estimators=200;, score=-2.090 total time=   0.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.36364748255655843, max_samples=0.7549964752467713, n_estimators=200;, score=-1.910 total time=   1.3s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.36364748255655843, max_samples=0.7549964752467713, n_estimators=200;, score=-2.084 total time=   1.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.36364748255655843, max_samples=0.7549964752467713, n_estimators=200;, score=-2.090 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.20809824068261068, max_samples=0.8195714105464114, n_estimators=200;, score=-1.907 total time=   0.9s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.20809824068261068, max_samples=0.8195714105464114, n_estimators=200;, score=-2.080 total time=   0.9s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.20809824068261068, max_samples=0.8195714105464114, n_estimators=200;, score=-2.093 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.8148885722070267, n_estimators=200;, score=-1.936 total time=   2.9s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.8148885722070267, n_estimators=200;, score=-2.133 total time=   3.3s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.8148885722070267, n_estimators=200;, score=-2.098 total time=   3.0s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.2706202001749777, max_samples=0.8160725884163985, n_estimators=200;, score=-1.908 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.2706202001749777, max_samples=0.8160725884163985, n_estimators=200;, score=-2.088 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.2706202001749777, max_samples=0.8160725884163985, n_estimators=200;, score=-2.091 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.8377153634420589, n_estimators=200;, score=-1.912 total time=   0.6s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.8377153634420589, n_estimators=200;, score=-2.092 total time=   0.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.8377153634420589, n_estimators=200;, score=-2.090 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-1.995 total time=   0.6s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.228 total time=   0.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=29, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.139 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.2974993041734568, max_samples=0.7779561299589106, n_estimators=200;, score=-1.908 total time=   1.2s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.2974993041734568, max_samples=0.7779561299589106, n_estimators=200;, score=-2.073 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=4, estimator__p=1, max_features=0.2974993041734568, max_samples=0.7779561299589106, n_estimators=200;, score=-2.094 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.287252728386307, max_samples=0.7785254588046029, n_estimators=200;, score=-1.916 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.287252728386307, max_samples=0.7785254588046029, n_estimators=200;, score=-2.078 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=0.287252728386307, max_samples=0.7785254588046029, n_estimators=200;, score=-2.102 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.28985083268617345, max_samples=0.7951324407442952, n_estimators=200;, score=-1.908 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.28985083268617345, max_samples=0.7951324407442952, n_estimators=200;, score=-2.089 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=6, estimator__p=1, max_features=0.28985083268617345, max_samples=0.7951324407442952, n_estimators=200;, score=-2.090 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3250995001481258, max_samples=0.7761345739781887, n_estimators=200;, score=-1.907 total time=   1.2s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3250995001481258, max_samples=0.7761345739781887, n_estimators=200;, score=-2.077 total time=   1.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3250995001481258, max_samples=0.7761345739781887, n_estimators=200;, score=-2.094 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3244070213084634, max_samples=0.7761846863045262, n_estimators=200;, score=-1.907 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3244070213084634, max_samples=0.7761846863045262, n_estimators=200;, score=-2.075 total time=   1.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3244070213084634, max_samples=0.7761846863045262, n_estimators=200;, score=-2.094 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.29153698994254784, max_samples=0.7927155726292151, n_estimators=200;, score=-1.907 total time=   1.1s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.29153698994254784, max_samples=0.7927155726292151, n_estimators=200;, score=-2.081 total time=   1.1s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.29153698994254784, max_samples=0.7927155726292151, n_estimators=200;, score=-2.093 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2914993958475033, max_samples=0.7918337014048712, n_estimators=200;, score=-1.907 total time=   1.1s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2914993958475033, max_samples=0.7918337014048712, n_estimators=200;, score=-2.081 total time=   1.1s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=5, estimator__p=1, max_features=0.2914993958475033, max_samples=0.7918337014048712, n_estimators=200;, score=-2.093 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3043864748029781, max_samples=0.7807035997572565, n_estimators=200;, score=-1.909 total time=   1.1s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3043864748029781, max_samples=0.7807035997572565, n_estimators=200;, score=-2.077 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=5, estimator__p=1, max_features=0.3043864748029781, max_samples=0.7807035997572565, n_estimators=200;, score=-2.093 total time=   1.1s
{'mean_fit_time': array([0.948675  , 0.40379111, 0.34376375, 0.69933399, 0.93206334,
       0.45257219, 0.59239451, 0.34937032, 0.23116223, 0.49627972,
       1.82894715, 0.80209502, 0.17228174, 0.27408202, 0.80671938,
       0.48023748, 0.2305057 , 0.47349715, 0.4147381 , 0.23259648,
       0.99300146, 0.57649008, 0.14607851, 0.16997059, 1.84820112,
       0.6073343 , 2.16216596, 0.7529215 , 0.47670786, 0.61201962,
       0.2742118 , 0.68184098, 0.4015402 , 0.57947326, 0.87849045,
       0.39296095, 0.62444242, 0.41302506, 1.67180967, 0.55347713,
       0.25284473, 0.25437673, 0.57870022, 0.56127779, 0.56763768,
       0.59472895, 0.58849351, 0.54699755, 0.54992509, 0.56173579]), 'std_fit_time': array([6.44243352e-03, 4.64747415e-03, 3.34364899e-03, 4.33441869e-01,
       1.32020202e-01, 5.37089350e-02, 5.00947304e-02, 6.46470335e-04,
       4.14542507e-02, 1.82901874e-02, 2.01272091e-02, 1.07411613e-02,
       3.50783739e-02, 9.59836573e-03, 1.48481004e-02, 8.17036457e-03,
       5.61816559e-03, 5.99658923e-04, 4.11275159e-03, 6.29374860e-03,
       1.11833697e-01, 7.57705109e-03, 8.45289609e-03, 1.34957122e-02,
       1.52920070e-03, 5.80950707e-01, 2.69330191e+00, 5.56225575e-02,
       6.49223376e-03, 1.00485425e-01, 4.52297683e-03, 1.87418543e-02,
       5.22435622e-03, 2.50590658e-02, 9.30135058e-03, 4.65263705e-03,
       1.17039515e-02, 2.89076175e-03, 1.77235818e-01, 4.31903329e-02,
       6.06361309e-03, 4.32289357e-02, 9.98458855e-03, 6.83700826e-03,
       8.89161046e-03, 1.52004864e-02, 1.09129556e-02, 1.02736743e-02,
       1.56120543e-03, 1.23817582e-02]), 'mean_score_time': array([0.85654751, 0.24342227, 0.33129501, 0.35467641, 0.83577609,
       0.37227527, 0.27682567, 0.22316623, 0.34447694, 0.27886049,
       1.73904641, 0.74668233, 0.27271922, 0.37969025, 0.7580564 ,
       0.51889118, 0.2998306 , 0.53550053, 0.46507812, 0.2405142 ,
       0.87430668, 0.58940578, 0.14451059, 0.18389901, 1.7907927 ,
       0.22262406, 0.45282547, 0.7102348 , 0.49718253, 0.57756845,
       0.37301167, 0.67482948, 0.42465067, 0.58030136, 0.80727148,
       0.43843961, 0.61985882, 0.446383  , 1.42432896, 0.54117147,
       0.32247043, 0.36891365, 0.56755877, 0.54164179, 0.5406522 ,
       0.57492057, 0.59766078, 0.54557991, 0.5530711 , 0.54754233]), 'std_score_time': array([0.01542496, 0.0043901 , 0.00405838, 0.00426147, 0.06594877,
       0.01014564, 0.00472374, 0.00540534, 0.13033316, 0.00104464,
       0.02887362, 0.00293596, 0.00836471, 0.01841797, 0.00695591,
       0.01659365, 0.00532075, 0.012223  , 0.01369227, 0.00546352,
       0.01558777, 0.01416245, 0.00017578, 0.00084818, 0.04179243,
       0.00579977, 0.13422589, 0.01871166, 0.02171516, 0.02636316,
       0.00406526, 0.01913272, 0.00408285, 0.01468369, 0.00546541,
       0.02934316, 0.00874033, 0.00871427, 0.04234501, 0.01472085,
       0.00445478, 0.00926566, 0.00440254, 0.01383501, 0.01417862,
       0.01019928, 0.05004193, 0.00437827, 0.0100305 , 0.00351066]), 'param_estimator__leaf_size': masked_array(data=[261, 100, 31, 79, 80, 14, 183, 96, 289, 197, 300, 3,
                   300, 300, 300, 300, 3, 287, 296, 300, 300, 3, 300, 300,
                   300, 300, 258, 3, 3, 300, 300, 300, 300, 300, 300, 300,
                   300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
                   3, 3, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__n_neighbors': masked_array(data=[39, 37, 4, 33, 15, 48, 32, 50, 5, 39, 3, 3, 6, 10, 3,
                   5, 3, 3, 3, 3, 11, 7, 3, 14, 23, 4, 50, 5, 5, 5, 24, 3,
                   3, 4, 8, 3, 6, 4, 17, 5, 3, 29, 4, 3, 6, 5, 5, 5, 5, 5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__p': masked_array(data=[1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_features': masked_array(data=[0.9796667116754179, 0.577774382322747,
                   0.36945104344654167, 0.610663200497542,
                   0.5163813895390919, 0.7820661940592069,
                   0.6571416736511511, 0.4727900289437643,
                   0.9997601639723311, 0.8051447106710171, 1.0, 1.0,
                   0.23013116561712801, 0.1, 0.3890509242512855,
                   0.3007588523518895, 0.1, 0.29739908414143157,
                   0.24028163903205801, 0.10006179950407564,
                   0.6699054813303905, 0.3374988799139129, 0.1, 0.1, 1.0,
                   0.28068354113945065, 0.1, 0.44846398420045086,
                   0.2858131384418098, 0.319517772946596, 1.0,
                   0.708720052565016, 0.3318212146281383,
                   0.42138336662179054, 0.5028050758663669,
                   0.4231781444405831, 0.36364748255655843,
                   0.20809824068261068, 1.0, 0.2706202001749777, 0.1, 0.1,
                   0.2974993041734568, 0.287252728386307,
                   0.28985083268617345, 0.3250995001481258,
                   0.3244070213084634, 0.29153698994254784,
                   0.2914993958475033, 0.3043864748029781],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_samples': masked_array(data=[0.7846077245367234, 0.6266048181794063,
                   0.8242271540954308, 0.7697050126626928,
                   0.8986005742381943, 0.5608586751763694,
                   0.9960604054518707, 0.7626423339778339,
                   0.12750090574311082, 0.4859954169521311, 1.0, 1.0,
                   0.2533969985708045, 1.0, 1.0, 0.7199596906827822,
                   0.7026417712211988, 0.7071209372579385,
                   0.7294687656636407, 0.738694818878428,
                   0.6505333667203659, 0.7700626280419715, 0.1,
                   0.692179172229783, 1.0, 0.6923539056911827, 1.0,
                   0.7202881421151905, 0.7256922903454506,
                   0.7870659802104175, 0.1, 0.42793998486562745,
                   0.4926102520026102, 0.5694159225460563,
                   0.8216465899334613, 0.3893398462135035,
                   0.7549964752467713, 0.8195714105464114,
                   0.8148885722070267, 0.8160725884163985,
                   0.8377153634420589, 1.0, 0.7779561299589106,
                   0.7785254588046029, 0.7951324407442952,
                   0.7761345739781887, 0.7761846863045262,
                   0.7927155726292151, 0.7918337014048712,
                   0.7807035997572565],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[115, 81, 79, 54, 175, 63, 62, 62, 91, 102, 200, 69,
                   200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 71,
                   63, 200, 50, 174, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('estimator__leaf_size', 261), ('estimator__n_neighbors', 39), ('estimator__p', 1), ('max_features', 0.9796667116754179), ('max_samples', 0.7846077245367234), ('n_estimators', 115)]), OrderedDict([('estimator__leaf_size', 100), ('estimator__n_neighbors', 37), ('estimator__p', 2), ('max_features', 0.577774382322747), ('max_samples', 0.6266048181794063), ('n_estimators', 81)]), OrderedDict([('estimator__leaf_size', 31), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.36945104344654167), ('max_samples', 0.8242271540954308), ('n_estimators', 79)]), OrderedDict([('estimator__leaf_size', 79), ('estimator__n_neighbors', 33), ('estimator__p', 1), ('max_features', 0.610663200497542), ('max_samples', 0.7697050126626928), ('n_estimators', 54)]), OrderedDict([('estimator__leaf_size', 80), ('estimator__n_neighbors', 15), ('estimator__p', 1), ('max_features', 0.5163813895390919), ('max_samples', 0.8986005742381943), ('n_estimators', 175)]), OrderedDict([('estimator__leaf_size', 14), ('estimator__n_neighbors', 48), ('estimator__p', 1), ('max_features', 0.7820661940592069), ('max_samples', 0.5608586751763694), ('n_estimators', 63)]), OrderedDict([('estimator__leaf_size', 183), ('estimator__n_neighbors', 32), ('estimator__p', 2), ('max_features', 0.6571416736511511), ('max_samples', 0.9960604054518707), ('n_estimators', 62)]), OrderedDict([('estimator__leaf_size', 96), ('estimator__n_neighbors', 50), ('estimator__p', 2), ('max_features', 0.4727900289437643), ('max_samples', 0.7626423339778339), ('n_estimators', 62)]), OrderedDict([('estimator__leaf_size', 289), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.9997601639723311), ('max_samples', 0.12750090574311082), ('n_estimators', 91)]), OrderedDict([('estimator__leaf_size', 197), ('estimator__n_neighbors', 39), ('estimator__p', 2), ('max_features', 0.8051447106710171), ('max_samples', 0.4859954169521311), ('n_estimators', 102)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 69)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 6), ('estimator__p', 1), ('max_features', 0.23013116561712801), ('max_samples', 0.2533969985708045), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 10), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.3890509242512855), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.3007588523518895), ('max_samples', 0.7199596906827822), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.7026417712211988), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 287), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.29739908414143157), ('max_samples', 0.7071209372579385), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 296), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.24028163903205801), ('max_samples', 0.7294687656636407), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.10006179950407564), ('max_samples', 0.738694818878428), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 11), ('estimator__p', 1), ('max_features', 0.6699054813303905), ('max_samples', 0.6505333667203659), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 7), ('estimator__p', 1), ('max_features', 0.3374988799139129), ('max_samples', 0.7700626280419715), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.1), ('max_samples', 0.1), ('n_estimators', 71)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 14), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.692179172229783), ('n_estimators', 63)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 23), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.28068354113945065), ('max_samples', 0.6923539056911827), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 258), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 174)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.44846398420045086), ('max_samples', 0.7202881421151905), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.2858131384418098), ('max_samples', 0.7256922903454506), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.319517772946596), ('max_samples', 0.7870659802104175), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 24), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.1), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.708720052565016), ('max_samples', 0.42793998486562745), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.3318212146281383), ('max_samples', 0.4926102520026102), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.42138336662179054), ('max_samples', 0.5694159225460563), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 8), ('estimator__p', 1), ('max_features', 0.5028050758663669), ('max_samples', 0.8216465899334613), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.4231781444405831), ('max_samples', 0.3893398462135035), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 6), ('estimator__p', 1), ('max_features', 0.36364748255655843), ('max_samples', 0.7549964752467713), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.20809824068261068), ('max_samples', 0.8195714105464114), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 17), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8148885722070267), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.2706202001749777), ('max_samples', 0.8160725884163985), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.8377153634420589), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 29), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.2974993041734568), ('max_samples', 0.7779561299589106), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.287252728386307), ('max_samples', 0.7785254588046029), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 6), ('estimator__p', 1), ('max_features', 0.28985083268617345), ('max_samples', 0.7951324407442952), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.3250995001481258), ('max_samples', 0.7761345739781887), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.3244070213084634), ('max_samples', 0.7761846863045262), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.29153698994254784), ('max_samples', 0.7927155726292151), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.2914993958475033), ('max_samples', 0.7918337014048712), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 5), ('estimator__p', 1), ('max_features', 0.3043864748029781), ('max_samples', 0.7807035997572565), ('n_estimators', 200)])], 'split0_test_score': array([-1.99520249, -2.10906263, -1.9146343 , -1.98332132, -1.92802761,
       -2.06555494, -2.04715746, -2.11286318, -1.97970612, -2.13629313,
       -2.01622467, -2.02301797, -1.95723412, -1.93683921, -1.94327598,
       -1.90993726, -1.91773871, -1.91293033, -1.91343594, -2.00816296,
       -1.92564442, -1.91037278, -2.10115664, -1.96184421, -1.9424686 ,
       -1.91820649, -2.03413387, -1.9143711 , -1.9095244 , -1.90941649,
       -2.2606574 , -1.92266107, -1.90956429, -1.9134005 , -1.91128619,
       -1.91817532, -1.90970527, -1.90691196, -1.93594497, -1.90834175,
       -1.91179258, -1.99528969, -1.90791527, -1.91612184, -1.90804882,
       -1.90697238, -1.90688064, -1.90715666, -1.90680153, -1.90949933]), 'split1_test_score': array([-2.23548879, -2.3770608 , -2.07656677, -2.22059679, -2.12270328,
       -2.34764008, -2.30066025, -2.38675456, -2.20080303, -2.40727405,
       -2.1440403 , -2.14472266, -2.18021619, -2.13937892, -2.09923337,
       -2.07943232, -2.09481947, -2.07320411, -2.07605733, -2.21163438,
       -2.11414827, -2.08973883, -2.37294794, -2.19650716, -2.1400742 ,
       -2.09419577, -2.2970598 , -2.08237649, -2.08684237, -2.07700822,
       -2.56052526, -2.08729882, -2.07861284, -2.0834432 , -2.0936146 ,
       -2.09056353, -2.08447345, -2.08029319, -2.13280795, -2.08765019,
       -2.09238882, -2.22785706, -2.07278083, -2.07784894, -2.08857131,
       -2.0770089 , -2.07529821, -2.0810947 , -2.0810947 , -2.07745782]), 'split2_test_score': array([-2.14081823, -2.24936017, -2.11347865, -2.13897152, -2.08792492,
       -2.1915985 , -2.2200794 , -2.25660718, -2.14402865, -2.27086411,
       -2.19943397, -2.2110554 , -2.11421536, -2.10112031, -2.13387672,
       -2.09054729, -2.08801296, -2.09867632, -2.09504423, -2.18920867,
       -2.09540145, -2.08751668, -2.23352556, -2.1160848 , -2.09752346,
       -2.0962954 , -2.17616412, -2.09469082, -2.09048305, -2.09357652,
       -2.41720437, -2.10232524, -2.09649273, -2.09713567, -2.08712086,
       -2.09005428, -2.09049844, -2.09255033, -2.09813476, -2.09056995,
       -2.08966981, -2.13949116, -2.09393967, -2.10220647, -2.08964606,
       -2.09413203, -2.09424197, -2.09274354, -2.09304137, -2.09341058]), 'mean_test_score': array([-2.1238365 , -2.2451612 , -2.03489324, -2.11429655, -2.0462186 ,
       -2.20159784, -2.18929904, -2.25207498, -2.10817926, -2.2714771 ,
       -2.11989965, -2.12626535, -2.08388856, -2.05911282, -2.05879536,
       -2.02663896, -2.03352371, -2.02827025, -2.02817917, -2.13633534,
       -2.04506471, -2.02920943, -2.23587671, -2.09147872, -2.06002208,
       -2.03623255, -2.16911926, -2.03047947, -2.02894994, -2.02666707,
       -2.41279567, -2.03742838, -2.02822328, -2.03132646, -2.03067388,
       -2.03293104, -2.02822572, -2.02658516, -2.05562922, -2.02885396,
       -2.03128374, -2.1208793 , -2.02487859, -2.03205908, -2.0287554 ,
       -2.02603777, -2.02547361, -2.0269983 , -2.0269792 , -2.02678924]), 'std_test_score': array([0.09882867, 0.10945008, 0.0863608 , 0.09842612, 0.08477113,
       0.11537763, 0.10575597, 0.1118616 , 0.09375444, 0.11062835,
       0.07671805, 0.07786751, 0.09352375, 0.08785995, 0.08289988,
       0.08264523, 0.0819195 , 0.08221793, 0.08150514, 0.0910928 ,
       0.08478901, 0.0840351 , 0.11097079, 0.09736792, 0.08491862,
       0.08346143, 0.10745459, 0.08225479, 0.08445969, 0.08318414,
       0.12246023, 0.08138427, 0.0842215 , 0.0835734 , 0.08446146,
       0.08114482, 0.0838427 , 0.08476955, 0.0858052 , 0.08522334,
       0.0845003 , 0.095853  , 0.08315543, 0.08258089, 0.08535357,
       0.08448166, 0.08421375, 0.08487417, 0.08511829, 0.08319181]), 'rank_test_score': array([40, 47, 25, 37, 29, 45, 44, 48, 36, 49, 38, 41, 34, 32, 31,  5, 24,
       13, 10, 42, 28, 17, 46, 35, 33, 26, 43, 18, 16,  6, 50, 27, 11, 21,
       19, 23, 12,  4, 30, 15, 20, 39,  1, 22, 14,  3,  2,  9,  8,  7],
      dtype=int32)}
-2.0248785886744938
OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 4), ('estimator__p', 1), ('max_features', 0.2974993041734568), ('max_samples', 0.7779561299589106), ('n_estimators', 200)])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=242, estimator__n_neighbors=11, estimator__p=1, max_features=0.2084958123530349, max_samples=0.20495784372049936, n_estimators=127;, score=-2.161 total time=   0.4s
[CV 2/3] END estimator__leaf_size=242, estimator__n_neighbors=11, estimator__p=1, max_features=0.2084958123530349, max_samples=0.20495784372049936, n_estimators=127;, score=-2.481 total time=   0.4s
[CV 3/3] END estimator__leaf_size=242, estimator__n_neighbors=11, estimator__p=1, max_features=0.2084958123530349, max_samples=0.20495784372049936, n_estimators=127;, score=-2.282 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=28, estimator__n_neighbors=24, estimator__p=2, max_features=0.4768068086286734, max_samples=0.8963781829594161, n_estimators=74;, score=-2.211 total time=   0.7s
[CV 2/3] END estimator__leaf_size=28, estimator__n_neighbors=24, estimator__p=2, max_features=0.4768068086286734, max_samples=0.8963781829594161, n_estimators=74;, score=-2.519 total time=   0.7s
[CV 3/3] END estimator__leaf_size=28, estimator__n_neighbors=24, estimator__p=2, max_features=0.4768068086286734, max_samples=0.8963781829594161, n_estimators=74;, score=-2.324 total time=   0.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=28, estimator__n_neighbors=49, estimator__p=1, max_features=0.2501459112798443, max_samples=0.6231411664876859, n_estimators=185;, score=-2.176 total time=   0.7s
[CV 2/3] END estimator__leaf_size=28, estimator__n_neighbors=49, estimator__p=1, max_features=0.2501459112798443, max_samples=0.6231411664876859, n_estimators=185;, score=-2.498 total time=   0.7s
[CV 3/3] END estimator__leaf_size=28, estimator__n_neighbors=49, estimator__p=1, max_features=0.2501459112798443, max_samples=0.6231411664876859, n_estimators=185;, score=-2.309 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=45, estimator__n_neighbors=45, estimator__p=2, max_features=0.7718416199819327, max_samples=0.20313309568827612, n_estimators=79;, score=-2.328 total time=   0.5s
[CV 2/3] END estimator__leaf_size=45, estimator__n_neighbors=45, estimator__p=2, max_features=0.7718416199819327, max_samples=0.20313309568827612, n_estimators=79;, score=-2.668 total time=   0.4s
[CV 3/3] END estimator__leaf_size=45, estimator__n_neighbors=45, estimator__p=2, max_features=0.7718416199819327, max_samples=0.20313309568827612, n_estimators=79;, score=-2.492 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=289, estimator__n_neighbors=30, estimator__p=2, max_features=0.9998489724362185, max_samples=0.23464556508090628, n_estimators=99;, score=-2.280 total time=   0.5s
[CV 2/3] END estimator__leaf_size=289, estimator__n_neighbors=30, estimator__p=2, max_features=0.9998489724362185, max_samples=0.23464556508090628, n_estimators=99;, score=-2.604 total time=   0.6s
[CV 3/3] END estimator__leaf_size=289, estimator__n_neighbors=30, estimator__p=2, max_features=0.9998489724362185, max_samples=0.23464556508090628, n_estimators=99;, score=-2.428 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=27, estimator__n_neighbors=47, estimator__p=1, max_features=0.6262596614363548, max_samples=0.3052507920575558, n_estimators=164;, score=-2.235 total time=   0.8s
[CV 2/3] END estimator__leaf_size=27, estimator__n_neighbors=47, estimator__p=1, max_features=0.6262596614363548, max_samples=0.3052507920575558, n_estimators=164;, score=-2.548 total time=   0.8s
[CV 3/3] END estimator__leaf_size=27, estimator__n_neighbors=47, estimator__p=1, max_features=0.6262596614363548, max_samples=0.3052507920575558, n_estimators=164;, score=-2.378 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=188, estimator__n_neighbors=6, estimator__p=1, max_features=0.9177357303136447, max_samples=0.15487514496555058, n_estimators=113;, score=-2.151 total time=   0.6s
[CV 2/3] END estimator__leaf_size=188, estimator__n_neighbors=6, estimator__p=1, max_features=0.9177357303136447, max_samples=0.15487514496555058, n_estimators=113;, score=-2.441 total time=   0.5s
[CV 3/3] END estimator__leaf_size=188, estimator__n_neighbors=6, estimator__p=1, max_features=0.9177357303136447, max_samples=0.15487514496555058, n_estimators=113;, score=-2.234 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=139, estimator__n_neighbors=3, estimator__p=1, max_features=0.8344968539264455, max_samples=0.40522890620622276, n_estimators=90;, score=-2.213 total time=   0.8s
[CV 2/3] END estimator__leaf_size=139, estimator__n_neighbors=3, estimator__p=1, max_features=0.8344968539264455, max_samples=0.40522890620622276, n_estimators=90;, score=-2.412 total time=   0.8s
[CV 3/3] END estimator__leaf_size=139, estimator__n_neighbors=3, estimator__p=1, max_features=0.8344968539264455, max_samples=0.40522890620622276, n_estimators=90;, score=-2.218 total time=   0.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=9, estimator__n_neighbors=33, estimator__p=1, max_features=0.3024792640915609, max_samples=0.9147263759961813, n_estimators=192;, score=-2.135 total time=   1.2s
[CV 2/3] END estimator__leaf_size=9, estimator__n_neighbors=33, estimator__p=1, max_features=0.3024792640915609, max_samples=0.9147263759961813, n_estimators=192;, score=-2.443 total time=   1.2s
[CV 3/3] END estimator__leaf_size=9, estimator__n_neighbors=33, estimator__p=1, max_features=0.3024792640915609, max_samples=0.9147263759961813, n_estimators=192;, score=-2.243 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=31, estimator__n_neighbors=13, estimator__p=2, max_features=0.38162372744930295, max_samples=0.3531381972330443, n_estimators=50;, score=-2.228 total time=   1.6s
[CV 2/3] END estimator__leaf_size=31, estimator__n_neighbors=13, estimator__p=2, max_features=0.38162372744930295, max_samples=0.3531381972330443, n_estimators=50;, score=-2.545 total time=   0.3s
[CV 3/3] END estimator__leaf_size=31, estimator__n_neighbors=13, estimator__p=2, max_features=0.38162372744930295, max_samples=0.3531381972330443, n_estimators=50;, score=-2.352 total time=   0.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.379 total time=   7.8s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.442 total time=   3.6s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.336 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=12, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.177 total time=   0.7s
[CV 2/3] END estimator__leaf_size=12, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.497 total time=   0.7s
[CV 3/3] END estimator__leaf_size=12, estimator__n_neighbors=50, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.304 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=1, max_features=0.2886578638066245, max_samples=0.1, n_estimators=86;, score=-2.126 total time=   0.3s
[CV 2/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=1, max_features=0.2886578638066245, max_samples=0.1, n_estimators=86;, score=-2.468 total time=   0.3s
[CV 3/3] END estimator__leaf_size=157, estimator__n_neighbors=3, estimator__p=1, max_features=0.2886578638066245, max_samples=0.1, n_estimators=86;, score=-2.246 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.1, n_estimators=176;, score=-2.220 total time=   0.5s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.1, n_estimators=176;, score=-2.518 total time=   0.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.1, n_estimators=176;, score=-2.327 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.19856671266743445, n_estimators=50;, score=-2.143 total time=   1.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.19856671266743445, n_estimators=50;, score=-2.414 total time=   0.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.19856671266743445, n_estimators=50;, score=-2.203 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.6657232356962423, n_estimators=74;, score=-2.140 total time=   1.8s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.6657232356962423, n_estimators=74;, score=-2.440 total time=   1.1s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.6657232356962423, n_estimators=74;, score=-2.244 total time=   1.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8480484351664751, n_estimators=50;, score=-2.140 total time=   2.3s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8480484351664751, n_estimators=50;, score=-2.438 total time=   1.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8480484351664751, n_estimators=50;, score=-2.245 total time=   1.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=31, estimator__p=1, max_features=0.1, max_samples=0.7684866292755252, n_estimators=50;, score=-2.178 total time=   0.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=31, estimator__p=1, max_features=0.1, max_samples=0.7684866292755252, n_estimators=50;, score=-2.496 total time=   0.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=31, estimator__p=1, max_features=0.1, max_samples=0.7684866292755252, n_estimators=50;, score=-2.294 total time=   0.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8104363960899467, n_estimators=200;, score=-2.144 total time=   3.4s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8104363960899467, n_estimators=200;, score=-2.442 total time=   3.0s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=35, estimator__p=1, max_features=1.0, max_samples=0.8104363960899467, n_estimators=200;, score=-2.248 total time=   2.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=59, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=192;, score=-2.133 total time=   3.5s
[CV 2/3] END estimator__leaf_size=59, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=192;, score=-2.425 total time=   3.5s
[CV 3/3] END estimator__leaf_size=59, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=192;, score=-2.231 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=7, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.126 total time=   2.5s
[CV 2/3] END estimator__leaf_size=7, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.428 total time=   1.3s
[CV 3/3] END estimator__leaf_size=7, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=50;, score=-2.211 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=57, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=106;, score=-2.135 total time=   2.6s
[CV 2/3] END estimator__leaf_size=57, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=106;, score=-2.424 total time=   2.2s
[CV 3/3] END estimator__leaf_size=57, estimator__n_neighbors=31, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=106;, score=-2.232 total time=   2.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=26, estimator__p=1, max_features=0.5331812746586003, max_samples=1.0, n_estimators=200;, score=-2.126 total time=   2.2s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=26, estimator__p=1, max_features=0.5331812746586003, max_samples=1.0, n_estimators=200;, score=-2.427 total time=   2.1s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=26, estimator__p=1, max_features=0.5331812746586003, max_samples=1.0, n_estimators=200;, score=-2.219 total time=   2.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=243, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.8684058823648463, n_estimators=200;, score=-2.131 total time=   3.2s
[CV 2/3] END estimator__leaf_size=243, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.8684058823648463, n_estimators=200;, score=-2.424 total time=   3.1s
[CV 3/3] END estimator__leaf_size=243, estimator__n_neighbors=25, estimator__p=1, max_features=1.0, max_samples=0.8684058823648463, n_estimators=200;, score=-2.222 total time=   3.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=286, estimator__n_neighbors=48, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.145 total time=   3.6s
[CV 2/3] END estimator__leaf_size=286, estimator__n_neighbors=48, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.450 total time=   3.8s
[CV 3/3] END estimator__leaf_size=286, estimator__n_neighbors=48, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.249 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=83, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=171;, score=-2.232 total time=   2.3s
[CV 2/3] END estimator__leaf_size=83, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=171;, score=-2.538 total time=   2.4s
[CV 3/3] END estimator__leaf_size=83, estimator__n_neighbors=50, estimator__p=2, max_features=1.0, max_samples=1.0, n_estimators=171;, score=-2.359 total time=   2.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=38, estimator__p=1, max_features=0.6227537770484748, max_samples=1.0, n_estimators=200;, score=-2.134 total time=   2.5s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=38, estimator__p=1, max_features=0.6227537770484748, max_samples=1.0, n_estimators=200;, score=-2.440 total time=   2.5s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=38, estimator__p=1, max_features=0.6227537770484748, max_samples=1.0, n_estimators=200;, score=-2.241 total time=   2.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.229 total time=   0.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.510 total time=   0.6s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=2, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.296 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.7284700985307943, n_estimators=200;, score=-2.127 total time=   2.8s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.7284700985307943, n_estimators=200;, score=-2.426 total time=   2.8s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=1.0, max_samples=0.7284700985307943, n_estimators=200;, score=-2.208 total time=   2.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=21, estimator__p=1, max_features=0.312629389605796, max_samples=1.0, n_estimators=200;, score=-2.125 total time=   1.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=21, estimator__p=1, max_features=0.312629389605796, max_samples=1.0, n_estimators=200;, score=-2.419 total time=   1.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=21, estimator__p=1, max_features=0.312629389605796, max_samples=1.0, n_estimators=200;, score=-2.213 total time=   1.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=23, estimator__p=1, max_features=0.7221500575577002, max_samples=0.9281434001453638, n_estimators=200;, score=-2.127 total time=   2.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=23, estimator__p=1, max_features=0.7221500575577002, max_samples=0.9281434001453638, n_estimators=200;, score=-2.426 total time=   2.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=23, estimator__p=1, max_features=0.7221500575577002, max_samples=0.9281434001453638, n_estimators=200;, score=-2.215 total time=   2.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=283, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.133 total time=   3.6s
[CV 2/3] END estimator__leaf_size=283, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.424 total time=   3.6s
[CV 3/3] END estimator__leaf_size=283, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.201 total time=   3.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.5379604933925767, n_estimators=200;, score=-2.129 total time=   2.1s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.5379604933925767, n_estimators=200;, score=-2.427 total time=   2.1s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.5379604933925767, n_estimators=200;, score=-2.225 total time=   2.1s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=30, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.7391683815100247, n_estimators=192;, score=-2.147 total time=   0.5s
[CV 2/3] END estimator__leaf_size=30, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.7391683815100247, n_estimators=192;, score=-2.438 total time=   0.5s
[CV 3/3] END estimator__leaf_size=30, estimator__n_neighbors=14, estimator__p=1, max_features=0.1, max_samples=0.7391683815100247, n_estimators=192;, score=-2.246 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.145 total time=   0.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.433 total time=   0.6s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=17, estimator__p=1, max_features=0.1, max_samples=1.0, n_estimators=200;, score=-2.238 total time=   0.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=219, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=178;, score=-2.288 total time=   0.6s
[CV 2/3] END estimator__leaf_size=219, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=178;, score=-2.625 total time=   0.6s
[CV 3/3] END estimator__leaf_size=219, estimator__n_neighbors=23, estimator__p=1, max_features=1.0, max_samples=0.1, n_estimators=178;, score=-2.434 total time=   0.5s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=232, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.7754904459416493, n_estimators=200;, score=-2.129 total time=   2.8s
[CV 2/3] END estimator__leaf_size=232, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.7754904459416493, n_estimators=200;, score=-2.426 total time=   2.9s
[CV 3/3] END estimator__leaf_size=232, estimator__n_neighbors=20, estimator__p=1, max_features=1.0, max_samples=0.7754904459416493, n_estimators=200;, score=-2.214 total time=   2.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=12, estimator__p=1, max_features=1.0, max_samples=0.6121962448373622, n_estimators=200;, score=-2.133 total time=   2.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=12, estimator__p=1, max_features=1.0, max_samples=0.6121962448373622, n_estimators=200;, score=-2.426 total time=   2.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=12, estimator__p=1, max_features=1.0, max_samples=0.6121962448373622, n_estimators=200;, score=-2.202 total time=   2.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.7865786968177478, n_estimators=200;, score=-2.149 total time=   2.9s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.7865786968177478, n_estimators=200;, score=-2.470 total time=   3.0s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=50, estimator__p=1, max_features=1.0, max_samples=0.7865786968177478, n_estimators=200;, score=-2.267 total time=   2.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=38, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.637334553292002, n_estimators=172;, score=-2.341 total time=   1.6s
[CV 2/3] END estimator__leaf_size=38, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.637334553292002, n_estimators=172;, score=-2.551 total time=   1.6s
[CV 3/3] END estimator__leaf_size=38, estimator__n_neighbors=3, estimator__p=2, max_features=1.0, max_samples=0.637334553292002, n_estimators=172;, score=-2.401 total time=   1.6s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=54, estimator__n_neighbors=11, estimator__p=1, max_features=0.1, max_samples=0.5116829658949684, n_estimators=111;, score=-2.151 total time=   0.4s
[CV 2/3] END estimator__leaf_size=54, estimator__n_neighbors=11, estimator__p=1, max_features=0.1, max_samples=0.5116829658949684, n_estimators=111;, score=-2.450 total time=   0.4s
[CV 3/3] END estimator__leaf_size=54, estimator__n_neighbors=11, estimator__p=1, max_features=0.1, max_samples=0.5116829658949684, n_estimators=111;, score=-2.249 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2577094639325143, n_estimators=200;, score=-2.143 total time=   0.4s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2577094639325143, n_estimators=200;, score=-2.431 total time=   0.4s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=3, estimator__p=1, max_features=0.1, max_samples=0.2577094639325143, n_estimators=200;, score=-2.229 total time=   0.4s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=122, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.635822799905457, n_estimators=50;, score=-2.131 total time=   2.1s
[CV 2/3] END estimator__leaf_size=122, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.635822799905457, n_estimators=50;, score=-2.430 total time=   0.9s
[CV 3/3] END estimator__leaf_size=122, estimator__n_neighbors=16, estimator__p=1, max_features=1.0, max_samples=0.635822799905457, n_estimators=50;, score=-2.216 total time=   0.9s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=51, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2508685940308675, n_estimators=200;, score=-2.162 total time=   7.0s
[CV 2/3] END estimator__leaf_size=51, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2508685940308675, n_estimators=200;, score=-2.404 total time=   1.1s
[CV 3/3] END estimator__leaf_size=51, estimator__n_neighbors=3, estimator__p=1, max_features=1.0, max_samples=0.2508685940308675, n_estimators=200;, score=-2.196 total time=   1.2s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=1.0, max_samples=0.8739254851566571, n_estimators=200;, score=-2.132 total time=   3.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=1.0, max_samples=0.8739254851566571, n_estimators=200;, score=-2.425 total time=   3.2s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=18, estimator__p=1, max_features=1.0, max_samples=0.8739254851566571, n_estimators=200;, score=-2.202 total time=   3.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.131 total time=   3.7s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.425 total time=   3.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=1.0, max_samples=1.0, n_estimators=200;, score=-2.203 total time=   3.7s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=11, estimator__p=1, max_features=1.0, max_samples=0.43871136295002255, n_estimators=200;, score=-2.131 total time=   1.9s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=11, estimator__p=1, max_features=1.0, max_samples=0.43871136295002255, n_estimators=200;, score=-2.422 total time=   1.8s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=11, estimator__p=1, max_features=1.0, max_samples=0.43871136295002255, n_estimators=200;, score=-2.212 total time=   1.8s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.48209807890849554, max_samples=1.0, n_estimators=128;, score=-2.124 total time=   1.3s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.48209807890849554, max_samples=1.0, n_estimators=128;, score=-2.416 total time=   1.3s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.48209807890849554, max_samples=1.0, n_estimators=128;, score=-2.211 total time=   1.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=300, estimator__n_neighbors=21, estimator__p=1, max_features=0.5757343700357469, max_samples=1.0, n_estimators=200;, score=-2.125 total time=   2.2s
[CV 2/3] END estimator__leaf_size=300, estimator__n_neighbors=21, estimator__p=1, max_features=0.5757343700357469, max_samples=1.0, n_estimators=200;, score=-2.421 total time=   2.2s
[CV 3/3] END estimator__leaf_size=300, estimator__n_neighbors=21, estimator__p=1, max_features=0.5757343700357469, max_samples=1.0, n_estimators=200;, score=-2.208 total time=   2.3s
Fitting 3 folds for each of 1 candidates, totalling 3 fits
[CV 1/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.6587605673059213, max_samples=1.0, n_estimators=200;, score=-2.126 total time=   2.6s
[CV 2/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.6587605673059213, max_samples=1.0, n_estimators=200;, score=-2.422 total time=   2.5s
[CV 3/3] END estimator__leaf_size=3, estimator__n_neighbors=22, estimator__p=1, max_features=0.6587605673059213, max_samples=1.0, n_estimators=200;, score=-2.209 total time=   2.6s
{'mean_fit_time': array([0.16721161, 0.45724988, 0.35425822, 0.23692218, 0.33237473,
       0.3925155 , 0.24168523, 0.40965541, 0.60036826, 0.58370678,
       3.26096511, 0.2891074 , 0.15326277, 0.25170294, 0.59945361,
       0.77436781, 0.98223519, 0.15893038, 1.64870532, 1.76632595,
       1.07550907, 1.22040796, 1.09967097, 1.60954706, 1.86744332,
       1.60857852, 1.2665267 , 0.28288881, 1.40008998, 0.68728209,
       1.33550239, 1.84598017, 1.08076183, 0.23086516, 0.27917385,
       0.25088453, 1.46199505, 1.25740782, 1.53487595, 1.10386856,
       0.17005038, 0.16721328, 0.85477177, 2.41247249, 1.67809097,
       1.86381896, 0.91914423, 0.69804184, 1.20326161, 1.32080356]), 'std_fit_time': array([2.91892010e-04, 3.88990951e-03, 4.92897688e-03, 1.92654008e-02,
       1.43141488e-03, 1.76841747e-03, 4.63083087e-03, 6.12656896e-03,
       9.12956464e-03, 5.90639925e-01, 1.95397119e+00, 9.22681329e-03,
       1.02641010e-02, 7.85972441e-03, 5.70275108e-01, 1.67028042e-01,
       5.61487334e-01, 4.69258954e-03, 1.85440311e-01, 1.43762801e-02,
       5.70921217e-01, 1.91236806e-01, 2.69574728e-02, 1.14425778e-02,
       1.09865560e-01, 1.77244860e-02, 1.92820590e-02, 1.03838407e-02,
       2.20218304e-02, 5.57754273e-03, 8.93729540e-03, 1.54017668e-02,
       2.49948376e-02, 5.41276613e-03, 2.06380086e-03, 4.84344429e-03,
       4.43603889e-02, 2.52136634e-02, 2.77695567e-03, 8.52752997e-03,
       5.66099902e-03, 1.61611092e-03, 5.63988290e-01, 2.67814973e+00,
       2.31429895e-02, 2.40906139e-02, 1.37840985e-03, 7.63492107e-03,
       1.31745094e-02, 2.29187774e-02]), 'mean_score_time': array([0.19913276, 0.25438658, 0.39869547, 0.1982669 , 0.22396183,
       0.41257803, 0.31160347, 0.3916057 , 0.57217836, 0.17505972,
       1.7655801 , 0.37852295, 0.18046816, 0.2672201 , 0.22921022,
       0.67584284, 0.54059792, 0.18878849, 1.44181792, 1.80134471,
       0.59817266, 1.07572023, 1.05634729, 1.56186382, 1.80470506,
       0.73332024, 1.19681128, 0.27576987, 1.362794  , 0.68902429,
       1.21566741, 1.79055039, 0.99012335, 0.3003099 , 0.3587567 ,
       0.29860552, 1.42819961, 1.16837621, 1.42173672, 0.50429988,
       0.19475444, 0.19565312, 0.42196012, 0.69222037, 1.57202649,
       1.75719396, 0.89556162, 0.62912353, 1.06261031, 1.25708389]), 'std_score_time': array([0.00447424, 0.00998008, 0.00052111, 0.00136008, 0.00482894,
       0.01217029, 0.00490227, 0.00474735, 0.00616488, 0.0002344 ,
       0.06864869, 0.01512377, 0.02192987, 0.00442744, 0.00558271,
       0.15402229, 0.01470696, 0.0204822 , 0.03576075, 0.03022014,
       0.01278908, 0.02410607, 0.04650762, 0.04232739, 0.00640193,
       0.01653706, 0.05308464, 0.0053213 , 0.03862609, 0.01513935,
       0.0091145 , 0.01138519, 0.02349013, 0.00452849, 0.00771032,
       0.04958304, 0.00357704, 0.06391812, 0.03991611, 0.00889509,
       0.00031623, 0.00033982, 0.00483603, 0.08119084, 0.05911772,
       0.04677695, 0.02977753, 0.01297923, 0.05601356, 0.03902745]), 'param_estimator__leaf_size': masked_array(data=[242, 28, 28, 45, 289, 27, 188, 139, 9, 31, 300, 12,
                   157, 3, 3, 3, 300, 3, 300, 59, 7, 57, 300, 243, 286,
                   83, 300, 3, 3, 3, 3, 283, 3, 30, 3, 219, 232, 3, 3, 38,
                   54, 3, 122, 51, 3, 3, 3, 3, 300, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__n_neighbors': masked_array(data=[11, 24, 49, 45, 30, 47, 6, 3, 33, 13, 3, 50, 3, 3, 3,
                   25, 35, 31, 35, 31, 25, 31, 26, 25, 48, 50, 38, 3, 17,
                   21, 23, 20, 16, 14, 17, 23, 20, 12, 50, 3, 11, 3, 16,
                   3, 18, 22, 11, 22, 21, 22],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_estimator__p': masked_array(data=[1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_features': masked_array(data=[0.2084958123530349, 0.4768068086286734,
                   0.2501459112798443, 0.7718416199819327,
                   0.9998489724362185, 0.6262596614363548,
                   0.9177357303136447, 0.8344968539264455,
                   0.3024792640915609, 0.38162372744930295, 1.0, 0.1,
                   0.2886578638066245, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0,
                   1.0, 1.0, 0.5331812746586003, 1.0, 1.0, 1.0,
                   0.6227537770484748, 0.1, 1.0, 0.312629389605796,
                   0.7221500575577002, 1.0, 1.0, 0.1, 0.1, 1.0, 1.0, 1.0,
                   1.0, 1.0, 0.1, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0,
                   0.48209807890849554, 0.5757343700357469,
                   0.6587605673059213],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_samples': masked_array(data=[0.20495784372049936, 0.8963781829594161,
                   0.6231411664876859, 0.20313309568827612,
                   0.23464556508090628, 0.3052507920575558,
                   0.15487514496555058, 0.40522890620622276,
                   0.9147263759961813, 0.3531381972330443, 1.0, 1.0, 0.1,
                   0.1, 0.19856671266743445, 0.6657232356962423,
                   0.8480484351664751, 0.7684866292755252,
                   0.8104363960899467, 1.0, 1.0, 1.0, 1.0,
                   0.8684058823648463, 1.0, 1.0, 1.0, 1.0,
                   0.7284700985307943, 1.0, 0.9281434001453638, 1.0,
                   0.5379604933925767, 0.7391683815100247, 1.0, 0.1,
                   0.7754904459416493, 0.6121962448373622,
                   0.7865786968177478, 0.637334553292002,
                   0.5116829658949684, 0.2577094639325143,
                   0.635822799905457, 0.2508685940308675,
                   0.8739254851566571, 1.0, 0.43871136295002255, 1.0, 1.0,
                   1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[127, 74, 185, 79, 99, 164, 113, 90, 192, 50, 200, 200,
                   86, 176, 50, 74, 50, 50, 200, 192, 50, 106, 200, 200,
                   200, 171, 200, 200, 200, 200, 200, 200, 200, 192, 200,
                   178, 200, 200, 200, 172, 111, 200, 50, 200, 200, 200,
                   200, 128, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('estimator__leaf_size', 242), ('estimator__n_neighbors', 11), ('estimator__p', 1), ('max_features', 0.2084958123530349), ('max_samples', 0.20495784372049936), ('n_estimators', 127)]), OrderedDict([('estimator__leaf_size', 28), ('estimator__n_neighbors', 24), ('estimator__p', 2), ('max_features', 0.4768068086286734), ('max_samples', 0.8963781829594161), ('n_estimators', 74)]), OrderedDict([('estimator__leaf_size', 28), ('estimator__n_neighbors', 49), ('estimator__p', 1), ('max_features', 0.2501459112798443), ('max_samples', 0.6231411664876859), ('n_estimators', 185)]), OrderedDict([('estimator__leaf_size', 45), ('estimator__n_neighbors', 45), ('estimator__p', 2), ('max_features', 0.7718416199819327), ('max_samples', 0.20313309568827612), ('n_estimators', 79)]), OrderedDict([('estimator__leaf_size', 289), ('estimator__n_neighbors', 30), ('estimator__p', 2), ('max_features', 0.9998489724362185), ('max_samples', 0.23464556508090628), ('n_estimators', 99)]), OrderedDict([('estimator__leaf_size', 27), ('estimator__n_neighbors', 47), ('estimator__p', 1), ('max_features', 0.6262596614363548), ('max_samples', 0.3052507920575558), ('n_estimators', 164)]), OrderedDict([('estimator__leaf_size', 188), ('estimator__n_neighbors', 6), ('estimator__p', 1), ('max_features', 0.9177357303136447), ('max_samples', 0.15487514496555058), ('n_estimators', 113)]), OrderedDict([('estimator__leaf_size', 139), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.8344968539264455), ('max_samples', 0.40522890620622276), ('n_estimators', 90)]), OrderedDict([('estimator__leaf_size', 9), ('estimator__n_neighbors', 33), ('estimator__p', 1), ('max_features', 0.3024792640915609), ('max_samples', 0.9147263759961813), ('n_estimators', 192)]), OrderedDict([('estimator__leaf_size', 31), ('estimator__n_neighbors', 13), ('estimator__p', 2), ('max_features', 0.38162372744930295), ('max_samples', 0.3531381972330443), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 12), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 157), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.2886578638066245), ('max_samples', 0.1), ('n_estimators', 86)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 1.0), ('max_samples', 0.1), ('n_estimators', 176)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.19856671266743445), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 25), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.6657232356962423), ('n_estimators', 74)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 35), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8480484351664751), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 31), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.7684866292755252), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 35), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8104363960899467), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 59), ('estimator__n_neighbors', 31), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 192)]), OrderedDict([('estimator__leaf_size', 7), ('estimator__n_neighbors', 25), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 57), ('estimator__n_neighbors', 31), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 106)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 26), ('estimator__p', 1), ('max_features', 0.5331812746586003), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 243), ('estimator__n_neighbors', 25), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8684058823648463), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 286), ('estimator__n_neighbors', 48), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 83), ('estimator__n_neighbors', 50), ('estimator__p', 2), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 171)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 38), ('estimator__p', 1), ('max_features', 0.6227537770484748), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 17), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.7284700985307943), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 21), ('estimator__p', 1), ('max_features', 0.312629389605796), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 23), ('estimator__p', 1), ('max_features', 0.7221500575577002), ('max_samples', 0.9281434001453638), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 283), ('estimator__n_neighbors', 20), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 16), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.5379604933925767), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 30), ('estimator__n_neighbors', 14), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.7391683815100247), ('n_estimators', 192)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 17), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 219), ('estimator__n_neighbors', 23), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.1), ('n_estimators', 178)]), OrderedDict([('estimator__leaf_size', 232), ('estimator__n_neighbors', 20), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.7754904459416493), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 12), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.6121962448373622), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 50), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.7865786968177478), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 38), ('estimator__n_neighbors', 3), ('estimator__p', 2), ('max_features', 1.0), ('max_samples', 0.637334553292002), ('n_estimators', 172)]), OrderedDict([('estimator__leaf_size', 54), ('estimator__n_neighbors', 11), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.5116829658949684), ('n_estimators', 111)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 0.1), ('max_samples', 0.2577094639325143), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 122), ('estimator__n_neighbors', 16), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.635822799905457), ('n_estimators', 50)]), OrderedDict([('estimator__leaf_size', 51), ('estimator__n_neighbors', 3), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.2508685940308675), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 18), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.8739254851566571), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 22), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 11), ('estimator__p', 1), ('max_features', 1.0), ('max_samples', 0.43871136295002255), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 22), ('estimator__p', 1), ('max_features', 0.48209807890849554), ('max_samples', 1.0), ('n_estimators', 128)]), OrderedDict([('estimator__leaf_size', 300), ('estimator__n_neighbors', 21), ('estimator__p', 1), ('max_features', 0.5757343700357469), ('max_samples', 1.0), ('n_estimators', 200)]), OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 22), ('estimator__p', 1), ('max_features', 0.6587605673059213), ('max_samples', 1.0), ('n_estimators', 200)])], 'split0_test_score': array([-2.16109797, -2.21114788, -2.17558696, -2.32822973, -2.28030325,
       -2.23549493, -2.15135486, -2.21315704, -2.13540921, -2.22762263,
       -2.37855345, -2.17684367, -2.12621795, -2.21992356, -2.1434473 ,
       -2.14008805, -2.14042418, -2.17837125, -2.14374011, -2.13284621,
       -2.12613862, -2.13460388, -2.12595077, -2.13076858, -2.14535184,
       -2.23243768, -2.1339004 , -2.22855121, -2.12697497, -2.12531573,
       -2.12735408, -2.13291402, -2.12915131, -2.14733639, -2.14542147,
       -2.28765053, -2.12864138, -2.1326445 , -2.14884876, -2.34088804,
       -2.15139659, -2.14292182, -2.13107016, -2.16197   , -2.13194688,
       -2.13124332, -2.13069318, -2.12437154, -2.12540533, -2.1259552 ]), 'split1_test_score': array([-2.48077347, -2.5193904 , -2.49800591, -2.6675201 , -2.60446545,
       -2.54790481, -2.44119489, -2.41209904, -2.44328655, -2.54536823,
       -2.44199914, -2.49710834, -2.46750925, -2.51826333, -2.41432364,
       -2.44037933, -2.43792936, -2.49610163, -2.44210433, -2.42486468,
       -2.42828169, -2.42397427, -2.42673721, -2.42431644, -2.44986133,
       -2.53819611, -2.44031514, -2.50994219, -2.42602969, -2.41915354,
       -2.42563751, -2.42416509, -2.42673114, -2.43822993, -2.43266001,
       -2.62497985, -2.4262864 , -2.42560585, -2.47002954, -2.55099327,
       -2.44988576, -2.43088168, -2.42956085, -2.40393242, -2.42530915,
       -2.4245353 , -2.42163623, -2.41623189, -2.42085934, -2.42231367]), 'split2_test_score': array([-2.28159355, -2.32426869, -2.30877407, -2.49192015, -2.42838596,
       -2.3775318 , -2.23356005, -2.21812458, -2.24274874, -2.35151221,
       -2.3356771 , -2.3042532 , -2.24624873, -2.32685344, -2.20279224,
       -2.24395848, -2.24531556, -2.29354724, -2.24769623, -2.23061171,
       -2.21074994, -2.23218457, -2.21924677, -2.22184428, -2.24944925,
       -2.35859948, -2.24120091, -2.29606038, -2.20801807, -2.21306442,
       -2.21542277, -2.20079306, -2.2248181 , -2.24571187, -2.23815016,
       -2.43447514, -2.21409545, -2.20224887, -2.26734385, -2.4008949 ,
       -2.24857849, -2.2285737 , -2.21630228, -2.19595262, -2.2015269 ,
       -2.20275946, -2.21224012, -2.21097734, -2.20760056, -2.20939561]), 'mean_test_score': array([-2.30782166, -2.35160232, -2.32745565, -2.49588999, -2.43771822,
       -2.38697718, -2.27536993, -2.28112689, -2.27381483, -2.37483436,
       -2.38540989, -2.3260684 , -2.27999198, -2.35501344, -2.25352106,
       -2.27480862, -2.27455637, -2.32267337, -2.27784689, -2.2627742 ,
       -2.25505675, -2.26358757, -2.25731158, -2.25897643, -2.28155414,
       -2.37641109, -2.27180548, -2.34485126, -2.25367425, -2.25251123,
       -2.25613812, -2.25262405, -2.26023352, -2.27709273, -2.27207721,
       -2.44903517, -2.25634108, -2.25349974, -2.29540739, -2.4309254 ,
       -2.28328695, -2.26745907, -2.25897776, -2.25395168, -2.25292764,
       -2.25284603, -2.25485651, -2.25052692, -2.25128841, -2.25255483]), 'std_test_score': array([0.13181816, 0.12731511, 0.13228819, 0.13854315, 0.13250309,
       0.12771556, 0.12196409, 0.0926335 , 0.12759556, 0.13076316,
       0.04367572, 0.13165432, 0.1413598 , 0.12341365, 0.11625706,
       0.12451911, 0.12320336, 0.13133773, 0.1236584 , 0.12136588,
       0.12726594, 0.12020376, 0.12571083, 0.12268301, 0.12637128,
       0.12545914, 0.12695138, 0.11994619, 0.12628485, 0.12315899,
       0.12513075, 0.12442303, 0.12404066, 0.12081206, 0.11969344,
       0.13809842, 0.12513102, 0.12497087, 0.13261459, 0.08836449,
       0.12430461, 0.12073186, 0.12553902, 0.10695598, 0.12515825,
       0.12486405, 0.12254001, 0.12238939, 0.12451169, 0.12477747]), 'rank_test_score': array([36, 41, 39, 50, 48, 46, 28, 32, 25, 43, 45, 38, 31, 42,  9, 27, 26,
       37, 30, 20, 13, 21, 16, 17, 33, 44, 23, 40, 10,  3, 14,  5, 19, 29,
       24, 49, 15,  8, 35, 47, 34, 22, 18, 11,  7,  6, 12,  1,  2,  4],
      dtype=int32)}
-2.250526919757005
OrderedDict([('estimator__leaf_size', 3), ('estimator__n_neighbors', 22), ('estimator__p', 1), ('max_features', 0.48209807890849554), ('max_samples', 1.0), ('n_estimators', 128)])
