no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.06152423, 0.03861849, 0.03863144, 0.03890371, 0.03863581,
       0.03891746, 0.03813171, 0.03821572, 0.03843856, 0.03852375,
       0.03859695, 0.0385406 , 0.03909334, 0.03878331, 0.03859146,
       0.03870384, 0.0385375 , 0.03898263, 0.03883481, 0.03877234,
       0.0425934 , 0.04682477, 0.04653994, 0.05390064, 0.04247753,
       0.0460736 , 0.04931053, 0.04805168, 0.05254785, 0.04794184,
       0.05160968, 0.04750244, 0.04670827, 0.05284047, 0.0409956 ,
       0.06330005, 0.03472622, 0.05224649, 0.0659647 , 0.04943029,
       0.04676978, 0.04741017, 0.05135504, 0.05101569, 0.05363345,
       0.04519955, 0.04881167, 0.05463624, 0.04959472, 0.05367613,
       0.04763309, 0.05310456, 0.04656148, 0.04700867, 0.04728707,
       0.04702123, 0.05337723, 0.04515688, 0.05374829, 0.04645014,
       0.05436007, 0.04798802, 0.04429356, 0.04507867, 0.04090381,
       0.04263584, 0.03879555, 0.03837578, 0.04166857, 0.04071172,
       0.03757811, 0.03926492, 0.03871592, 0.03749426, 0.03548447,
       0.03588923, 0.03545268, 0.03448439, 0.03503394, 0.03480585,
       0.03401351, 0.03608179, 0.03496695, 0.03432822, 0.03658756,
       0.03674372, 0.0347294 , 0.03673689, 0.0349652 , 0.03529954,
       0.03505198, 0.03496194, 0.03766497, 0.03756722, 0.03676677,
       0.03491696, 0.03559868, 0.03467727, 0.03434865, 0.03510849,
       0.03416371, 0.03491569, 0.03525043, 0.03717764, 0.03720562,
       0.03697054, 0.0366931 , 0.03543337, 0.03682319, 0.03658223,
       0.03647629, 0.03632561, 0.03743227, 0.03680619, 0.03725561,
       0.03687302, 0.03664629, 0.03642964, 0.03597697, 0.03548678,
       0.03615332, 0.03635033, 0.03695552, 0.03702958, 0.03649886,
       0.03738697, 0.03625409, 0.03727706]), 'std_fit_time': array([5.99015576e-05, 9.07792285e-05, 3.05213094e-04, 1.48746063e-04,
       2.11425919e-04, 1.67488029e-04, 1.19302872e-04, 4.17648214e-04,
       3.59409820e-04, 1.33379563e-04, 8.25953383e-04, 5.88494042e-04,
       3.99288430e-04, 3.03981351e-04, 2.50609671e-04, 1.56131750e-04,
       3.61954635e-04, 1.84979325e-04, 4.95984457e-04, 1.25234905e-04,
       6.19946304e-03, 8.68022299e-03, 7.93625111e-03, 3.71220246e-03,
       1.34294169e-03, 8.03436423e-03, 5.72425308e-03, 9.41260617e-03,
       6.56852181e-04, 6.91703552e-03, 2.62805279e-03, 7.72490259e-03,
       7.95422148e-03, 1.71926854e-04, 7.46022809e-03, 9.82468010e-03,
       5.60741857e-04, 4.43729252e-04, 1.17248225e-02, 3.75872754e-03,
       8.13936775e-03, 7.94288640e-03, 3.63667783e-03, 3.93264040e-03,
       5.39115530e-04, 6.87459879e-03, 6.66954446e-03, 8.23842788e-04,
       5.22674956e-03, 1.32850916e-03, 7.37055578e-03, 5.44372858e-04,
       8.90932205e-03, 8.65268658e-03, 9.35047695e-03, 7.71655395e-03,
       4.28511877e-03, 2.35720693e-03, 5.56365895e-03, 7.33022744e-03,
       1.17001890e-03, 8.76211077e-03, 3.86250691e-03, 3.55400363e-03,
       5.20922272e-03, 5.78538696e-04, 3.38765472e-03, 3.11193864e-03,
       3.28744643e-03, 2.90589881e-03, 9.75182780e-04, 1.72949614e-03,
       1.82310942e-03, 1.48328413e-03, 1.26730372e-03, 6.97628416e-04,
       6.63773005e-05, 5.76340905e-04, 2.93284766e-04, 1.84112083e-04,
       8.94195696e-04, 6.05021270e-04, 7.52791854e-04, 5.39405091e-04,
       1.03125582e-04, 1.63635795e-04, 6.03186576e-04, 1.12378474e-03,
       6.46850135e-04, 2.49735770e-04, 9.31353432e-04, 1.00987440e-03,
       2.74645118e-04, 9.77375523e-04, 3.58030728e-04, 1.07356525e-03,
       1.04493242e-04, 5.04163733e-04, 3.03568078e-04, 7.70099056e-04,
       4.36443080e-04, 8.04686758e-04, 5.98250542e-04, 9.28048136e-04,
       1.70971816e-04, 1.11269440e-04, 5.48188140e-04, 4.71935363e-04,
       6.35731218e-05, 4.73656057e-04, 4.44992564e-04, 2.57108569e-04,
       3.48106439e-04, 2.87799986e-04, 1.70175018e-04, 4.60927281e-04,
       3.28640464e-04, 2.36871068e-04, 8.83174535e-04, 3.35275208e-04,
       6.36588351e-04, 2.68019978e-04, 2.83908468e-04, 3.10802758e-04,
       7.09044116e-04, 5.20096285e-05, 6.32302504e-04, 2.35775711e-04]), 'mean_score_time': array([0.02136032, 0.01912538, 0.01905123, 0.01914994, 0.01899672,
       0.01940036, 0.01922766, 0.01891565, 0.01888927, 0.01902103,
       0.0189755 , 0.01900697, 0.01893544, 0.01908159, 0.01899433,
       0.01905433, 0.01899298, 0.01921447, 0.01909669, 0.01909184,
       0.0249749 , 0.03129983, 0.03116528, 0.03176896, 0.01912848,
       0.02602625, 0.02540151, 0.02627126, 0.03187744, 0.02083651,
       0.02938064, 0.0311048 , 0.0309159 , 0.03185924, 0.02194881,
       0.02665297, 0.01946815, 0.03103439, 0.02157974, 0.02576137,
       0.02632491, 0.02536964, 0.02581938, 0.02667514, 0.02629606,
       0.02384369, 0.02632952, 0.02508489, 0.02545969, 0.02408051,
       0.0238661 , 0.02219709, 0.02057926, 0.0205617 , 0.01951989,
       0.01954206, 0.02046498, 0.01956288, 0.01925572, 0.01970816,
       0.02009241, 0.02037398, 0.02058093, 0.02024452, 0.0199194 ,
       0.02035427, 0.01986051, 0.02008541, 0.0198249 , 0.02093371,
       0.01953975, 0.01944741, 0.01937246, 0.02070403, 0.01920652,
       0.01918793, 0.01936714, 0.01893274, 0.01932875, 0.01904281,
       0.01900689, 0.01988101, 0.01963623, 0.01922472, 0.02057091,
       0.02065539, 0.01927423, 0.020588  , 0.01971936, 0.0196898 ,
       0.01899608, 0.01974519, 0.02056336, 0.02004576, 0.02087069,
       0.01902405, 0.01971292, 0.02002017, 0.0196379 , 0.02014335,
       0.01938685, 0.01961255, 0.01987251, 0.02069108, 0.02079654,
       0.02067192, 0.02074901, 0.02013437, 0.02065094, 0.02032908,
       0.02047276, 0.02045035, 0.02086941, 0.02004107, 0.02077937,
       0.02086186, 0.02032145, 0.0202752 , 0.02014947, 0.01998631,
       0.02028537, 0.02007596, 0.01957615, 0.02072493, 0.02022854,
       0.02062241, 0.02043255, 0.02051091]), 'std_score_time': array([1.76487983e-04, 1.88733703e-04, 2.21212216e-04, 1.77319035e-04,
       1.65616444e-04, 3.64230402e-04, 2.13566746e-04, 1.62667879e-04,
       1.83640336e-04, 1.02705012e-04, 2.27855411e-04, 2.57943561e-04,
       2.38385914e-04, 2.43016726e-04, 1.20406812e-04, 2.66028154e-04,
       1.26615206e-04, 3.57373483e-04, 2.70393812e-04, 1.84123781e-04,
       8.48773683e-03, 7.92687762e-03, 8.12557835e-03, 8.37629861e-03,
       1.40563519e-04, 7.61809191e-03, 7.55762210e-03, 7.40232468e-03,
       2.70029694e-03, 1.45856937e-03, 5.51045691e-03, 8.07320350e-03,
       8.04399114e-03, 5.59736019e-03, 2.98927633e-03, 2.90752968e-03,
       5.14655109e-04, 1.69637754e-03, 3.04056487e-03, 4.32463368e-03,
       4.46792518e-03, 3.78804628e-03, 3.64744615e-03, 2.45876592e-03,
       2.22654865e-03, 2.91119592e-03, 4.08090117e-03, 2.81506650e-03,
       2.47242170e-03, 3.08029730e-03, 3.22332920e-03, 1.89493768e-03,
       1.38073585e-03, 1.32323516e-03, 1.03779992e-04, 9.59814360e-05,
       8.64300077e-04, 7.40448280e-04, 1.57302830e-04, 7.46066784e-04,
       1.42353307e-04, 7.62572333e-04, 1.26205273e-03, 6.18189916e-04,
       7.17387546e-04, 7.45860304e-04, 1.00736559e-03, 8.73480565e-04,
       4.28757897e-04, 1.07805877e-03, 2.24759673e-04, 2.77504774e-04,
       3.11234308e-04, 9.57020393e-04, 1.17724389e-04, 2.41481420e-04,
       2.90807755e-04, 2.47459752e-04, 4.55361608e-04, 1.04544002e-04,
       2.53500758e-04, 3.25261376e-04, 3.97035320e-04, 8.84526145e-05,
       2.37126132e-04, 1.49943869e-04, 4.17552734e-04, 2.43151601e-04,
       6.61980165e-04, 3.04694342e-04, 2.90685366e-04, 7.41074526e-04,
       1.79572510e-04, 2.13136875e-04, 1.26679489e-04, 3.39396438e-04,
       3.82525404e-04, 1.21683783e-03, 4.72153644e-04, 4.65162829e-04,
       4.75065211e-04, 6.68897788e-04, 5.50924080e-04, 1.94313954e-04,
       1.50805735e-04, 1.98372409e-04, 2.71658927e-04, 5.56998644e-04,
       1.48074936e-04, 2.31622992e-04, 3.12674491e-04, 2.29304721e-04,
       2.41156304e-04, 1.84613623e-04, 1.84846526e-04, 2.89056611e-04,
       2.84990451e-04, 4.00333801e-04, 4.77932625e-05, 9.64843067e-05,
       2.80826928e-04, 7.06873449e-05, 1.69390691e-04, 2.06299941e-04,
       3.10714774e-04, 1.37932973e-04, 3.11688219e-04, 1.50393689e-04]), 'param_alpha': masked_array(data=[0.1097379562195451, 0.009518551520807533,
                   0.00010738590617350513, 0.007132700970753414,
                   0.0005116233550703901, 0.5092144380526045,
                   0.00018052326983311351, 0.03308583404863251,
                   0.061867157409216944, 0.00010262443391733491, 10.0,
                   0.07265324101100877, 0.0015558969898871553,
                   0.09467892678938142, 0.09973002426275132,
                   0.0023277132993632915, 0.09388167821781522,
                   0.18064036481953494, 0.00010012332045451719,
                   0.09377109523585818, 0.17319242136664328,
                   0.02032743781527514, 0.09088539130491649,
                   0.04765530844393876, 1.6919113285482832,
                   0.05705634565376424, 0.0919187011973121,
                   0.12344056705809126, 0.00364009750702875,
                   0.0035321218087645896, 0.00045162076187975093,
                   0.07181283694508224, 0.1225387374532387,
                   0.052688591988002256, 2.0383152747481814,
                   0.08284487932720483, 0.0012002047239811832,
                   0.09661926372795007, 0.09268218687758156,
                   0.09275970718713633, 0.09561994454507348,
                   0.09502109633301166, 0.08920660221938746,
                   0.09249412265086239, 0.09353644825378811,
                   0.09237940226389478, 0.09185796910698295,
                   0.07553237772395142, 0.09685088955202271,
                   0.09182234190907873, 0.09451460387746062,
                   0.09229901742027381, 0.09284976445182927,
                   0.0934390949370833, 0.0954843118234904,
                   0.09827686660487896, 0.08979519266632587,
                   0.024017331042555098, 0.09582776398973157,
                   0.09510657098806762, 0.0936418359332222,
                   0.09250779295878547, 0.0954235943237996,
                   0.09456267548841164, 0.09243184595917849,
                   0.0960367473180617, 0.09390933305555672,
                   0.09392159782959335, 0.09132212497436723,
                   0.09682155876585258, 0.08103954675321089,
                   0.09767399807504466, 0.09125709270575524,
                   0.09358219349346222, 0.09278551273155151,
                   0.09534356169345014, 0.09320939099162477,
                   0.10111644041116956, 0.09318322351190952,
                   0.09736822210517422, 0.09538559887714555,
                   0.09453141172301188, 0.09308181382903039,
                   0.09012220832135613, 0.09547976385148227,
                   0.09835780852200761, 0.10108945362167311,
                   0.09630134674211174, 0.09392062028921865,
                   0.09205649010315081, 0.09396907009927037,
                   0.10022799388537948, 0.09559347900337864,
                   0.09435034874983352, 0.09373718742717593,
                   0.09354830914157543, 0.09357712992343513,
                   0.09437534757938731, 0.09387469000692182,
                   0.09577033152020671, 0.09105833960540594,
                   0.09904779214021822, 0.09306097539220246,
                   0.08883009489815147, 0.0965972215445615,
                   0.0909951521068465, 0.07296657024861522,
                   0.09800855788126539, 0.09597192227339885,
                   0.09665140996269983, 0.10052760394804836,
                   0.09277627653645028, 0.09155275928877428,
                   0.09693356270379709, 0.0927449638880723,
                   0.09186554297038506, 0.09710348934611213,
                   0.09519475359212358, 0.09659346239935172,
                   0.09216730760134893, 0.09740925322850058,
                   0.09326375947853295, 0.09221999530700616,
                   0.09342377794103679, 0.08689715637948875,
                   0.0943469232240186, 0.09514394567399083,
                   0.08906780165135629],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[4, 5, 5, 5, 3, 4, 4, 5, 5, 5, 2, 2, 6, 6, 2, 2, 6, 6,
                   2, 2, 2, 2, 6, 2, 6, 6, 2, 6, 6, 6, 3, 6, 2, 2, 5, 2,
                   6, 5, 6, 5, 5, 2, 2, 2, 5, 4, 4, 3, 4, 5, 4, 4, 4, 5,
                   4, 5, 6, 2, 4, 4, 3, 3, 4, 4, 4, 3, 4, 4, 2, 6, 5, 6,
                   4, 3, 2, 4, 4, 5, 4, 6, 4, 2, 4, 5, 3, 4, 6, 2, 2, 5,
                   5, 5, 6, 4, 5, 3, 3, 4, 4, 3, 3, 6, 6, 4, 4, 3, 5, 3,
                   3, 3, 3, 2, 4, 4, 6, 4, 3, 4, 2, 2, 5, 6, 5, 5, 4, 3,
                   5, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.1097379562195451), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.009518551520807533), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010738590617350513), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.007132700970753414), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005116233550703901), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.5092144380526045), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00018052326983311351), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.03308583404863251), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.061867157409216944), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010262443391733491), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 10.0), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07265324101100877), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0015558969898871553), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09467892678938142), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09973002426275132), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0023277132993632915), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09388167821781522), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.18064036481953494), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010012332045451719), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09377109523585818), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.17319242136664328), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02032743781527514), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09088539130491649), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04765530844393876), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.6919113285482832), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05705634565376424), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0919187011973121), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12344056705809126), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00364009750702875), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0035321218087645896), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00045162076187975093), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07181283694508224), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1225387374532387), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052688591988002256), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.0383152747481814), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08284487932720483), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0012002047239811832), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09661926372795007), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09268218687758156), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09275970718713633), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09561994454507348), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09502109633301166), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08920660221938746), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09249412265086239), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09353644825378811), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09237940226389478), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09185796910698295), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07553237772395142), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09685088955202271), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09182234190907873), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09451460387746062), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09229901742027381), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09284976445182927), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0934390949370833), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0954843118234904), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09827686660487896), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08979519266632587), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.024017331042555098), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09582776398973157), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09510657098806762), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0936418359332222), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09250779295878547), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0954235943237996), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09456267548841164), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09243184595917849), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0960367473180617), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09390933305555672), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09392159782959335), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09132212497436723), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09682155876585258), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08103954675321089), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09767399807504466), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09125709270575524), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09358219349346222), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09278551273155151), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09534356169345014), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09320939099162477), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10111644041116956), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09318322351190952), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09736822210517422), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09538559887714555), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09453141172301188), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09308181382903039), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09012220832135613), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09547976385148227), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09835780852200761), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10108945362167311), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09630134674211174), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09392062028921865), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09205649010315081), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09396907009927037), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10022799388537948), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09559347900337864), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09435034874983352), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09373718742717593), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09354830914157543), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09357712992343513), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09437534757938731), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09387469000692182), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09577033152020671), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09105833960540594), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09904779214021822), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09306097539220246), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08883009489815147), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0965972215445615), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0909951521068465), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07296657024861522), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09800855788126539), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09597192227339885), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09665140996269983), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.10052760394804836), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09277627653645028), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09155275928877428), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09693356270379709), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0927449638880723), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09186554297038506), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09710348934611213), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09519475359212358), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09659346239935172), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09216730760134893), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09740925322850058), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09326375947853295), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09221999530700616), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09342377794103679), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08689715637948875), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0943469232240186), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09514394567399083), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08906780165135629), ('degree', 4), ('kernel', 'rbf')])], 'split0_test_score': array([-2.26503184, -2.29201334, -2.3008821 , -2.29402535, -2.30042008,
       -2.33851252, -2.30079823, -2.27617081, -2.26623319, -2.30088756,
       -2.90492989, -2.26492709, -2.29927992, -2.26454269, -2.26462628,
       -2.29850383, -2.26453021, -2.27518976, -2.30089043, -2.2645285 ,
       -2.27387013, -2.28388729, -2.26448515, -2.26988992, -2.49483586,
       -2.26716991, -2.26450036, -2.26629055, -2.29721565, -2.29732038,
       -2.30048842, -2.26499836, -2.26619161, -2.26823773, -2.52881141,
       -2.26437924, -2.299659  , -2.26457388, -2.26451183, -2.264513  ,
       -2.26455767, -2.2645481 , -2.2644612 , -2.26450898, -2.26452487,
       -2.26450726, -2.26449946, -2.26470232, -2.26457768, -2.26449893,
       -2.2645401 , -2.26450605, -2.26451437, -2.26452337, -2.26455549,
       -2.26460144, -2.26446949, -2.28143116, -2.26456101, -2.26454946,
       -2.2645265 , -2.26450919, -2.26455452, -2.26454086, -2.26450805,
       -2.26456439, -2.26453064, -2.26453083, -2.26449154, -2.2645772 ,
       -2.26437338, -2.26459132, -2.26449058, -2.26452558, -2.26451339,
       -2.26455324, -2.26451985, -2.26466769, -2.26451945, -2.26458623,
       -2.26455391, -2.26454036, -2.2645179 , -2.26447414, -2.26455542,
       -2.26460281, -2.26466656, -2.26456869, -2.26453082, -2.26450242,
       -2.26453157, -2.26463493, -2.26455724, -2.26453752, -2.26452797,
       -2.26452506, -2.2645255 , -2.26453791, -2.2645301 , -2.26456009,
       -2.26448767, -2.26461454, -2.26451758, -2.26445595, -2.26457352,
       -2.26448675, -2.26490211, -2.26459692, -2.26456334, -2.26457441,
       -2.26464315, -2.26451325, -2.26449494, -2.26457904, -2.26451278,
       -2.26449957, -2.26458184, -2.26455087, -2.26457346, -2.26450407,
       -2.26458691, -2.26452068, -2.26450486, -2.26452314, -2.2644298 ,
       -2.26453747, -2.26455006, -2.26445926]), 'split1_test_score': array([-2.10571172, -2.15076952, -2.16448105, -2.15396289, -2.16383122,
       -2.17022388, -2.16436304, -2.12825251, -2.11452901, -2.16448874,
       -2.92607901, -2.1117018 , -2.16217963, -2.1073944 , -2.1067617 ,
       -2.16098332, -2.10750457, -2.10892252, -2.16449278, -2.10751996,
       -2.1080358 , -2.13849017, -2.10797228, -2.11956558, -2.37155425,
       -2.1160697 , -2.10779663, -2.10525686, -2.15899473, -2.15915623,
       -2.1639273 , -2.11189734, -2.10526631, -2.11761724, -2.41639771,
       -2.10950153, -2.16273786, -2.10713738, -2.10767287, -2.1076619 ,
       -2.10726606, -2.10734752, -2.10827458, -2.10769988, -2.1075527 ,
       -2.10771911, -2.10780689, -2.11104883, -2.10710875, -2.10781291,
       -2.107417  , -2.1077326 , -2.10764917, -2.10756631, -2.10728445,
       -2.10693484, -2.10816628, -2.13515493, -2.10723797, -2.10733585,
       -2.10753798, -2.1076976 , -2.10729269, -2.10741038, -2.10771031,
       -2.10720986, -2.10750073, -2.10749902, -2.10789774, -2.10711237,
       -2.10986935, -2.10700787, -2.10790881, -2.1075463 , -2.10765825,
       -2.10730357, -2.10759852, -2.10660028, -2.1076022 , -2.10704519,
       -2.10729785, -2.10741468, -2.10761646, -2.10810647, -2.10728507,
       -2.10692508, -2.10660339, -2.10717686, -2.10749916, -2.10777339,
       -2.10749243, -2.1067033 , -2.10726965, -2.10743964, -2.10752468,
       -2.10755104, -2.10754701, -2.10743619, -2.10750554, -2.10724573,
       -2.10794271, -2.10684247, -2.10761939, -2.10834431, -2.10714011,
       -2.10795351, -2.11162948, -2.10696725, -2.10721853, -2.1071334 ,
       -2.10666839, -2.10765956, -2.10785856, -2.10709856, -2.10766399,
       -2.10780561, -2.10707765, -2.10732382, -2.10714058, -2.10775474,
       -2.10704017, -2.10759089, -2.10774588, -2.10756846, -2.10870789,
       -2.10744012, -2.10733075, -2.10830024]), 'split2_test_score': array([-2.27348938, -2.28620332, -2.29798963, -2.28880355, -2.29738907,
       -2.36544918, -2.29788046, -2.27227724, -2.26915505, -2.29799674,
       -2.94300325, -2.2693833 , -2.29586921, -2.27147815, -2.27209003,
       -2.29477947, -2.27139722, -2.28885613, -2.29800048, -2.27138599,
       -2.28687295, -2.27794385, -2.27109351, -2.26989349, -2.53555042,
       -2.26932099, -2.27119815, -2.27561196, -2.29304775, -2.29318736,
       -2.29747778, -2.26932584, -2.27544425, -2.26950976, -2.56934735,
       -2.27028435, -2.29638187, -2.27167528, -2.27127554, -2.2712834 ,
       -2.27157373, -2.2715129 , -2.27092375, -2.27125647, -2.27136219,
       -2.27124484, -2.271192  , -2.26958311, -2.27170459, -2.27118839,
       -2.27146147, -2.2712367 , -2.27129253, -2.27135231, -2.27155995,
       -2.27188591, -2.27098323, -2.27595286, -2.27159484, -2.27152158,
       -2.27137288, -2.27125786, -2.27155378, -2.27146635, -2.27125016,
       -2.27161608, -2.27140002, -2.27140127, -2.27113772, -2.27170085,
       -2.2701044 , -2.27180929, -2.27113114, -2.27136683, -2.27128602,
       -2.27154565, -2.27132901, -2.27228583, -2.27132635, -2.27177041,
       -2.27154992, -2.27146317, -2.27131607, -2.27101629, -2.27155949,
       -2.27189619, -2.27228202, -2.27164297, -2.27140117, -2.27121212,
       -2.27140609, -2.27216043, -2.27157104, -2.27144479, -2.27138255,
       -2.27136339, -2.27136631, -2.27144733, -2.27139651, -2.27158901,
       -2.27111102, -2.27199347, -2.27131395, -2.27088572, -2.27167304,
       -2.27110462, -2.26940482, -2.27185182, -2.27160949, -2.27167919,
       -2.27220274, -2.27128508, -2.27116108, -2.27171511, -2.2712819 ,
       -2.27119277, -2.27173673, -2.27153054, -2.27167266, -2.27122335,
       -2.27177563, -2.27133452, -2.27122869, -2.27135075, -2.27069083,
       -2.27144444, -2.27152538, -2.27090973]), 'mean_test_score': array([-2.21474431, -2.24299539, -2.25445093, -2.24559726, -2.25388012,
       -2.29139519, -2.25434724, -2.22556685, -2.21663908, -2.25445768,
       -2.92467072, -2.2153374 , -2.25244292, -2.21447174, -2.21449267,
       -2.2514222 , -2.21447733, -2.2243228 , -2.25446123, -2.21447815,
       -2.22292629, -2.23344044, -2.21451698, -2.219783  , -2.46731351,
       -2.2175202 , -2.21449838, -2.21571979, -2.24975271, -2.24988799,
       -2.2539645 , -2.21540718, -2.21563406, -2.21845491, -2.50485215,
       -2.21472171, -2.25292624, -2.21446218, -2.21448674, -2.2144861 ,
       -2.21446582, -2.21446951, -2.21455317, -2.21448844, -2.21447992,
       -2.2144904 , -2.21449945, -2.21511142, -2.21446367, -2.21450008,
       -2.21447285, -2.21449178, -2.21448536, -2.21448066, -2.21446663,
       -2.21447406, -2.21453966, -2.23084632, -2.21446461, -2.21446896,
       -2.21447912, -2.21448821, -2.214467  , -2.21447253, -2.21448951,
       -2.21446344, -2.21447713, -2.21447704, -2.214509  , -2.21446347,
       -2.21478237, -2.2144695 , -2.21451018, -2.21447957, -2.21448589,
       -2.21446749, -2.21448246, -2.21451793, -2.21448267, -2.21446728,
       -2.21446723, -2.21447274, -2.21448347, -2.2145323 , -2.21446666,
       -2.21447469, -2.21451732, -2.21446284, -2.21447705, -2.21449598,
       -2.2144767 , -2.21449955, -2.21446598, -2.21447398, -2.2144784 ,
       -2.21447983, -2.21447961, -2.21447381, -2.21447739, -2.21446494,
       -2.2145138 , -2.21448349, -2.21448364, -2.21456199, -2.21446222,
       -2.21451496, -2.21531214, -2.214472  , -2.21446379, -2.21446233,
       -2.21450476, -2.21448596, -2.21450486, -2.21446424, -2.21448622,
       -2.21449932, -2.21446541, -2.21446841, -2.21446223, -2.21449405,
       -2.21446757, -2.21448203, -2.21449314, -2.21448078, -2.21460951,
       -2.21447401, -2.21446873, -2.21455641]), 'std_test_score': array([0.07717496, 0.06525666, 0.06362927, 0.06483035, 0.06368621,
       0.08638388, 0.06363959, 0.06882999, 0.07221258, 0.06362859,
       0.01557525, 0.07330401, 0.06384097, 0.07576804, 0.07623822,
       0.06396802, 0.0756931 , 0.08179084, 0.06362824, 0.07568266,
       0.08141309, 0.06718381, 0.07538677, 0.07086442, 0.06972228,
       0.07174171, 0.07549906, 0.07820173, 0.06419814, 0.06417923,
       0.06367777, 0.07321383, 0.07813315, 0.07130489, 0.06469896,
       0.07444094, 0.06378685, 0.07594545, 0.07557927, 0.07558667,
       0.07585577, 0.07580003, 0.07519661, 0.07556115, 0.07566047,
       0.0755488 , 0.07549249, 0.07361034, 0.07596713, 0.07548864,
       0.07575264, 0.07554013, 0.07559525, 0.07565125, 0.07584317,
       0.07609984, 0.07526434, 0.06770098, 0.07587504, 0.07580801,
       0.07567044, 0.07556262, 0.07583753, 0.07575715, 0.07555444,
       0.07589435, 0.07569571, 0.07569687, 0.07543436, 0.07596438,
       0.0742216 , 0.07604396, 0.07542728, 0.0756648 , 0.07558913,
       0.07583009, 0.07562946, 0.07637265, 0.07562698, 0.07601549,
       0.075834  , 0.07575422, 0.07561734, 0.07530181, 0.07584275,
       0.07610732, 0.07636999, 0.0759176 , 0.07569677, 0.07551396,
       0.07570134, 0.07628535, 0.07585331, 0.07573722, 0.07567946,
       0.07566159, 0.07566432, 0.07573957, 0.07569244, 0.07586972,
       0.07540564, 0.07617328, 0.07561536, 0.0751531 , 0.07594352,
       0.07539875, 0.07333775, 0.07607501, 0.07588839, 0.07594842,
       0.07631426, 0.07558825, 0.07545941, 0.07597487, 0.07558526,
       0.07549331, 0.07599077, 0.07581623, 0.07594319, 0.07552593,
       0.07601931, 0.07563462, 0.07553161, 0.0756498 , 0.07492736,
       0.0757369 , 0.07581149, 0.07518059]), 'rank_test_score': array([ 95, 112, 122, 113, 119, 125, 121, 109, 103, 123, 128,  99, 117,
        28,  70, 116,  42, 108, 124,  44, 107, 111,  85, 106, 126, 104,
        74, 102, 114, 115, 120, 100, 101, 105, 127,  94, 118,   1,  64,
        62,  14,  27,  90,  66,  50,  68,  76,  97,   8,  78,  32,  69,
        59,  51,  16,  36,  89, 110,  11,  25,  46,  65,  18,  30,  67,
         6,  41,  39,  81,   7,  96,  26,  82,  47,  60,  21,  54,  87,
        55,  20,  19,  31,  56,  88,  17,  37,  86,   5,  40,  73,  38,
        77,  15,  34,  45,  49,  48,  33,  43,  12,  83,  57,  58,  92,
         2,  84,  98,  29,   9,   4,  79,  61,  80,  10,  63,  75,  13,
        23,   3,  72,  22,  53,  71,  52,  93,  35,  24,  91], dtype=int32)}
-2.214462180903023
OrderedDict([('alpha', 0.09661926372795007), ('degree', 5), ('kernel', 'rbf')])
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.29350098, 0.29908387, 0.29461201, 0.29513526, 0.29513359,
       0.29657571, 0.2882216 , 0.28810541, 0.28846852, 0.28622842,
       0.29033192, 0.29008969, 0.29699246, 0.31551139, 0.31230648,
       0.31019521, 0.31098866, 0.31824716, 0.30607271, 0.31665659,
       0.30577668, 0.31221223, 0.31147734, 0.29513907, 0.30768243,
       0.30953145, 0.31976136, 0.30570698, 0.30279573, 0.29367956,
       0.35302297, 0.29569618, 0.29811335, 0.29868817, 0.307     ,
       0.31231372, 0.29553318, 0.30430333, 0.31050483, 0.2822005 ,
       0.30219762, 0.31042425, 0.30574767, 0.31369805, 0.31554214,
       0.31379453, 0.29644783, 0.31277506, 0.32149657, 0.32679343,
       0.29940136, 0.30236856, 0.34452685, 0.29879276, 0.29654837,
       0.32794627, 0.30183816, 0.27753997, 0.32423298, 0.2837166 ,
       0.32813255, 0.30379876, 0.3063883 , 0.29081194, 0.30097318,
       0.28823058, 0.29308939, 0.28869065, 0.29276013, 0.28920174,
       0.28721929, 0.2850759 , 0.28299252, 0.28382889, 0.28301549,
       0.28161534, 0.28125525, 0.27799765, 0.27822344, 0.2847836 ,
       0.28031476, 0.27793304, 0.2812717 , 0.27835075, 0.28310275,
       0.28254143, 0.28510324, 0.29791435, 0.28451562, 0.28423111,
       0.28176093, 0.28480101, 0.29163686, 0.29389326, 0.2940975 ,
       0.2916677 , 0.29466971, 0.28013452, 0.2998871 , 0.29298202,
       0.28173494, 0.29136992, 0.29586935, 0.2909356 , 0.2951924 ,
       0.28312135, 0.28248119, 0.28266835, 0.28280449, 0.28769382,
       0.29305919, 0.2835904 , 0.28329118, 0.29550759, 0.28954506,
       0.28172525, 0.29845468, 0.29153315, 0.281346  , 0.28780484,
       0.29684273, 0.31070964, 0.29567552, 0.29701797, 0.2817417 ,
       0.27805519, 0.29590336, 0.29596384]), 'std_fit_time': array([8.45426283e-04, 6.20063926e-04, 1.91500004e-03, 1.46672918e-03,
       1.56683268e-03, 1.78417675e-03, 5.78423423e-04, 1.36413705e-03,
       2.92352566e-03, 6.24122377e-03, 6.31788544e-03, 6.73669257e-03,
       1.44055690e-02, 1.37711380e-02, 1.11913644e-02, 9.09127658e-03,
       1.75221486e-02, 2.57794072e-02, 1.84273030e-02, 1.24867077e-02,
       1.60212026e-02, 5.04397910e-03, 9.78516090e-03, 1.12826716e-02,
       1.97851376e-02, 3.05659018e-03, 1.12416173e-02, 1.52342278e-02,
       1.44386996e-02, 9.11285997e-03, 8.18683106e-02, 2.33348933e-03,
       1.17012282e-02, 1.21637640e-02, 1.28710238e-02, 2.04561968e-05,
       1.26701218e-02, 6.16695902e-03, 1.52401048e-02, 5.38952087e-04,
       1.41724113e-02, 9.15308738e-03, 1.65140205e-03, 8.46901996e-03,
       1.21845182e-02, 9.40380685e-03, 6.67632343e-03, 8.75088790e-03,
       1.40261977e-02, 6.04257202e-03, 4.96191980e-04, 1.82637679e-03,
       3.27994884e-02, 2.88858067e-03, 8.65129008e-03, 3.25174953e-02,
       1.07965153e-02, 6.03811170e-04, 2.18444220e-02, 3.59400274e-03,
       4.33309294e-03, 1.30073428e-02, 1.02304484e-02, 6.23541373e-04,
       1.10812806e-03, 4.44890449e-03, 9.96844888e-03, 8.63617671e-03,
       9.01791842e-03, 5.89758777e-03, 2.44721304e-03, 4.39745386e-03,
       3.28615597e-03, 2.29821151e-03, 3.46441974e-03, 3.60230067e-03,
       2.99829864e-03, 1.30507366e-03, 1.03935528e-03, 3.38215334e-03,
       1.53506058e-03, 1.18252546e-03, 3.87349353e-03, 1.60623399e-03,
       8.21078303e-04, 8.58971933e-04, 2.78481747e-03, 5.93792426e-03,
       1.00069382e-03, 8.56397951e-04, 1.24870389e-03, 1.74605730e-03,
       7.36725429e-04, 1.53791786e-03, 2.43637830e-03, 1.24533842e-03,
       5.64989367e-04, 2.52162239e-03, 6.50404961e-04, 1.52920483e-03,
       9.66697876e-04, 1.24108843e-03, 2.17881396e-03, 5.33271005e-03,
       7.12423980e-04, 2.08920174e-03, 1.70542831e-03, 1.64074397e-03,
       3.62193760e-03, 3.63057348e-03, 4.22597251e-03, 3.03768942e-03,
       2.66523571e-03, 1.79993795e-03, 4.88494147e-03, 2.13951051e-03,
       8.25645554e-03, 8.99800211e-04, 1.67963849e-03, 2.13146468e-03,
       1.82851461e-03, 9.88682805e-03, 7.16265046e-04, 9.62446013e-04,
       2.93638059e-03, 2.78498124e-03, 8.01179549e-04, 1.93672120e-03]), 'mean_score_time': array([0.22352846, 0.22255619, 0.22260149, 0.22133056, 0.22172578,
       0.22162326, 0.22292821, 0.22150556, 0.22120365, 0.22089728,
       0.22102372, 0.22264997, 0.2218082 , 0.22059576, 0.2209696 ,
       0.22119538, 0.22088035, 0.22104891, 0.22188671, 0.22092064,
       0.2224954 , 0.22431191, 0.22335776, 0.222941  , 0.22129122,
       0.22341649, 0.22344303, 0.22272992, 0.22399426, 0.22208182,
       0.22352672, 0.22086612, 0.22151272, 0.22155531, 0.22127318,
       0.22670086, 0.22273588, 0.22500507, 0.22480901, 0.22391971,
       0.23429283, 0.22200569, 0.23347966, 0.22580695, 0.22601342,
       0.22614606, 0.22184555, 0.23787061, 0.22682691, 0.2284627 ,
       0.22159926, 0.22187448, 0.22658126, 0.22096205, 0.22343612,
       0.22573026, 0.22126031, 0.22077457, 0.23271974, 0.22255905,
       0.23200202, 0.22362876, 0.22669164, 0.23122692, 0.22893906,
       0.23047519, 0.23039166, 0.22310464, 0.23959541, 0.22932124,
       0.22886324, 0.22082726, 0.22134018, 0.22855735, 0.22257741,
       0.22053583, 0.22912709, 0.2215817 , 0.22147449, 0.22306061,
       0.22082647, 0.22231921, 0.22175447, 0.22179874, 0.22057064,
       0.22038897, 0.22100774, 0.22699944, 0.22108245, 0.22068095,
       0.22040343, 0.22047186, 0.22078244, 0.22165402, 0.22852596,
       0.22124879, 0.22115755, 0.2208852 , 0.22249834, 0.22196666,
       0.22085039, 0.22134813, 0.22112727, 0.22341251, 0.22148148,
       0.22116748, 0.22187686, 0.22145748, 0.22080414, 0.22293146,
       0.22432343, 0.22080342, 0.22052217, 0.22114348, 0.22411712,
       0.22090228, 0.22265021, 0.22080962, 0.22119625, 0.22230037,
       0.22128701, 0.22603138, 0.22163717, 0.22102729, 0.22109461,
       0.227892  , 0.22845737, 0.22867099]), 'std_score_time': array([0.00191186, 0.00197051, 0.00156115, 0.00221972, 0.00273751,
       0.0024049 , 0.0034155 , 0.0023208 , 0.00209484, 0.00250251,
       0.00126216, 0.0037963 , 0.0027728 , 0.00249541, 0.00305627,
       0.00195882, 0.00252054, 0.00233256, 0.00283018, 0.00225979,
       0.00262229, 0.00299251, 0.00236088, 0.00171049, 0.00299627,
       0.0028444 , 0.00274394, 0.00236774, 0.00017938, 0.00306422,
       0.00404183, 0.0024004 , 0.0027361 , 0.00243048, 0.00276814,
       0.00204654, 0.00258526, 0.0041256 , 0.00301579, 0.00156187,
       0.00685173, 0.00218049, 0.00843292, 0.00166128, 0.00350085,
       0.00597106, 0.00301292, 0.01178455, 0.00504683, 0.00812425,
       0.00238677, 0.00253227, 0.00343077, 0.00261894, 0.003704  ,
       0.00389106, 0.00283763, 0.00248789, 0.00933182, 0.0004241 ,
       0.00476992, 0.00088035, 0.00312452, 0.01137882, 0.01172064,
       0.01261325, 0.01048893, 0.0042114 , 0.00707975, 0.01167771,
       0.01129236, 0.00239886, 0.00353147, 0.01187002, 0.00342822,
       0.00284379, 0.01210798, 0.00189343, 0.00222324, 0.0024357 ,
       0.003006  , 0.00227372, 0.00174992, 0.00270053, 0.00244675,
       0.00263904, 0.00209308, 0.00961051, 0.00236874, 0.00275247,
       0.00259164, 0.00200455, 0.00265871, 0.00261213, 0.00902289,
       0.00298407, 0.00236043, 0.00313286, 0.00359734, 0.00245361,
       0.00206553, 0.00217395, 0.00220676, 0.00270372, 0.00234526,
       0.00233158, 0.00259926, 0.00218915, 0.00289085, 0.00373865,
       0.00232451, 0.0023682 , 0.00218099, 0.0022632 , 0.00389963,
       0.00200226, 0.00361787, 0.00270468, 0.00206691, 0.00247051,
       0.00272463, 0.00261878, 0.00254303, 0.00288717, 0.0021748 ,
       0.01101121, 0.01219758, 0.01210377]), 'param_alpha': masked_array(data=[0.0024159826580401277, 3.0901848502523763,
                   0.005752264345584179, 0.00046720258857505637,
                   0.0005488030155587154, 0.00015260173475870563,
                   0.48759881872667454, 0.001477529265773933,
                   5.370830785318986, 0.0010566112182911398,
                   0.05974717551901249, 0.07071610021295224,
                   0.02855849830983457, 0.0001, 0.12207259277413236,
                   0.04641920678048299, 0.015097314789618916,
                   0.00010003805361577609, 0.15981093980361263,
                   0.052738750729101405, 0.0038085594950036097,
                   0.0556721906424566, 0.0002980622264756584,
                   0.011830520025876583, 0.02958945433936407,
                   0.05394943376669508, 0.05643457789134969,
                   0.08859466968170077, 0.008771157152604457,
                   0.0015342189131908638, 0.05734164878212257,
                   0.0034929625665319074, 1.5876455593919172,
                   2.7457868814437805, 0.04104292303556405,
                   0.052840952461109786, 0.02145527058506919,
                   0.05567672011791364, 0.053607915122155514,
                   0.001122934960730907, 0.05529690127183731,
                   0.05659538888737776, 0.05653853627812344,
                   0.056173117110116584, 0.055928299492687295,
                   1.0436341433440885, 0.0001335733088277926,
                   0.055981474198935455, 0.0924066010727382,
                   0.05537906178511491, 0.0012123025594591073,
                   0.011510658985160693, 0.053195346964970316,
                   0.057980204472470535, 0.05900660448343658,
                   0.05684931019018482, 0.05353651303785515,
                   0.5543511358998556, 0.054546767724957444,
                   0.0003237127023104601, 0.05144541240932505,
                   0.0025956747637960846, 0.05405957220685846,
                   0.05648370672265726, 0.0010178347081698956,
                   0.052637931554240736, 0.05261616568687104,
                   0.05875696795154987, 0.0563419916454237,
                   0.05278261683693368, 0.052826022280566584,
                   0.053890587318800136, 0.05244159579637107,
                   0.05506331069883255, 0.05173906024188696,
                   0.05458788802883524, 0.05720962445574708,
                   0.05453994620780319, 0.05425508258136052,
                   0.05523527693833213, 0.055235120231795665,
                   0.05610458479441462, 0.05613696230745443,
                   0.05655215075543039, 0.05548164415546213,
                   0.05218143461591256, 0.05701780867332378,
                   0.05738194678193949, 0.057738372902533856,
                   0.055489204426060854, 0.05351806457160249,
                   0.05609660053943455, 0.04899021410825382,
                   0.05691623140942057, 0.007139090848344078,
                   0.054764959860961984, 0.0567946071140018,
                   0.05913263546616119, 0.05050161216615702,
                   0.052889870289850746, 0.0576994544453847,
                   0.054804484897724666, 0.05638012585296094,
                   0.057080588323691665, 0.052792172418519245,
                   0.05440527576602362, 0.05528556062000474,
                   0.05550854194601316, 0.05052391514288168,
                   0.058658766532042994, 0.0546599826697369,
                   0.05172408696580763, 0.0531123276308422,
                   0.05726278074831893, 0.05184121475248964,
                   0.052477374315523614, 0.0545344563383554,
                   0.05810352829197703, 0.05187100869497047,
                   0.056912536381521744, 0.05467936128591835,
                   0.05721583062892836, 0.05377138485246539,
                   0.05262176847319412, 0.05623123546257265,
                   0.052437186240935005, 0.054968438375924224,
                   0.04920764975302671],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[5, 3, 5, 2, 4, 4, 3, 5, 3, 5, 2, 6, 6, 2, 2, 2, 2, 6,
                   6, 6, 2, 2, 6, 6, 2, 6, 2, 6, 2, 2, 2, 3, 2, 3, 6, 6,
                   6, 6, 2, 3, 5, 3, 3, 2, 6, 4, 6, 6, 2, 2, 3, 4, 5, 2,
                   4, 3, 2, 3, 6, 6, 6, 3, 5, 3, 4, 6, 4, 5, 2, 2, 6, 4,
                   6, 6, 2, 3, 3, 5, 5, 3, 4, 3, 5, 5, 5, 3, 6, 3, 4, 2,
                   3, 5, 3, 3, 4, 5, 4, 4, 4, 3, 3, 4, 2, 3, 4, 4, 4, 4,
                   3, 5, 3, 4, 4, 4, 2, 2, 2, 5, 4, 5, 4, 3, 5, 3, 4, 4,
                   3, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.0024159826580401277), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 3.0901848502523763), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.005752264345584179), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00046720258857505637), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0005488030155587154), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00015260173475870563), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.48759881872667454), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.001477529265773933), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 5.370830785318986), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0010566112182911398), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05974717551901249), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07071610021295224), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02855849830983457), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.12207259277413236), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04641920678048299), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.015097314789618916), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00010003805361577609), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.15981093980361263), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052738750729101405), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0038085594950036097), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0556721906424566), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0002980622264756584), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.011830520025876583), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02958945433936407), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05394943376669508), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05643457789134969), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08859466968170077), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.008771157152604457), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0015342189131908638), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05734164878212257), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0034929625665319074), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.5876455593919172), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.7457868814437805), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04104292303556405), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052840952461109786), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.02145527058506919), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05567672011791364), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053607915122155514), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.001122934960730907), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05529690127183731), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05659538888737776), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05653853627812344), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.056173117110116584), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.055928299492687295), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 1.0436341433440885), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0001335733088277926), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.055981474198935455), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0924066010727382), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05537906178511491), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0012123025594591073), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.011510658985160693), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053195346964970316), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.057980204472470535), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05900660448343658), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05684931019018482), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05353651303785515), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.5543511358998556), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054546767724957444), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0003237127023104601), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05144541240932505), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0025956747637960846), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05405957220685846), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05648370672265726), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0010178347081698956), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052637931554240736), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05261616568687104), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05875696795154987), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0563419916454237), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05278261683693368), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052826022280566584), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.053890587318800136), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05244159579637107), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05506331069883255), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05173906024188696), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05458788802883524), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05720962445574708), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05453994620780319), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05425508258136052), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05523527693833213), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.055235120231795665), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05610458479441462), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05613696230745443), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05655215075543039), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05548164415546213), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05218143461591256), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05701780867332378), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05738194678193949), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.057738372902533856), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.055489204426060854), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05351806457160249), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05609660053943455), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04899021410825382), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05691623140942057), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.007139090848344078), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054764959860961984), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0567946071140018), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05913263546616119), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05050161216615702), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052889870289850746), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0576994544453847), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054804484897724666), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05638012585296094), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.057080588323691665), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052792172418519245), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05440527576602362), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05528556062000474), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05550854194601316), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05052391514288168), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.058658766532042994), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0546599826697369), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05172408696580763), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0531123276308422), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05726278074831893), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05184121475248964), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052477374315523614), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0545344563383554), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05810352829197703), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05187100869497047), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.056912536381521744), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05467936128591835), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05721583062892836), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05377138485246539), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05262176847319412), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.05623123546257265), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.052437186240935005), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.054968438375924224), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.04920764975302671), ('degree', 3), ('kernel', 'rbf')])], 'split0_test_score': array([-2.05232587, -2.44376718, -2.05019114, -2.05366891, -2.05360836,
       -2.05390311, -2.13294715, -2.05294828, -2.57540601, -2.0532335 ,
       -2.04284888, -2.0441537 , -2.04170883, -2.05394239, -2.05255   ,
       -2.04173226, -2.04530086, -2.05394236, -2.06114733, -2.0422045 ,
       -2.05142032, -2.0424352 , -2.05379466, -2.04685558, -2.0415335 ,
       -2.04229974, -2.04250609, -2.04649269, -2.04843594, -2.05291039,
       -2.04259934, -2.05162368, -2.3041124 , -2.41768108, -2.04138311,
       -2.04221254, -2.04301596, -2.04243556, -2.04227288, -2.05318606,
       -2.0424057 , -2.04252263, -2.04251679, -2.0424792 , -2.04245533,
       -2.23133371, -2.05391731, -2.04245951, -2.04708731, -2.04241216,
       -2.053126  , -2.04701227, -2.04224043, -2.04266493, -2.04277029,
       -2.04254874, -2.04226726, -2.1450597 , -2.04234672, -2.05377557,
       -2.04210271, -2.05220782, -2.04230841, -2.04251115, -2.05326201,
       -2.04219657, -2.04219486, -2.04274467, -2.04249657, -2.04220795,
       -2.04221137, -2.04229511, -2.04218112, -2.04238733, -2.04212583,
       -2.04234995, -2.04258577, -2.04234618, -2.04232378, -2.04240085,
       -2.04240084, -2.04247215, -2.04247548, -2.04251819, -2.04242022,
       -2.04216065, -2.04256606, -2.04260348, -2.0426401 , -2.04242082,
       -2.04226581, -2.04247133, -2.04192025, -2.04255562, -2.04936076,
       -2.04236388, -2.04254311, -2.04278322, -2.04203097, -2.04221639,
       -2.0426361 , -2.04236698, -2.04250049, -2.04257251, -2.04220871,
       -2.04233559, -2.04240481, -2.04242234, -2.0420326 , -2.0427346 ,
       -2.04235562, -2.04212465, -2.04223389, -2.04259124, -2.04213387,
       -2.04218394, -2.04234575, -2.0426776 , -2.04213621, -2.04255524,
       -2.04235715, -2.04258641, -2.04228574, -2.0421953 , -2.04248518,
       -2.04218077, -2.04237988, -2.04193617]), 'split1_test_score': array([-2.1290248 , -2.48672956, -2.12792404, -2.12975116, -2.12971733,
       -2.12988743, -2.1965375 , -2.12935784, -2.63096776, -2.12950714,
       -2.11815924, -2.1188057 , -2.12156218, -2.12991087, -2.12539533,
       -2.11830776, -2.1251699 , -2.12991085, -2.13266538, -2.11814383,
       -2.12853628, -2.11808765, -2.12982264, -2.12607604, -2.12129607,
       -2.11812088, -2.11807275, -2.12042558, -2.12698305, -2.12933773,
       -2.11808099, -2.12864253, -2.35024077, -2.45898467, -2.11867489,
       -2.11814191, -2.12343756, -2.11808756, -2.11812739, -2.12948362,
       -2.11809494, -2.11806963, -2.11807071, -2.11807787, -2.11808266,
       -2.2851686 , -2.12989591, -2.11808162, -2.12087038, -2.11809335,
       -2.12945193, -2.12617063, -2.11813522, -2.11809054, -2.118124  ,
       -2.11807352, -2.11812875, -2.20952911, -2.11810943, -2.12981121,
       -2.11816793, -2.12896102, -2.11811878, -2.11807179, -2.12952298,
       -2.11814573, -2.11814614, -2.11811204, -2.11807457, -2.11814301,
       -2.11814219, -2.11812201, -2.11814941, -2.11809947, -2.1181625 ,
       -2.11810864, -2.11807899, -2.11810956, -2.11811503, -2.11809614,
       -2.11809614, -2.11807921, -2.11807858, -2.11807045, -2.11809135,
       -2.11815427, -2.11807609, -2.11808159, -2.11808694, -2.11809121,
       -2.1181291 , -2.11807937, -2.11821228, -2.11807454, -2.12748733,
       -2.11810523, -2.11807268, -2.11813002, -2.11818521, -2.11814099,
       -2.11808636, -2.11810447, -2.11807382, -2.11807704, -2.11814283,
       -2.11811215, -2.11809516, -2.11809083, -2.11818481, -2.11810733,
       -2.11810725, -2.11816278, -2.11813679, -2.1180798 , -2.11816061,
       -2.11814874, -2.11810967, -2.11809236, -2.11816005, -2.11807448,
       -2.11810688, -2.11807909, -2.11812428, -2.11814603, -2.11807674,
       -2.11814949, -2.1181013 , -2.11820844]), 'split2_test_score': array([-2.1965852 , -2.55001039, -2.19416124, -2.19823279, -2.19816081,
       -2.19851213, -2.24251455, -2.19735521, -2.66814172, -2.19771726,
       -2.17801038, -2.17779854, -2.18342627, -2.19855913, -2.18028753,
       -2.17920533, -2.18891087, -2.19855909, -2.18496729, -2.17843207,
       -2.19553895, -2.17819716, -2.19838261, -2.19058077, -2.18308089,
       -2.17832015, -2.17814618, -2.17803993, -2.19229881, -2.19730684,
       -2.1781041 , -2.19577197, -2.41429224, -2.52472598, -2.18009391,
       -2.17842143, -2.18607281, -2.17819685, -2.17834584, -2.19765988,
       -2.17822303, -2.17813708, -2.17813967, -2.17816343, -2.1781798 ,
       -2.34039928, -2.19852912, -2.17817623, -2.17816344, -2.17821732,
       -2.19758276, -2.19075306, -2.17838486, -2.17807737, -2.17803723,
       -2.17812565, -2.17835127, -2.2564596 , -2.17827626, -2.19835983,
       -2.17857032, -2.19644753, -2.17831195, -2.17814296, -2.19775087,
       -2.17844261, -2.17844489, -2.17804667, -2.17815226, -2.1784275 ,
       -2.17842298, -2.17832454, -2.17846324, -2.17823938, -2.17853834,
       -2.17827329, -2.1781098 , -2.17827676, -2.17829753, -2.17822732,
       -2.17822733, -2.17816799, -2.17816583, -2.17813905, -2.17821023,
       -2.17849082, -2.17811818, -2.17810237, -2.17808733, -2.17820971,
       -2.17835267, -2.17816852, -2.17886339, -2.17812267, -2.1932836 ,
       -2.17826057, -2.17812809, -2.17803253, -2.17867598, -2.17841635,
       -2.17808895, -2.17825774, -2.17814975, -2.17811542, -2.17842651,
       -2.17828654, -2.17822382, -2.17820838, -2.17867329, -2.17805045,
       -2.1782681 , -2.17853996, -2.17839338, -2.1781075 , -2.1785273 ,
       -2.17845947, -2.17827715, -2.17807236, -2.17852409, -2.17812283,
       -2.1782667 , -2.17810953, -2.17833349, -2.1784443 , -2.17815957,
       -2.17846371, -2.17824608, -2.17883582]), 'mean_test_score': array([-2.12597862, -2.49350238, -2.12409214, -2.12721762, -2.12716217,
       -2.12743422, -2.1906664 , -2.12655378, -2.6248385 , -2.1268193 ,
       -2.11300616, -2.11358598, -2.11556576, -2.12747079, -2.11941095,
       -2.11308178, -2.11979388, -2.12747077, -2.12626   , -2.1129268 ,
       -2.12516518, -2.11290667, -2.1273333 , -2.1211708 , -2.11530349,
       -2.11291359, -2.11290834, -2.11498607, -2.1225726 , -2.12651832,
       -2.11292814, -2.12534606, -2.35621514, -2.46713058, -2.11338397,
       -2.1129253 , -2.11750878, -2.11290666, -2.11291537, -2.12677652,
       -2.11290789, -2.11290978, -2.11290906, -2.11290684, -2.11290593,
       -2.28563386, -2.12744745, -2.11290579, -2.11537371, -2.11290761,
       -2.12672023, -2.12131199, -2.11292017, -2.11294428, -2.11297717,
       -2.11291597, -2.11291576, -2.2036828 , -2.1129108 , -2.12731554,
       -2.11294699, -2.12587212, -2.11291305, -2.11290863, -2.12684529,
       -2.1129283 , -2.11292863, -2.1129678 , -2.1129078 , -2.11292615,
       -2.11292552, -2.11291389, -2.11293126, -2.11290873, -2.11294222,
       -2.11291063, -2.11292485, -2.11291083, -2.11291211, -2.1129081 ,
       -2.11290811, -2.11290645, -2.11290663, -2.11290923, -2.11290727,
       -2.11293525, -2.11292011, -2.11292915, -2.11293812, -2.11290725,
       -2.11291586, -2.11290641, -2.11299864, -2.11291761, -2.12337723,
       -2.11290989, -2.11291463, -2.11298192, -2.11296405, -2.11292458,
       -2.11293714, -2.11290973, -2.11290802, -2.11292166, -2.11292601,
       -2.11291143, -2.11290793, -2.11290718, -2.11296357, -2.11296412,
       -2.11291032, -2.11294246, -2.11292136, -2.11292618, -2.11294059,
       -2.11293072, -2.11291086, -2.11294744, -2.11294012, -2.11291752,
       -2.11291024, -2.11292501, -2.1129145 , -2.11292854, -2.11290716,
       -2.11293133, -2.11290909, -2.11299348]), 'std_test_score': array([0.058933  , 0.04363721, 0.05883797, 0.05904514, 0.05904094,
       0.05906187, 0.04492294, 0.05898722, 0.03810647, 0.05901586,
       0.05529963, 0.05468498, 0.05801107, 0.05906474, 0.05232003,
       0.05624467, 0.05875165, 0.05906474, 0.0507518 , 0.05573689,
       0.05888445, 0.05554553, 0.05905402, 0.05877799, 0.05794163,
       0.05565204, 0.05549511, 0.0538415 , 0.05881451, 0.0589833 ,
       0.05543945, 0.05889444, 0.04517867, 0.04407887, 0.0567519 ,
       0.05572926, 0.05855299, 0.05554526, 0.05567367, 0.05901224,
       0.05556837, 0.05548446, 0.05548798, 0.0555134 , 0.05553006,
       0.04452705, 0.0590629 , 0.05552686, 0.05365258, 0.05556335,
       0.05900585, 0.05878241, 0.05570293, 0.05540153, 0.05534229,
       0.05546906, 0.05567821, 0.04566632, 0.05561462, 0.05905265,
       0.05583485, 0.05892611, 0.0556451 , 0.05549169, 0.05901771,
       0.05574443, 0.05574606, 0.05535645, 0.05550158, 0.05573361,
       0.05573037, 0.05565576, 0.05575916, 0.05558269, 0.05581238,
       0.05561207, 0.05544736, 0.05561505, 0.05563283, 0.05557214,
       0.05557215, 0.05551822, 0.05551594, 0.05548714, 0.0555571 ,
       0.05577878, 0.05545889, 0.05543704, 0.05541583, 0.05555664,
       0.05567939, 0.05551878, 0.05602822, 0.05546501, 0.05882809,
       0.05560109, 0.05547237, 0.05533517, 0.05590713, 0.05572561,
       0.05541814, 0.05559864, 0.05549891, 0.05545511, 0.0557329 ,
       0.05562344, 0.05556906, 0.05555547, 0.05590537, 0.05536205,
       0.05560759, 0.05581352, 0.05570908, 0.05544417, 0.05580459,
       0.05575647, 0.05561539, 0.05539427, 0.05580232, 0.05546524,
       0.05560639, 0.05544698, 0.0556633 , 0.05574564, 0.05550933,
       0.05575949, 0.05558852, 0.05601057]), 'rank_test_score': array([106, 127, 102, 115, 114, 118, 122, 109, 128, 112,  87,  90,  94,
       121,  96,  88,  97, 120, 107,  60, 103,   7, 117,  98,  92,  38,
        20,  91, 100, 108,  61, 104, 125, 126,  89,  55,  95,   6,  42,
       111,  15,  27,  23,   8,   2, 124, 119,   1,  93,  13, 110,  99,
        49,  76,  83,  45,  43, 123,  32, 116,  77, 105,  37,  21, 113,
        62,  64,  82,  14,  58,  56,  39,  67,  22,  74,  31,  53,  33,
        36,  18,  19,   4,   5,  25,  12,  69,  48,  65,  71,  11,  44,
         3,  86,  47, 101,  28,  41,  84,  80,  52,  70,  26,  17,  51,
        57,  35,  16,  10,  79,  81,  30,  75,  50,  59,  73,  66,  34,
        78,  72,  46,  29,  54,  40,  63,   9,  68,  24,  85], dtype=int32)}
-2.1129057876138884
OrderedDict([('alpha', 0.055981474198935455), ('degree', 6), ('kernel', 'rbf')])
[CV 3/3] END alpha=0.00018052326983311351, degree=4, kernel=rbf;, score=-2.298 total time=   0.1s
[CV 2/3] END alpha=0.12344056705809126, degree=6, kernel=rbf;, score=-2.105 total time=   0.1s
[CV 1/3] END alpha=0.09685088955202271, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09682155876585258, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 2/3] END alpha=0.09396907009927037, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09277627653645028, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.00046720258857505637, degree=2, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.02958945433936407, degree=2, kernel=rbf;, score=-2.121 total time=   0.6s
[CV 2/3] END alpha=1.0436341433440885, degree=4, kernel=rbf;, score=-2.285 total time=   0.5s
[CV 1/3] END alpha=0.05261616568687104, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05701780867332378, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05550854194601316, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.061867157409216944, degree=5, kernel=rbf;, score=-2.269 total time=   0.1s
[CV 2/3] END alpha=0.0035321218087645896, degree=6, kernel=rbf;, score=-2.159 total time=   0.1s
[CV 2/3] END alpha=0.09451460387746062, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.08103954675321089, degree=5, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 2/3] END alpha=0.10022799388537948, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09155275928877428, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.0005488030155587154, degree=4, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.05394943376669508, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0001335733088277926, degree=6, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 3/3] END alpha=0.05261616568687104, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05738194678193949, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05550854194601316, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.00010262443391733491, degree=5, kernel=rbf;, score=-2.301 total time=   0.1s
[CV 3/3] END alpha=0.0035321218087645896, degree=6, kernel=rbf;, score=-2.293 total time=   0.1s
[CV 1/3] END alpha=0.09451460387746062, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09767399807504466, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.10022799388537948, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09155275928877428, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.00015260173475870563, degree=4, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 3/3] END alpha=0.05394943376669508, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0001335733088277926, degree=6, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 1/3] END alpha=0.05875696795154987, degree=5, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05738194678193949, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05052391514288168, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.03308583404863251, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.00364009750702875, degree=6, kernel=rbf;, score=-2.159 total time=   0.1s
[CV 1/3] END alpha=0.09182234190907873, degree=5, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 2/3] END alpha=0.08103954675321089, degree=5, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 1/3] END alpha=0.10022799388537948, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09277627653645028, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0005488030155587154, degree=4, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 1/3] END alpha=0.05394943376669508, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=1.0436341433440885, degree=4, kernel=rbf;, score=-2.340 total time=   0.6s
[CV 2/3] END alpha=0.05261616568687104, degree=4, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 2/3] END alpha=0.05738194678193949, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05052391514288168, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.926 total time=   0.1s
[CV 3/3] END alpha=0.00045162076187975093, degree=3, kernel=rbf;, score=-2.297 total time=   0.1s
[CV 3/3] END alpha=0.09451460387746062, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09767399807504466, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09559347900337864, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09693356270379709, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.00015260173475870563, degree=4, kernel=rbf;, score=-2.199 total time=   0.5s
[CV 2/3] END alpha=0.05643457789134969, degree=2, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.055981474198935455, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05875696795154987, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.057738372902533856, degree=4, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05052391514288168, degree=3, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 3/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.943 total time=   0.1s
[CV 1/3] END alpha=0.07181283694508224, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09229901742027381, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 3/3] END alpha=0.09767399807504466, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09559347900337864, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09155275928877428, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.00015260173475870563, degree=4, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 1/3] END alpha=0.05643457789134969, degree=2, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.0001335733088277926, degree=6, kernel=rbf;, score=-2.199 total time=   0.5s
[CV 2/3] END alpha=0.05875696795154987, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.057738372902533856, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.058658766532042994, degree=5, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.00010262443391733491, degree=5, kernel=rbf;, score=-2.298 total time=   0.1s
[CV 2/3] END alpha=0.00045162076187975093, degree=3, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 1/3] END alpha=0.09229901742027381, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09125709270575524, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09559347900337864, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09693356270379709, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.48759881872667454, degree=3, kernel=rbf;, score=-2.133 total time=   0.5s
[CV 3/3] END alpha=0.05643457789134969, degree=2, kernel=rbf;, score=-2.178 total time=   0.6s
[CV 2/3] END alpha=0.055981474198935455, degree=6, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.0563419916454237, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.057738372902533856, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.058658766532042994, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END .alpha=10.0, degree=2, kernel=rbf;, score=-2.905 total time=   0.1s
[CV 2/3] END alpha=0.07181283694508224, degree=6, kernel=rbf;, score=-2.112 total time=   0.1s
[CV 1/3] END alpha=0.09284976445182927, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09125709270575524, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09435034874983352, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09693356270379709, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.48759881872667454, degree=3, kernel=rbf;, score=-2.197 total time=   0.5s
[CV 1/3] END alpha=0.08859466968170077, degree=6, kernel=rbf;, score=-2.046 total time=   0.5s
[CV 3/3] END alpha=0.055981474198935455, degree=6, kernel=rbf;, score=-2.178 total time=   0.6s
[CV 2/3] END alpha=0.0563419916454237, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.055489204426060854, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.058658766532042994, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.07265324101100877, degree=2, kernel=rbf;, score=-2.269 total time=   0.1s
[CV 2/3] END alpha=0.1225387374532387, degree=2, kernel=rbf;, score=-2.105 total time=   0.1s
[CV 1/3] END alpha=0.0934390949370833, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09278551273155151, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09373718742717593, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09186554297038506, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=5.370830785318986, degree=3, kernel=rbf;, score=-2.575 total time=   0.5s
[CV 3/3] END alpha=0.008771157152604457, degree=2, kernel=rbf;, score=-2.192 total time=   0.5s
[CV 1/3] END alpha=0.05537906178511491, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05278261683693368, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05351806457160249, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0546599826697369, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.07265324101100877, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.07181283694508224, degree=6, kernel=rbf;, score=-2.269 total time=   0.1s
[CV 2/3] END alpha=0.09284976445182927, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09358219349346222, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09435034874983352, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0927449638880723, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.001477529265773933, degree=5, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 3/3] END alpha=0.08859466968170077, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0924066010727382, degree=2, kernel=rbf;, score=-2.121 total time=   0.5s
[CV 3/3] END alpha=0.0563419916454237, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.055489204426060854, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0546599826697369, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 2/3] END alpha=0.00010262443391733491, degree=5, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 1/3] END alpha=0.00045162076187975093, degree=3, kernel=rbf;, score=-2.300 total time=   0.1s
[CV 2/3] END alpha=0.09229901742027381, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09125709270575524, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09435034874983352, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0927449638880723, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.48759881872667454, degree=3, kernel=rbf;, score=-2.243 total time=   0.5s
[CV 2/3] END alpha=0.08859466968170077, degree=6, kernel=rbf;, score=-2.120 total time=   0.5s
[CV 1/3] END alpha=0.0924066010727382, degree=2, kernel=rbf;, score=-2.047 total time=   0.6s
[CV 1/3] END alpha=0.05278261683693368, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.055489204426060854, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0546599826697369, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.07265324101100877, degree=2, kernel=rbf;, score=-2.112 total time=   0.1s
[CV 1/3] END alpha=0.1225387374532387, degree=2, kernel=rbf;, score=-2.266 total time=   0.1s
[CV 3/3] END alpha=0.09284976445182927, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09358219349346222, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09373718742717593, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0927449638880723, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.001477529265773933, degree=5, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 2/3] END alpha=0.008771157152604457, degree=2, kernel=rbf;, score=-2.127 total time=   0.5s
[CV 3/3] END alpha=0.0924066010727382, degree=2, kernel=rbf;, score=-2.178 total time=   0.6s
[CV 2/3] END alpha=0.05278261683693368, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05351806457160249, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05172408696580763, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0015558969898871553, degree=6, kernel=rbf;, score=-2.296 total time=   0.1s
[CV 2/3] END alpha=0.052688591988002256, degree=2, kernel=rbf;, score=-2.118 total time=   0.1s
[CV 2/3] END alpha=0.0954843118234904, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09534356169345014, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09354830914157543, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09710348934611213, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=5.370830785318986, degree=3, kernel=rbf;, score=-2.668 total time=   0.5s
[CV 2/3] END alpha=0.0015342189131908638, degree=2, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 1/3] END alpha=0.0012123025594591073, degree=3, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 3/3] END alpha=0.052826022280566584, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05609660053943455, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05172408696580763, degree=4, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 1/3] END alpha=0.0015558969898871553, degree=6, kernel=rbf;, score=-2.299 total time=   0.1s
[CV 3/3] END alpha=0.1225387374532387, degree=2, kernel=rbf;, score=-2.275 total time=   0.1s
[CV 2/3] END alpha=0.0934390949370833, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09358219349346222, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09373718742717593, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09186554297038506, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.001477529265773933, degree=5, kernel=rbf;, score=-2.197 total time=   0.5s
[CV 1/3] END alpha=0.008771157152604457, degree=2, kernel=rbf;, score=-2.048 total time=   0.5s
[CV 2/3] END alpha=0.05537906178511491, degree=2, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.052826022280566584, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05351806457160249, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05172408696580763, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.09973002426275132, degree=2, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 3/3] END alpha=2.0383152747481814, degree=5, kernel=rbf;, score=-2.569 total time=   0.1s
[CV 1/3] END alpha=0.09827686660487896, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09534356169345014, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09357712992343513, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09519475359212358, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0010566112182911398, degree=5, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.05734164878212257, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.011510658985160693, degree=4, kernel=rbf;, score=-2.047 total time=   0.5s
[CV 3/3] END alpha=0.053890587318800136, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.04899021410825382, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05726278074831893, degree=4, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 1/3] END alpha=0.0023277132993632915, degree=2, kernel=rbf;, score=-2.299 total time=   0.1s
[CV 3/3] END alpha=0.08284487932720483, degree=2, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 3/3] END alpha=0.09827686660487896, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09320939099162477, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09437534757938731, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09519475359212358, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.05974717551901249, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0034929625665319074, degree=3, kernel=rbf;, score=-2.052 total time=   0.5s
[CV 3/3] END alpha=0.011510658985160693, degree=4, kernel=rbf;, score=-2.191 total time=   0.5s
[CV 1/3] END alpha=0.05244159579637107, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.04899021410825382, degree=3, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 2/3] END alpha=0.05726278074831893, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.0015558969898871553, degree=6, kernel=rbf;, score=-2.162 total time=   0.1s
[CV 1/3] END alpha=0.052688591988002256, degree=2, kernel=rbf;, score=-2.268 total time=   0.1s
[CV 3/3] END alpha=0.0934390949370833, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09278551273155151, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09354830914157543, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09186554297038506, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=5.370830785318986, degree=3, kernel=rbf;, score=-2.631 total time=   0.5s
[CV 1/3] END alpha=0.0015342189131908638, degree=2, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 3/3] END alpha=0.05537906178511491, degree=2, kernel=rbf;, score=-2.178 total time=   0.6s
[CV 2/3] END alpha=0.052826022280566584, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05609660053943455, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0531123276308422, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.09388167821781522, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0012002047239811832, degree=6, kernel=rbf;, score=-2.296 total time=   0.1s
[CV 2/3] END alpha=0.024017331042555098, degree=2, kernel=rbf;, score=-2.135 total time=   0.1s
[CV 3/3] END alpha=0.10111644041116956, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09387469000692182, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09216730760134893, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.07071610021295224, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=1.5876455593919172, degree=2, kernel=rbf;, score=-2.304 total time=   0.5s
[CV 3/3] END alpha=0.053195346964970316, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.05244159579637107, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05691623140942057, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05726278074831893, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.09467892678938142, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.052688591988002256, degree=2, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 1/3] END alpha=0.0954843118234904, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09278551273155151, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09354830914157543, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09710348934611213, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0010566112182911398, degree=5, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 1/3] END alpha=0.05734164878212257, degree=2, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.0012123025594591073, degree=3, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.053890587318800136, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.04899021410825382, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0531123276308422, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.09467892678938142, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=2.0383152747481814, degree=5, kernel=rbf;, score=-2.529 total time=   0.1s
[CV 3/3] END alpha=0.0954843118234904, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09534356169345014, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09357712992343513, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09710348934611213, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0010566112182911398, degree=5, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 3/3] END alpha=0.0015342189131908638, degree=2, kernel=rbf;, score=-2.197 total time=   0.5s
[CV 2/3] END alpha=0.0012123025594591073, degree=3, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 1/3] END alpha=0.053890587318800136, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05609660053943455, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0531123276308422, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.09973002426275132, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.08284487932720483, degree=2, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 1/3] END alpha=0.08979519266632587, degree=6, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09320939099162477, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09437534757938731, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09659346239935172, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.07071610021295224, degree=6, kernel=rbf;, score=-2.044 total time=   0.5s
[CV 3/3] END alpha=0.0034929625665319074, degree=3, kernel=rbf;, score=-2.196 total time=   0.5s
[CV 2/3] END alpha=0.053195346964970316, degree=5, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.05506331069883255, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05691623140942057, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05184121475248964, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.09388167821781522, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09661926372795007, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.024017331042555098, degree=2, kernel=rbf;, score=-2.276 total time=   0.1s
[CV 1/3] END alpha=0.09318322351190952, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09387469000692182, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09216730760134893, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.02855849830983457, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=1.5876455593919172, degree=2, kernel=rbf;, score=-2.414 total time=   0.5s
[CV 1/3] END alpha=0.057980204472470535, degree=2, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05506331069883255, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.007139090848344078, degree=4, kernel=rbf;, score=-2.049 total time=   0.5s
[CV 3/3] END alpha=0.05184121475248964, degree=2, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 2/3] END alpha=0.09467892678938142, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=2.0383152747481814, degree=5, kernel=rbf;, score=-2.416 total time=   0.1s
[CV 2/3] END alpha=0.09827686660487896, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09320939099162477, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09357712992343513, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09519475359212358, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.05974717551901249, degree=2, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05734164878212257, degree=2, kernel=rbf;, score=-2.178 total time=   0.7s
[CV 2/3] END alpha=0.011510658985160693, degree=4, kernel=rbf;, score=-2.126 total time=   0.5s
[CV 2/3] END alpha=0.05244159579637107, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05691623140942057, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05184121475248964, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.0023277132993632915, degree=2, kernel=rbf;, score=-2.161 total time=   0.1s
[CV 1/3] END alpha=0.0012002047239811832, degree=6, kernel=rbf;, score=-2.300 total time=   0.1s
[CV 3/3] END alpha=0.08979519266632587, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.10111644041116956, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09387469000692182, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09659346239935172, degree=2, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.07071610021295224, degree=6, kernel=rbf;, score=-2.119 total time=   0.5s
[CV 2/3] END alpha=1.5876455593919172, degree=2, kernel=rbf;, score=-2.350 total time=   0.5s
[CV 2/3] END alpha=0.057980204472470535, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05173906024188696, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.007139090848344078, degree=4, kernel=rbf;, score=-2.193 total time=   0.5s
[CV 1/3] END alpha=0.052477374315523614, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0023277132993632915, degree=2, kernel=rbf;, score=-2.295 total time=   0.1s
[CV 2/3] END alpha=0.0012002047239811832, degree=6, kernel=rbf;, score=-2.163 total time=   0.1s
[CV 1/3] END alpha=0.024017331042555098, degree=2, kernel=rbf;, score=-2.281 total time=   0.1s
[CV 2/3] END alpha=0.09318322351190952, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09577033152020671, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09216730760134893, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.02855849830983457, degree=6, kernel=rbf;, score=-2.122 total time=   0.5s
[CV 2/3] END alpha=2.7457868814437805, degree=3, kernel=rbf;, score=-2.459 total time=   0.5s
[CV 1/3] END alpha=0.05900660448343658, degree=4, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05173906024188696, degree=2, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 2/3] END alpha=0.054764959860961984, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0545344563383554, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.18064036481953494, degree=6, kernel=rbf;, score=-2.275 total time=   0.1s
[CV 2/3] END alpha=0.09268218687758156, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09582776398973157, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09736822210517422, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09577033152020671, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09740925322850058, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.02855849830983457, degree=6, kernel=rbf;, score=-2.183 total time=   0.5s
[CV 1/3] END alpha=2.7457868814437805, degree=3, kernel=rbf;, score=-2.418 total time=   0.5s
[CV 3/3] END alpha=0.057980204472470535, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05173906024188696, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.054764959860961984, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.052477374315523614, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.09973002426275132, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.08284487932720483, degree=2, kernel=rbf;, score=-2.110 total time=   0.1s
[CV 2/3] END alpha=0.08979519266632587, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.10111644041116956, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09437534757938731, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09659346239935172, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.05974717551901249, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0034929625665319074, degree=3, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 1/3] END alpha=0.053195346964970316, degree=5, kernel=rbf;, score=-2.042 total time=   0.6s
[CV 2/3] END alpha=0.05506331069883255, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.007139090848344078, degree=4, kernel=rbf;, score=-2.127 total time=   0.5s
[CV 2/3] END alpha=0.052477374315523614, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.09388167821781522, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09661926372795007, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09582776398973157, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09736822210517422, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09105833960540594, degree=3, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09740925322850058, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 3/3] END alpha=2.7457868814437805, degree=3, kernel=rbf;, score=-2.525 total time=   0.5s
[CV 2/3] END alpha=0.05900660448343658, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05458788802883524, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0567946071140018, degree=4, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.0545344563383554, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.18064036481953494, degree=6, kernel=rbf;, score=-2.289 total time=   0.1s
[CV 3/3] END alpha=0.09661926372795007, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09582776398973157, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09318322351190952, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09577033152020671, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09740925322850058, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 1/3] END alpha=0.04104292303556405, degree=6, kernel=rbf;, score=-2.041 total time=   0.5s
[CV 3/3] END alpha=0.05900660448343658, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05458788802883524, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.054764959860961984, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0545344563383554, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.00010012332045451719, degree=2, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 3/3] END alpha=0.09268218687758156, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09510657098806762, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09538559887714555, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09105833960540594, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09326375947853295, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.12207259277413236, degree=2, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 1/3] END alpha=0.052840952461109786, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05684931019018482, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.05458788802883524, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0567946071140018, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05810352829197703, degree=5, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 2/3] END alpha=0.18064036481953494, degree=6, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 1/3] END alpha=0.09268218687758156, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 2/3] END alpha=0.09510657098806762, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.09736822210517422, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09105833960540594, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09326375947853295, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0001, degree=2, kernel=rbf;, score=-2.199 total time=   0.5s
[CV 2/3] END alpha=0.04104292303556405, degree=6, kernel=rbf;, score=-2.119 total time=   0.5s
[CV 2/3] END alpha=0.05684931019018482, degree=3, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.05720962445574708, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.0567946071140018, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05810352829197703, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.09377109523585818, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09275970718713633, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0936418359332222, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09453141172301188, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09904779214021822, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09221999530700616, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.04641920678048299, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.052840952461109786, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05353651303785515, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05720962445574708, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05913263546616119, degree=4, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05810352829197703, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.00010012332045451719, degree=2, kernel=rbf;, score=-2.301 total time=   0.1s
[CV 1/3] END alpha=0.09275970718713633, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09510657098806762, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09538559887714555, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09904779214021822, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09326375947853295, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.12207259277413236, degree=2, kernel=rbf;, score=-2.125 total time=   0.5s
[CV 3/3] END alpha=0.04104292303556405, degree=6, kernel=rbf;, score=-2.180 total time=   0.5s
[CV 1/3] END alpha=0.05684931019018482, degree=3, kernel=rbf;, score=-2.043 total time=   0.6s
[CV 2/3] END alpha=0.05720962445574708, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05913263546616119, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05187100869497047, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.00010012332045451719, degree=2, kernel=rbf;, score=-2.298 total time=   0.1s
[CV 2/3] END alpha=0.09275970718713633, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.0936418359332222, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09538559887714555, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09904779214021822, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09221999530700616, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.12207259277413236, degree=2, kernel=rbf;, score=-2.180 total time=   0.5s
[CV 2/3] END alpha=0.052840952461109786, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05353651303785515, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05453994620780319, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05913263546616119, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05187100869497047, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.09377109523585818, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09561994454507348, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.0936418359332222, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09453141172301188, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09306097539220246, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09221999530700616, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.04641920678048299, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.02145527058506919, degree=6, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05353651303785515, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05453994620780319, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05050161216615702, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05187100869497047, degree=4, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 1/3] END alpha=0.09377109523585818, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09561994454507348, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09250779295878547, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09453141172301188, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09306097539220246, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09342377794103679, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.04641920678048299, degree=2, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 2/3] END alpha=0.02145527058506919, degree=6, kernel=rbf;, score=-2.123 total time=   0.5s
[CV 1/3] END alpha=0.5543511358998556, degree=3, kernel=rbf;, score=-2.145 total time=   0.5s
[CV 3/3] END alpha=0.05453994620780319, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05050161216615702, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.056912536381521744, degree=5, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 2/3] END alpha=0.17319242136664328, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09502109633301166, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.09250779295878547, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09308181382903039, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09306097539220246, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09342377794103679, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.015097314789618916, degree=2, kernel=rbf;, score=-2.045 total time=   0.5s
[CV 1/3] END alpha=0.05567672011791364, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.5543511358998556, degree=3, kernel=rbf;, score=-2.256 total time=   0.5s
[CV 2/3] END alpha=0.05425508258136052, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.052889870289850746, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.056912536381521744, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.1097379562195451, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.17319242136664328, degree=2, kernel=rbf;, score=-2.287 total time=   0.1s
[CV 3/3] END alpha=0.09561994454507348, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09250779295878547, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09308181382903039, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.08883009489815147, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09342377794103679, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.015097314789618916, degree=2, kernel=rbf;, score=-2.125 total time=   0.5s
[CV 3/3] END alpha=0.02145527058506919, degree=6, kernel=rbf;, score=-2.186 total time=   0.5s
[CV 2/3] END alpha=0.5543511358998556, degree=3, kernel=rbf;, score=-2.210 total time=   0.5s
[CV 1/3] END alpha=0.05425508258136052, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05050161216615702, degree=4, kernel=rbf;, score=-2.179 total time=   0.5s
[CV 2/3] END alpha=0.056912536381521744, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.17319242136664328, degree=2, kernel=rbf;, score=-2.274 total time=   0.1s
[CV 1/3] END alpha=0.09502109633301166, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.0954235943237996, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09308181382903039, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.08883009489815147, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.08689715637948875, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.015097314789618916, degree=2, kernel=rbf;, score=-2.189 total time=   0.5s
[CV 2/3] END alpha=0.05567672011791364, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.054546767724957444, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05425508258136052, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.052889870289850746, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05467936128591835, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.009518551520807533, degree=5, kernel=rbf;, score=-2.286 total time=   0.1s
[CV 1/3] END alpha=0.09088539130491649, degree=6, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.08920660221938746, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09456267548841164, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09547976385148227, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0965972215445615, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0943469232240186, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.15981093980361263, degree=6, kernel=rbf;, score=-2.061 total time=   0.5s
[CV 3/3] END alpha=0.053607915122155514, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.054546767724957444, degree=6, kernel=rbf;, score=-2.178 total time=   0.6s
[CV 2/3] END alpha=0.05523527693833213, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.052889870289850746, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05467936128591835, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.00010738590617350513, degree=5, kernel=rbf;, score=-2.301 total time=   0.1s
[CV 3/3] END alpha=0.09088539130491649, degree=6, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09249412265086239, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09456267548841164, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 3/3] END alpha=0.09012220832135613, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0965972215445615, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0943469232240186, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.00010003805361577609, degree=6, kernel=rbf;, score=-2.199 total time=   0.6s
[CV 2/3] END alpha=0.053607915122155514, degree=2, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 2/3] END alpha=0.0003237127023104601, degree=6, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 3/3] END alpha=0.05523527693833213, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0576994544453847, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05721583062892836, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 1/3] END alpha=0.009518551520807533, degree=5, kernel=rbf;, score=-2.292 total time=   0.1s
[CV 3/3] END alpha=0.02032743781527514, degree=2, kernel=rbf;, score=-2.278 total time=   0.1s
[CV 3/3] END alpha=0.09502109633301166, degree=2, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0954235943237996, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09012220832135613, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.0965972215445615, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.08689715637948875, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.00010003805361577609, degree=6, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 3/3] END alpha=0.05567672011791364, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.054546767724957444, degree=6, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 1/3] END alpha=0.05523527693833213, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.0576994544453847, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05467936128591835, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.1097379562195451, degree=4, kernel=rbf;, score=-2.273 total time=   0.1s
[CV 2/3] END alpha=0.02032743781527514, degree=2, kernel=rbf;, score=-2.138 total time=   0.1s
[CV 2/3] END alpha=0.08920660221938746, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09456267548841164, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 2/3] END alpha=0.09547976385148227, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0909951521068465, degree=3, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.0943469232240186, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.15981093980361263, degree=6, kernel=rbf;, score=-2.133 total time=   0.5s
[CV 1/3] END alpha=0.001122934960730907, degree=3, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 3/3] END alpha=0.0003237127023104601, degree=6, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.055235120231795665, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.054804484897724666, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05721583062892836, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.1097379562195451, degree=4, kernel=rbf;, score=-2.106 total time=   0.1s
[CV 1/3] END alpha=0.02032743781527514, degree=2, kernel=rbf;, score=-2.284 total time=   0.1s
[CV 1/3] END alpha=0.08920660221938746, degree=2, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.0954235943237996, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09012220832135613, degree=5, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.08883009489815147, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.08689715637948875, degree=4, kernel=rbf;, score=-2.109 total time=   0.1s
[CV 1/3] END alpha=0.00010003805361577609, degree=6, kernel=rbf;, score=-2.054 total time=   0.6s
[CV 1/3] END alpha=0.053607915122155514, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.0003237127023104601, degree=6, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 1/3] END alpha=0.055235120231795665, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0576994544453847, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05721583062892836, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.00010738590617350513, degree=5, kernel=rbf;, score=-2.298 total time=   0.1s
[CV 1/3] END alpha=0.04765530844393876, degree=2, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 3/3] END alpha=0.09249412265086239, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09243184595917849, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 2/3] END alpha=0.09835780852200761, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.07296657024861522, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09514394567399083, degree=5, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.052738750729101405, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.001122934960730907, degree=3, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.05144541240932505, degree=6, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 3/3] END alpha=0.055235120231795665, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.054804484897724666, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05377138485246539, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.007132700970753414, degree=5, kernel=rbf;, score=-2.294 total time=   0.1s
[CV 3/3] END alpha=0.04765530844393876, degree=2, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 2/3] END alpha=0.09353644825378811, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09243184595917849, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 3/3] END alpha=0.09547976385148227, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0909951521068465, degree=3, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09514394567399083, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.15981093980361263, degree=6, kernel=rbf;, score=-2.185 total time=   0.5s
[CV 2/3] END alpha=0.001122934960730907, degree=3, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 1/3] END alpha=0.05144541240932505, degree=6, kernel=rbf;, score=-2.042 total time=   0.6s
[CV 1/3] END alpha=0.05610458479441462, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.054804484897724666, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05377138485246539, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.5092144380526045, degree=4, kernel=rbf;, score=-2.339 total time=   0.1s
[CV 3/3] END alpha=0.05705634565376424, degree=6, kernel=rbf;, score=-2.269 total time=   0.1s
[CV 3/3] END alpha=0.09237940226389478, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09390933305555672, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.10108945362167311, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09800855788126539, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.0024159826580401277, degree=5, kernel=rbf;, score=-2.052 total time=   0.5s
[CV 3/3] END alpha=0.0038085594950036097, degree=2, kernel=rbf;, score=-2.196 total time=   0.5s
[CV 3/3] END alpha=0.05529690127183731, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.0025956747637960846, degree=3, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 3/3] END alpha=0.05610458479441462, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05638012585296094, degree=2, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05377138485246539, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.00010738590617350513, degree=5, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 2/3] END alpha=0.04765530844393876, degree=2, kernel=rbf;, score=-2.120 total time=   0.1s
[CV 1/3] END alpha=0.09353644825378811, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.0960367473180617, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09835780852200761, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.07296657024861522, degree=5, kernel=rbf;, score=-2.112 total time=   0.1s
[CV 1/3] END alpha=0.08906780165135629, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.052738750729101405, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05529690127183731, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.05144541240932505, degree=6, kernel=rbf;, score=-2.179 total time=   0.6s
[CV 2/3] END alpha=0.05610458479441462, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05638012585296094, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05262176847319412, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 2/3] END alpha=0.009518551520807533, degree=5, kernel=rbf;, score=-2.151 total time=   0.1s
[CV 2/3] END alpha=0.09088539130491649, degree=6, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09249412265086239, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09243184595917849, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09835780852200761, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0909951521068465, degree=3, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09514394567399083, degree=5, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.052738750729101405, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.05529690127183731, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.0025956747637960846, degree=3, kernel=rbf;, score=-2.052 total time=   0.5s
[CV 2/3] END alpha=0.05613696230745443, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.05638012585296094, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05262176847319412, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.0005116233550703901, degree=3, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 3/3] END alpha=1.6919113285482832, degree=6, kernel=rbf;, score=-2.536 total time=   0.1s
[CV 1/3] END alpha=0.09237940226389478, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 2/3] END alpha=0.09390933305555672, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09630134674211174, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09597192227339885, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.0024159826580401277, degree=5, kernel=rbf;, score=-2.197 total time=   0.5s
[CV 2/3] END alpha=0.0556721906424566, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05653853627812344, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05405957220685846, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.05613696230745443, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.057080588323691665, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05262176847319412, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 3/3] END alpha=0.007132700970753414, degree=5, kernel=rbf;, score=-2.289 total time=   0.1s
[CV 2/3] END alpha=1.6919113285482832, degree=6, kernel=rbf;, score=-2.372 total time=   0.1s
[CV 2/3] END alpha=0.09237940226389478, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.0960367473180617, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.10108945362167311, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09800855788126539, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.08906780165135629, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0038085594950036097, degree=2, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 2/3] END alpha=0.05659538888737776, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05405957220685846, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05655215075543039, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.052792172418519245, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05623123546257265, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.03308583404863251, degree=5, kernel=rbf;, score=-2.276 total time=   0.1s
[CV 3/3] END alpha=0.12344056705809126, degree=6, kernel=rbf;, score=-2.276 total time=   0.1s
[CV 3/3] END alpha=0.07553237772395142, degree=3, kernel=rbf;, score=-2.270 total time=   0.1s
[CV 2/3] END alpha=0.09132212497436723, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09392062028921865, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.09665140996269983, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=3.0901848502523763, degree=3, kernel=rbf;, score=-2.550 total time=   0.5s
[CV 2/3] END alpha=0.0002980622264756584, degree=6, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 3/3] END alpha=0.05653853627812344, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05648370672265726, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05655215075543039, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.052792172418519245, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.052437186240935005, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.0005116233550703901, degree=3, kernel=rbf;, score=-2.297 total time=   0.1s
[CV 2/3] END alpha=0.05705634565376424, degree=6, kernel=rbf;, score=-2.116 total time=   0.1s
[CV 2/3] END alpha=0.09185796910698295, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.09392159782959335, degree=4, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09630134674211174, degree=2, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.09597192227339885, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=3.0901848502523763, degree=3, kernel=rbf;, score=-2.444 total time=   0.5s
[CV 3/3] END alpha=0.0556721906424566, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05653853627812344, degree=3, kernel=rbf;, score=-2.118 total time=   0.6s
[CV 2/3] END alpha=0.05648370672265726, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05548164415546213, degree=5, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05440527576602362, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.052437186240935005, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.5092144380526045, degree=4, kernel=rbf;, score=-2.170 total time=   0.1s
[CV 2/3] END alpha=0.0919187011973121, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.07553237772395142, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 1/3] END alpha=0.09132212497436723, degree=2, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 1/3] END alpha=0.09205649010315081, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09665140996269983, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.005752264345584179, degree=5, kernel=rbf;, score=-2.128 total time=   0.5s
[CV 3/3] END alpha=0.0002980622264756584, degree=6, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 2/3] END alpha=0.056173117110116584, degree=2, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.05648370672265726, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05548164415546213, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.052792172418519245, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.052437186240935005, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.0005116233550703901, degree=3, kernel=rbf;, score=-2.300 total time=   0.1s
[CV 1/3] END alpha=0.05705634565376424, degree=6, kernel=rbf;, score=-2.267 total time=   0.1s
[CV 1/3] END alpha=0.09185796910698295, degree=4, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09390933305555672, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09630134674211174, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.09800855788126539, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.0024159826580401277, degree=5, kernel=rbf;, score=-2.129 total time=   0.5s
[CV 1/3] END alpha=0.0556721906424566, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05659538888737776, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05405957220685846, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.05655215075543039, degree=5, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.057080588323691665, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05623123546257265, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.007132700970753414, degree=5, kernel=rbf;, score=-2.154 total time=   0.1s
[CV 1/3] END alpha=1.6919113285482832, degree=6, kernel=rbf;, score=-2.495 total time=   0.1s
[CV 3/3] END alpha=0.09353644825378811, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.0960367473180617, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.10108945362167311, degree=6, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.07296657024861522, degree=5, kernel=rbf;, score=-2.269 total time=   0.1s
[CV 2/3] END alpha=0.08906780165135629, degree=4, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.0038085594950036097, degree=2, kernel=rbf;, score=-2.051 total time=   0.5s
[CV 1/3] END alpha=0.05659538888737776, degree=3, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.0025956747637960846, degree=3, kernel=rbf;, score=-2.196 total time=   0.5s
[CV 1/3] END alpha=0.05613696230745443, degree=5, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 2/3] END alpha=0.057080588323691665, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05623123546257265, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 2/3] END alpha=0.03308583404863251, degree=5, kernel=rbf;, score=-2.128 total time=   0.1s
[CV 1/3] END alpha=0.00364009750702875, degree=6, kernel=rbf;, score=-2.297 total time=   0.1s
[CV 3/3] END alpha=0.09685088955202271, degree=4, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 3/3] END alpha=0.09132212497436723, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09205649010315081, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.10052760394804836, degree=3, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.005752264345584179, degree=5, kernel=rbf;, score=-2.194 total time=   0.5s
[CV 2/3] END alpha=0.011830520025876583, degree=6, kernel=rbf;, score=-2.126 total time=   0.5s
[CV 2/3] END alpha=0.055928299492687295, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.0010178347081698956, degree=4, kernel=rbf;, score=-2.198 total time=   0.5s
[CV 1/3] END alpha=0.05218143461591256, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05440527576602362, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.054968438375924224, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 1/3] END alpha=0.061867157409216944, degree=5, kernel=rbf;, score=-2.266 total time=   0.1s
[CV 3/3] END alpha=0.00364009750702875, degree=6, kernel=rbf;, score=-2.293 total time=   0.1s
[CV 2/3] END alpha=0.09182234190907873, degree=5, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 3/3] END alpha=0.09682155876585258, degree=6, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 1/3] END alpha=0.09396907009927037, degree=5, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.10052760394804836, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=0.00046720258857505637, degree=2, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 1/3] END alpha=0.02958945433936407, degree=2, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.055928299492687295, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.052637931554240736, degree=6, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.05218143461591256, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05528556062000474, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.04920764975302671, degree=3, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 2/3] END alpha=0.061867157409216944, degree=5, kernel=rbf;, score=-2.115 total time=   0.1s
[CV 1/3] END alpha=0.0035321218087645896, degree=6, kernel=rbf;, score=-2.297 total time=   0.1s
[CV 3/3] END alpha=0.09182234190907873, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 1/3] END alpha=0.08103954675321089, degree=5, kernel=rbf;, score=-2.264 total time=   0.1s
[CV 3/3] END alpha=0.09396907009927037, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09277627653645028, degree=2, kernel=rbf;, score=-2.108 total time=   0.1s
[CV 1/3] END alpha=0.0005488030155587154, degree=4, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 3/3] END alpha=0.02958945433936407, degree=2, kernel=rbf;, score=-2.183 total time=   0.5s
[CV 1/3] END alpha=1.0436341433440885, degree=4, kernel=rbf;, score=-2.231 total time=   0.5s
[CV 3/3] END alpha=0.052637931554240736, degree=6, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.05701780867332378, degree=6, kernel=rbf;, score=-2.043 total time=   0.5s
[CV 3/3] END alpha=0.05528556062000474, degree=4, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.04920764975302671, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 3/3] END alpha=0.5092144380526045, degree=4, kernel=rbf;, score=-2.365 total time=   0.1s
[CV 1/3] END alpha=0.0919187011973121, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09185796910698295, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09392159782959335, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.09392062028921865, degree=2, kernel=rbf;, score=-2.265 total time=   0.1s
[CV 3/3] END alpha=0.09597192227339885, degree=3, kernel=rbf;, score=-2.272 total time=   0.1s
[CV 2/3] END alpha=3.0901848502523763, degree=3, kernel=rbf;, score=-2.487 total time=   0.5s
[CV 1/3] END alpha=0.0002980622264756584, degree=6, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 1/3] END alpha=0.056173117110116584, degree=2, kernel=rbf;, score=-2.042 total time=   0.6s
[CV 2/3] END alpha=0.0010178347081698956, degree=4, kernel=rbf;, score=-2.130 total time=   0.5s
[CV 2/3] END alpha=0.05218143461591256, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05528556062000474, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.054968438375924224, degree=3, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.00018052326983311351, degree=4, kernel=rbf;, score=-2.164 total time=   0.1s
[CV 3/3] END alpha=0.0919187011973121, degree=2, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.07553237772395142, degree=3, kernel=rbf;, score=-2.111 total time=   0.1s
[CV 3/3] END alpha=0.09392159782959335, degree=4, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.09392062028921865, degree=2, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09665140996269983, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.005752264345584179, degree=5, kernel=rbf;, score=-2.050 total time=   0.5s
[CV 1/3] END alpha=0.011830520025876583, degree=6, kernel=rbf;, score=-2.047 total time=   0.5s
[CV 3/3] END alpha=0.056173117110116584, degree=2, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 1/3] END alpha=0.0010178347081698956, degree=4, kernel=rbf;, score=-2.053 total time=   0.5s
[CV 3/3] END alpha=0.05548164415546213, degree=5, kernel=rbf;, score=-2.178 total time=   0.5s
[CV 2/3] END alpha=0.05440527576602362, degree=4, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.054968438375924224, degree=3, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.00018052326983311351, degree=4, kernel=rbf;, score=-2.301 total time=   0.1s
[CV 1/3] END alpha=0.12344056705809126, degree=6, kernel=rbf;, score=-2.266 total time=   0.1s
[CV 2/3] END alpha=0.09685088955202271, degree=4, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 2/3] END alpha=0.09682155876585258, degree=6, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 3/3] END alpha=0.09205649010315081, degree=5, kernel=rbf;, score=-2.271 total time=   0.1s
[CV 2/3] END alpha=0.10052760394804836, degree=3, kernel=rbf;, score=-2.107 total time=   0.1s
[CV 1/3] END alpha=0.00046720258857505637, degree=2, kernel=rbf;, score=-2.054 total time=   0.5s
[CV 3/3] END alpha=0.011830520025876583, degree=6, kernel=rbf;, score=-2.191 total time=   0.5s
[CV 1/3] END alpha=0.055928299492687295, degree=6, kernel=rbf;, score=-2.042 total time=   0.6s
[CV 2/3] END alpha=0.052637931554240736, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 2/3] END alpha=0.05701780867332378, degree=6, kernel=rbf;, score=-2.118 total time=   0.5s
[CV 1/3] END alpha=0.05550854194601316, degree=4, kernel=rbf;, score=-2.042 total time=   0.5s
[CV 3/3] END alpha=0.04920764975302671, degree=3, kernel=rbf;, score=-2.179 total time=   0.5s
