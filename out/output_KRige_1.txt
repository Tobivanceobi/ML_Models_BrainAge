no change     /home/modelrep/sadiya/miniconda/condabin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda
no change     /home/modelrep/sadiya/miniconda/bin/conda-env
no change     /home/modelrep/sadiya/miniconda/bin/activate
no change     /home/modelrep/sadiya/miniconda/bin/deactivate
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.sh
no change     /home/modelrep/sadiya/miniconda/etc/fish/conf.d/conda.fish
no change     /home/modelrep/sadiya/miniconda/shell/condabin/Conda.psm1
no change     /home/modelrep/sadiya/miniconda/shell/condabin/conda-hook.ps1
no change     /home/modelrep/sadiya/miniconda/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/modelrep/sadiya/miniconda/etc/profile.d/conda.csh
no change     /home/modelrep/sadiya/.bashrc
No action taken.
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
Fitting 3 folds for each of 1 candidates, totalling 3 fits
{'mean_fit_time': array([0.0657084 , 0.04386822, 0.04458682, 0.04338145, 0.04376682,
       0.04121614, 0.0436453 , 0.04347253, 0.04315599, 0.04331303,
       0.04345449, 0.04364665, 0.04326773, 0.04384669, 0.0436302 ,
       0.04364928, 0.04347332, 0.04392481, 0.04317466, 0.04276284,
       0.04223291, 0.05506802, 0.04840199, 0.07542555, 0.06115588,
       0.05753565, 0.05220175, 0.06751784, 0.06036878, 0.06313491,
       0.05905867, 0.06619048, 0.06072783, 0.05981882, 0.06285659,
       0.03911591, 0.06295403, 0.05826354, 0.06795462, 0.06114999,
       0.07178489, 0.06603424, 0.0618705 , 0.05298964, 0.05110089,
       0.06687768, 0.06329656, 0.0626874 , 0.05367414, 0.05888708,
       0.06112146, 0.05782668, 0.05466469, 0.05291915, 0.0537773 ,
       0.05233558, 0.05296199, 0.05176536, 0.0593427 , 0.05205846,
       0.05025077, 0.04279288, 0.05014523, 0.04935535, 0.04618502,
       0.04814776, 0.04996483, 0.04825695, 0.04832156, 0.0429527 ,
       0.04407922, 0.04410966, 0.04206475, 0.04074359, 0.04066086,
       0.03990459, 0.03974358, 0.04235649, 0.04070512, 0.04045788,
       0.03982385, 0.03831164, 0.039807  , 0.03971799, 0.03969391,
       0.03908666, 0.03968175, 0.04108286, 0.03965211, 0.03950787,
       0.04036419, 0.04096262, 0.04333409, 0.04003588, 0.03954784,
       0.0392433 , 0.03941393, 0.03959346, 0.04005647, 0.04003668,
       0.03956032, 0.0398531 , 0.04021168, 0.04059815, 0.03909262,
       0.04048101, 0.03906751, 0.04019411, 0.04004018, 0.03939033,
       0.04007308, 0.03983108, 0.04050875, 0.04274503, 0.03988743,
       0.04187258, 0.04260802, 0.04314423, 0.04259507, 0.04076672,
       0.04239575, 0.04239551, 0.04360747, 0.04292377, 0.04307508,
       0.04265976, 0.04223673, 0.04190405]), 'std_fit_time': array([3.84246140e-05, 4.43617531e-04, 2.51965490e-04, 7.42787717e-05,
       2.66685601e-04, 1.87565381e-03, 2.56520541e-04, 5.58788591e-05,
       7.76346477e-04, 7.37267454e-05, 6.03333539e-05, 3.34639669e-04,
       3.58006648e-04, 1.72956352e-04, 5.53749356e-04, 5.99684432e-04,
       7.60893421e-04, 9.32597670e-05, 2.09501101e-04, 9.03807346e-05,
       1.59970813e-03, 1.12513794e-02, 7.07894082e-03, 8.65743285e-03,
       8.87663119e-03, 9.69004219e-03, 7.29432111e-03, 5.41939165e-03,
       4.31587956e-03, 4.51611638e-03, 1.21020725e-02, 3.26658222e-04,
       4.73882587e-03, 6.87691057e-03, 3.19990324e-03, 5.18696080e-04,
       6.54766527e-03, 1.19128238e-02, 7.01196630e-04, 1.00989484e-02,
       5.84465642e-03, 1.17745691e-03, 8.03634797e-03, 4.75289169e-03,
       1.17964799e-02, 3.07495047e-04, 5.63153924e-03, 4.08584481e-03,
       8.61786178e-03, 5.03719079e-03, 4.76461776e-03, 4.73157998e-03,
       4.73351657e-03, 9.24713444e-03, 8.04100991e-03, 8.39250679e-03,
       6.90826158e-03, 8.78628677e-03, 1.25549869e-03, 6.42016452e-03,
       6.04397851e-03, 2.29653010e-03, 5.15685366e-03, 1.41629442e-03,
       1.29287548e-03, 3.81411628e-03, 1.61686462e-03, 1.01362769e-03,
       1.41837024e-03, 3.69563506e-03, 2.45341692e-03, 1.93816493e-03,
       9.08024628e-04, 3.58616152e-04, 1.64290523e-03, 4.77213870e-04,
       6.52120399e-04, 1.90562475e-03, 2.06983977e-04, 1.06936224e-03,
       6.25416495e-04, 5.37877188e-04, 1.43870857e-04, 8.56361222e-04,
       2.50227792e-04, 4.77756263e-04, 1.03208008e-03, 4.45021674e-04,
       1.57729463e-04, 3.41913246e-04, 8.49930865e-04, 5.89831899e-04,
       8.45989245e-05, 3.27387189e-04, 8.37942085e-04, 5.41928606e-04,
       6.50954883e-04, 5.57530653e-04, 8.23597395e-04, 1.06190613e-03,
       6.00789495e-04, 4.74864974e-04, 1.03249892e-03, 6.82612364e-04,
       6.14943878e-04, 8.57973593e-04, 3.70600956e-05, 7.54195672e-04,
       8.63420879e-04, 6.58237989e-04, 7.08641019e-04, 6.00792880e-04,
       6.92640592e-04, 5.19394545e-04, 2.76074508e-04, 8.61872256e-04,
       5.11018435e-04, 3.51621792e-04, 8.23853559e-04, 1.34255820e-03,
       5.78636221e-04, 7.76499051e-05, 3.38413037e-04, 3.19235405e-04,
       8.07728719e-04, 2.83306488e-04, 2.73226883e-04, 4.80424829e-04]), 'mean_score_time': array([0.02527261, 0.02347374, 0.0235916 , 0.02337368, 0.02334213,
       0.02355019, 0.02327251, 0.02320147, 0.02322515, 0.02329803,
       0.02329636, 0.02342868, 0.02338998, 0.02332401, 0.02333275,
       0.02336566, 0.02336613, 0.02346365, 0.02346007, 0.02318565,
       0.02401002, 0.02424781, 0.032317  , 0.03240848, 0.02774175,
       0.02992813, 0.03561513, 0.03041172, 0.03433156, 0.03132772,
       0.0284036 , 0.0328385 , 0.03819505, 0.0281891 , 0.02467752,
       0.02349766, 0.02649363, 0.02788186, 0.02768977, 0.02613552,
       0.02636441, 0.02576693, 0.02519298, 0.02537465, 0.02446381,
       0.02368617, 0.02485832, 0.02423406, 0.0241011 , 0.0277559 ,
       0.02457945, 0.02455242, 0.0258642 , 0.02370199, 0.0237062 ,
       0.02354209, 0.02375436, 0.0237689 , 0.02620618, 0.0242153 ,
       0.02417827, 0.02347557, 0.02378058, 0.02377232, 0.02563588,
       0.02473354, 0.0242064 , 0.02398896, 0.02377431, 0.02346182,
       0.024894  , 0.02693105, 0.02436837, 0.02392435, 0.02350418,
       0.02337869, 0.02378734, 0.02542313, 0.02371152, 0.02332004,
       0.02337114, 0.02340118, 0.02356617, 0.02353557, 0.02365979,
       0.023688  , 0.0234592 , 0.02395248, 0.02343369, 0.02361282,
       0.02359597, 0.02397839, 0.02527873, 0.02374212, 0.02369777,
       0.02343527, 0.02361178, 0.02368196, 0.02375404, 0.02349742,
       0.02369587, 0.0236992 , 0.02420719, 0.0243183 , 0.02379672,
       0.02409832, 0.02347032, 0.02410452, 0.02358413, 0.02345324,
       0.0238332 , 0.02353207, 0.02444132, 0.02626069, 0.02417731,
       0.0246195 , 0.02511875, 0.02575223, 0.0241944 , 0.02461346,
       0.02533865, 0.02497395, 0.02594137, 0.02619807, 0.02536575,
       0.02495948, 0.02510977, 0.02479362]), 'std_score_time': array([2.72313333e-04, 2.90030951e-04, 3.48207013e-04, 2.86545697e-04,
       2.46310510e-04, 5.59792281e-04, 1.98200564e-04, 1.73424894e-04,
       3.19173908e-04, 1.66596080e-04, 1.80249597e-04, 2.05611110e-04,
       2.14463339e-04, 1.73573965e-04, 1.89949877e-04, 4.56010684e-04,
       3.39524818e-04, 3.26230755e-04, 2.44601376e-04, 2.41802467e-04,
       5.62889530e-04, 8.77925160e-04, 9.54688617e-03, 4.09374597e-03,
       2.32523961e-03, 4.52644717e-03, 7.93091991e-03, 7.63719868e-03,
       4.89304442e-03, 2.52886974e-03, 3.00464841e-03, 2.81987020e-04,
       3.66512988e-03, 3.30301856e-03, 7.83913931e-04, 2.40022457e-04,
       1.75979683e-03, 2.58341917e-03, 2.40525863e-03, 1.49248845e-03,
       1.98943633e-03, 1.36483082e-03, 4.69469410e-04, 8.90080219e-04,
       7.07786083e-04, 1.93291458e-04, 1.58017188e-03, 1.21709002e-03,
       1.76178729e-04, 3.46304954e-03, 8.89369954e-04, 7.51852459e-04,
       2.12660900e-03, 1.39188722e-04, 4.25085862e-04, 5.70472418e-04,
       5.55172120e-04, 3.32369581e-04, 2.47652883e-03, 8.33915742e-04,
       1.21872320e-03, 4.02142266e-04, 1.72628552e-04, 2.06307840e-04,
       2.10145597e-04, 6.86599175e-04, 5.61176495e-04, 5.33597008e-04,
       1.30985980e-04, 3.54483183e-04, 1.00469240e-03, 2.01584468e-03,
       7.36767221e-04, 7.63165421e-05, 3.14181796e-04, 3.34050116e-04,
       3.31485194e-04, 1.57558006e-03, 2.67873386e-04, 2.50289120e-04,
       4.89799984e-04, 4.43576654e-04, 1.70715953e-04, 2.37745713e-04,
       9.54981411e-05, 3.72635417e-04, 3.83285137e-04, 2.28811624e-04,
       1.87922950e-04, 4.77775340e-05, 2.58098387e-04, 2.79213933e-04,
       1.36881660e-04, 2.50302595e-04, 2.44478797e-04, 2.68648431e-04,
       9.53282832e-05, 2.72038930e-04, 1.56914004e-04, 1.81538105e-04,
       6.27020022e-04, 3.37297572e-04, 7.93451069e-04, 6.41455025e-04,
       3.35340588e-04, 6.39736963e-04, 1.66966369e-04, 6.49916316e-04,
       1.38063229e-04, 4.05733413e-04, 3.59949909e-04, 1.21635594e-04,
       6.83632847e-04, 9.21133471e-04, 7.83339326e-04, 1.51622925e-03,
       1.39966981e-04, 6.63261471e-04, 8.43882807e-04, 1.38479543e-03,
       6.17557447e-04, 2.26039702e-04, 1.18529721e-03, 9.27879090e-04,
       2.45147353e-04, 1.66871471e-04, 3.07171043e-04, 1.69752131e-04]), 'param_alpha': masked_array(data=[0.00046512269353757475, 0.00019477479724156136,
                   0.7797926353649971, 0.0009063701623072335,
                   0.1841896176692029, 0.0010086052954795222,
                   0.016945682119729723, 0.14359651964868522,
                   0.000839985734622411, 0.0013248732368179598,
                   0.06838077025519262, 9.989270944916065,
                   0.09842654378113568, 0.07278658324828066,
                   0.041608768758921326, 0.0928451573889448,
                   0.09225111192566632, 0.09220393379154054,
                   0.09156568074690744, 0.09190037341607002,
                   0.09166032889866972, 0.28230753919972024,
                   0.0927910153174095, 0.09180821315136961,
                   0.000100064890853516, 0.09178109432663886,
                   0.09166527054363419, 0.09181865226169048,
                   0.09157236270901296, 0.005901146995906148,
                   0.09097574280912726, 0.09166693643501679,
                   0.035986239120480844, 0.09239833429384325,
                   0.010060318362132148, 2.8824786002630773,
                   0.09535190632401314, 0.09093725052782987,
                   0.09388802432948103, 0.09237329266584186,
                   0.09255761419519934, 0.09042745403095524,
                   0.0957002083327644, 0.09250135927813853,
                   0.09132734951042526, 0.09442375932121921,
                   0.0937919684154715, 0.09232450082062929,
                   0.09164834819812227, 0.08881217159803124,
                   0.0922514815657689, 0.09016709490115202,
                   0.09184571518704397, 0.08809570762799372,
                   0.09121114385169674, 0.09073940241692059,
                   0.09075408778820988, 0.09142634940739434,
                   0.09575640917597576, 0.09210131346547776,
                   0.09239196057783504, 0.09243965112345495,
                   0.09140491654005266, 0.08913834770549157,
                   0.0918760925551314, 0.09011462953940667,
                   0.0926661744076084, 0.09199723896023969,
                   0.09165959705121647, 0.08989839814545728,
                   0.09187607911387805, 0.09598181140493603,
                   0.08962589886688196, 0.0923222110654572,
                   0.08775338860735361, 0.09230067667678252,
                   0.09318538813885613, 0.08831951364731636,
                   0.09128692678198798, 0.090980380174507,
                   0.09365650699085358, 0.0925529237447036,
                   0.0881378105373261, 0.09278274593691205,
                   0.08780554321600552, 0.09284747483243747,
                   0.09196998895521474, 0.0906900110766055,
                   0.09079576979976718, 0.08930497634219045,
                   0.09226405457235136, 0.09086387382410913,
                   0.09013786013741094, 0.09193619307915318,
                   0.09086738094396041, 0.08846131562945175,
                   0.09326730644817242, 0.09155147150070883,
                   0.09410075498342986, 0.09399636645201678,
                   0.09149458386214679, 0.09074399048121304,
                   0.09214929798488461, 0.09077684650798173,
                   0.08941376893961347, 0.09180944064028841,
                   0.09181517509168734, 0.0885278888864662,
                   0.08976346584263302, 0.0906633648252734,
                   0.09371584847201493, 0.08995268908659228,
                   0.09237994574075259, 0.08907824962414532,
                   0.09334895093784643, 0.08684900283090621,
                   0.09183723870563038, 0.0880905936847226,
                   0.09195753340095715, 0.0928734481648937,
                   0.09154736944009746, 0.08708630257363735,
                   0.0938169219032446, 0.09214113119411461,
                   0.08442620022188206, 0.08574068723965349,
                   0.0900667429307762, 0.09198106502255657],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 3, 4, 5, 2, 4, 5, 5, 6, 6, 2, 4, 2, 6, 6, 6, 6, 2,
                   6, 6, 2, 6, 2, 6, 2, 2, 6, 2, 6, 2, 6, 2, 2, 2, 6, 4,
                   6, 2, 6, 4, 6, 3, 6, 4, 6, 4, 2, 2, 5, 2, 3, 6, 6, 5,
                   2, 4, 5, 3, 3, 4, 4, 3, 6, 3, 5, 5, 3, 5, 2, 6, 5, 6,
                   2, 2, 3, 5, 3, 3, 3, 4, 4, 6, 4, 3, 3, 5, 6, 4, 4, 4,
                   5, 4, 5, 3, 3, 4, 4, 4, 2, 3, 3, 4, 4, 3, 5, 3, 5, 3,
                   5, 4, 5, 3, 4, 5, 3, 4, 2, 5, 5, 5, 2, 3, 5, 3, 3, 3,
                   5, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf',
                   'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [OrderedDict([('alpha', 0.00046512269353757475), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.00019477479724156136), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.7797926353649971), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0009063701623072335), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.1841896176692029), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0010086052954795222), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.016945682119729723), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.14359651964868522), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.000839985734622411), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0013248732368179598), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.06838077025519262), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 9.989270944916065), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09842654378113568), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.07278658324828066), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.041608768758921326), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0928451573889448), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09225111192566632), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09220393379154054), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09156568074690744), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09190037341607002), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09166032889866972), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.28230753919972024), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0927910153174095), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09180821315136961), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.000100064890853516), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09178109432663886), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09166527054363419), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09181865226169048), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09157236270901296), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.005901146995906148), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09097574280912726), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09166693643501679), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.035986239120480844), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09239833429384325), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.010060318362132148), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 2.8824786002630773), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09535190632401314), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09093725052782987), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09388802432948103), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09237329266584186), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09255761419519934), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09042745403095524), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0957002083327644), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09250135927813853), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09132734951042526), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09442375932121921), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0937919684154715), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09232450082062929), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09164834819812227), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08881217159803124), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0922514815657689), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09016709490115202), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09184571518704397), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08809570762799372), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09121114385169674), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09073940241692059), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09075408778820988), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09142634940739434), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09575640917597576), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09210131346547776), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09239196057783504), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09243965112345495), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09140491654005266), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08913834770549157), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0918760925551314), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09011462953940667), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0926661744076084), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09199723896023969), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09165959705121647), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08989839814545728), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09187607911387805), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09598181140493603), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08962589886688196), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0923222110654572), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08775338860735361), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09230067667678252), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09318538813885613), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08831951364731636), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09128692678198798), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.090980380174507), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09365650699085358), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0925529237447036), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0881378105373261), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09278274593691205), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08780554321600552), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09284747483243747), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09196998895521474), ('degree', 6), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0906900110766055), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09079576979976718), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08930497634219045), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09226405457235136), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09086387382410913), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09013786013741094), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09193619307915318), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09086738094396041), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08846131562945175), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09326730644817242), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09155147150070883), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09410075498342986), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09399636645201678), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09149458386214679), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09074399048121304), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09214929798488461), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09077684650798173), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08941376893961347), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09180944064028841), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09181517509168734), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0885278888864662), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08976346584263302), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0906633648252734), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09371584847201493), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08995268908659228), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09237994574075259), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08907824962414532), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09334895093784643), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08684900283090621), ('degree', 4), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09183723870563038), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0880905936847226), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09195753340095715), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0928734481648937), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09154736944009746), ('degree', 2), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08708630257363735), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0938169219032446), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09214113119411461), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08442620022188206), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.08574068723965349), ('degree', 3), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.0900667429307762), ('degree', 5), ('kernel', 'rbf')]), OrderedDict([('alpha', 0.09198106502255657), ('degree', 2), ('kernel', 'rbf')])], 'split0_test_score': array([-2.00856803, -2.01215459, -1.99188418, -2.00294123, -1.89014963,
       -2.00166586, -1.90315571, -1.88194196, -2.00377524, -1.99791518,
       -1.87256829, -2.36906724, -1.87498293, -1.87266088, -1.87408139,
       -1.87433912, -1.87427529, -1.87427019, -1.87420082, -1.8742373 ,
       -1.87421116, -1.91262715, -1.87433333, -1.87422727, -2.01343512,
       -1.87422432, -1.8742117 , -1.87422841, -1.87420155, -1.95631366,
       -1.87413602, -1.87421188, -1.87562718, -1.87429117, -1.93250144,
       -2.13566942, -1.87462923, -1.87413177, -1.87445421, -1.87428847,
       -1.87430831, -1.87407519, -1.87467024, -1.87430226, -1.87417472,
       -1.87451877, -1.87444257, -1.87428321, -1.87420985, -1.87389257,
       -1.87427533, -1.8740461 , -1.87423135, -1.87382199, -1.87416196,
       -1.87410987, -1.8741115 , -1.87418558, -1.87467683, -1.87425909,
       -1.87429049, -1.87429562, -1.87418323, -1.87392986, -1.87423466,
       -1.87404022, -1.87431996, -1.87424781, -1.87421108, -1.87401594,
       -1.87423466, -1.87470321, -1.87398521, -1.87428297, -1.87379007,
       -1.87428064, -1.87437539, -1.87384275, -1.87417029, -1.87413653,
       -1.87442612, -1.8743078 , -1.8738259 , -1.87433245, -1.87379495,
       -1.87433937, -1.87424486, -1.87410439, -1.87411612, -1.87394883,
       -1.87427669, -1.87412366, -1.87404283, -1.87424119, -1.87412404,
       -1.87385585, -1.87438409, -1.87419927, -1.87447992, -1.87446731,
       -1.87419305, -1.87411038, -1.87426429, -1.87411402, -1.87396119,
       -1.87422741, -1.87422803, -1.87386199, -1.87400075, -1.87410143,
       -1.87443333, -1.87402205, -1.87428919, -1.87392301, -1.87439274,
       -1.87370471, -1.87423043, -1.87382152, -1.8742435 , -1.87434214,
       -1.87419882, -1.87372726, -1.87444559, -1.8742634 , -1.87346843,
       -1.87359802, -1.87403486, -1.87424606]), 'split1_test_score': array([-1.99887042, -2.00092043, -1.98047562, -1.99568301, -1.8922006 ,
       -1.99495685, -1.93702599, -1.88983583, -1.99615698, -1.99274299,
       -1.89596424, -2.52841273, -1.89090187, -1.89492603, -1.90672179,
       -1.89145142, -1.89151128, -1.89151604, -1.89158068, -1.89154675,
       -1.89157108, -1.90247827, -1.89145686, -1.89155608, -2.00165134,
       -1.89155883, -1.89157058, -1.89155502, -1.89158   , -1.96787269,
       -1.89164071, -1.89157041, -1.9113311 , -1.89149642, -1.95322492,
       -2.1885719 , -1.89120177, -1.89164464, -1.89134699, -1.89149894,
       -1.89148036, -1.89171421, -1.89116746, -1.89148603, -1.8916049 ,
       -1.89129366, -1.89135657, -1.89150387, -1.89157229, -1.89194041,
       -1.89151124, -1.89175047, -1.89155228, -1.89204169, -1.89161673,
       -1.89167086, -1.89166882, -1.89159484, -1.89116193, -1.89152641,
       -1.89149706, -1.89149225, -1.89159701, -1.8918945 , -1.89154921,
       -1.89175779, -1.89146942, -1.89153694, -1.89157115, -1.89178798,
       -1.89154921, -1.89113978, -1.89182609, -1.8915041 , -1.89209028,
       -1.89150627, -1.89141726, -1.89200999, -1.89160901, -1.89164024,
       -1.8913701 , -1.89148083, -1.89203572, -1.89145769, -1.89208287,
       -1.89145118, -1.8915397 , -1.89167772, -1.89166304, -1.89187109,
       -1.89150997, -1.89165359, -1.89175455, -1.89154312, -1.89165311,
       -1.89198993, -1.89140904, -1.89158213, -1.89132578, -1.89133618,
       -1.8915879 , -1.89167022, -1.89152156, -1.89166567, -1.89185582,
       -1.89155596, -1.89155538, -1.89198053, -1.89180684, -1.89168142,
       -1.89136417, -1.89178039, -1.89149827, -1.89190295, -1.89140087,
       -1.89223594, -1.89155314, -1.89204241, -1.89154096, -1.89144857,
       -1.89158254, -1.89219339, -1.89135408, -1.89152239, -1.8926748 ,
       -1.8924357 , -1.89176447, -1.89153858]), 'split2_test_score': array([-2.15553034, -2.15887601, -2.08406554, -2.15032174, -1.99478276,
       -2.14914844, -2.04955564, -1.98802791, -2.1510888 , -2.14567662,
       -1.98539364, -2.44331677, -1.98469744, -1.98475721, -1.99918128,
       -1.98445568, -1.98443106, -1.98442912, -1.98440294, -1.98441663,
       -1.9844068 , -2.01322789, -1.98445343, -1.98441286, -2.16006616,
       -1.98441175, -1.98440701, -1.98441328, -1.98440321, -2.10502835,
       -1.98437898, -1.98440707, -2.00621476, -1.98443714, -2.07896879,
       -2.22383644, -1.98456198, -1.98437742, -1.98449944, -1.98443611,
       -1.98444374, -1.98435692, -1.98457705, -1.98444141, -1.98439323,
       -1.98452218, -1.98449538, -1.98443409, -1.98440632, -1.98429311,
       -1.98443108, -1.98434651, -1.98441439, -1.98426539, -1.98438851,
       -1.98436945, -1.98437004, -1.98439726, -1.98457949, -1.98442489,
       -1.98443688, -1.98443885, -1.98439639, -1.98430585, -1.98441564,
       -1.98434442, -1.98444824, -1.98442061, -1.98440677, -1.98433582,
       -1.98441564, -1.98458929, -1.98432503, -1.984434  , -1.98425227,
       -1.98443311, -1.98446988, -1.98427401, -1.98439159, -1.98437917,
       -1.98448966, -1.98444354, -1.98426701, -1.98445308, -1.98425427,
       -1.98445578, -1.98441949, -1.98436746, -1.98437172, -1.98431239,
       -1.9844316 , -1.98437446, -1.98434535, -1.9844181 , -1.9843746 ,
       -1.98427949, -1.98447331, -1.98440236, -1.98450845, -1.98450402,
       -1.98440004, -1.98436963, -1.98442687, -1.98437095, -1.98431667,
       -1.98441291, -1.98441314, -1.98428207, -1.98433047, -1.98436639,
       -1.98449217, -1.98433798, -1.98443638, -1.9843035 , -1.98447673,
       -1.98423709, -1.98441405, -1.98426519, -1.98441898, -1.98445686,
       -1.98440219, -1.98424024, -1.98449643, -1.98442653, -1.98420836,
       -1.98422316, -1.98434251, -1.98441995]), 'mean_test_score': array([-2.05432293, -2.05731701, -2.01880845, -2.04964866, -1.925711  ,
       -2.04859038, -1.96324578, -1.91993523, -2.05034034, -2.04544493,
       -1.91797539, -2.44693225, -1.91686075, -1.91744804, -1.92666149,
       -1.91674874, -1.91673921, -1.91673845, -1.91672815, -1.91673356,
       -1.91672968, -1.94277777, -1.91674787, -1.91673207, -2.05838421,
       -1.91673163, -1.91672976, -1.91673224, -1.91672826, -2.00973823,
       -1.91671857, -1.91672979, -1.93105768, -1.91674158, -1.98823172,
       -2.18269259, -1.91679766, -1.91671794, -1.91676688, -1.91674117,
       -1.91674413, -1.91671544, -1.91680492, -1.91674323, -1.91672429,
       -1.9167782 , -1.91676484, -1.91674039, -1.91672949, -1.9167087 ,
       -1.91673922, -1.91671436, -1.91673268, -1.91670969, -1.9167224 ,
       -1.91671673, -1.91671679, -1.91672589, -1.91680608, -1.9167368 ,
       -1.91674147, -1.91674224, -1.91672554, -1.91671007, -1.91673317,
       -1.91671415, -1.91674587, -1.91673512, -1.91672967, -1.91671325,
       -1.91673317, -1.91681076, -1.91671211, -1.91674035, -1.91671088,
       -1.91674001, -1.91675417, -1.91670891, -1.91672363, -1.91671865,
       -1.91676196, -1.91674406, -1.91670954, -1.91674774, -1.9167107 ,
       -1.91674878, -1.91673468, -1.91671652, -1.91671696, -1.91671077,
       -1.91673942, -1.91671724, -1.91671424, -1.91673414, -1.91671725,
       -1.91670842, -1.91675548, -1.91672792, -1.91677138, -1.91676917,
       -1.916727  , -1.91671674, -1.91673757, -1.91671688, -1.91671123,
       -1.91673209, -1.91673218, -1.91670819, -1.91671269, -1.91671641,
       -1.91676322, -1.91671347, -1.91674128, -1.91670982, -1.91675678,
       -1.91672592, -1.91673254, -1.91670971, -1.91673448, -1.91674919,
       -1.91672785, -1.9167203 , -1.91676537, -1.91673744, -1.91678386,
       -1.91675229, -1.91671395, -1.91673486]), 'std_test_score': array([0.07167387, 0.07195936, 0.04637819, 0.07124826, 0.04884829,
       0.07115801, 0.06257712, 0.04825652, 0.07130778, 0.07090596,
       0.04861933, 0.06510274, 0.04840603, 0.04845498, 0.05298232,
       0.04838306, 0.04837982, 0.04837957, 0.04837646, 0.04837805,
       0.0483769 , 0.04998776, 0.04838275, 0.0483776 , 0.07206075,
       0.04837747, 0.04837692, 0.04837765, 0.04837649, 0.06754533,
       0.0483739 , 0.04837693, 0.05510676, 0.04838059, 0.06471619,
       0.03623333, 0.0483919 , 0.04837375, 0.04838813, 0.04838046,
       0.04838145, 0.0483688 , 0.04839309, 0.04838114, 0.04837539,
       0.04838928, 0.04838795, 0.0483802 , 0.04837684, 0.04835405,
       0.04837982, 0.04836626, 0.04837778, 0.04834473, 0.04837489,
       0.04837193, 0.04837208, 0.04837583, 0.04839329, 0.04837905,
       0.04838056, 0.04838081, 0.04837573, 0.04835683, 0.04837793,
       0.04836575, 0.04838205, 0.04837853, 0.0483769 , 0.0483637 ,
       0.04837793, 0.04839413, 0.04836117, 0.04838019, 0.0483398 ,
       0.04838008, 0.04838505, 0.048348  , 0.04837521, 0.04837392,
       0.04838771, 0.04838142, 0.04834534, 0.0483827 , 0.04834055,
       0.04838307, 0.04837839, 0.04837143, 0.0483725 , 0.04835829,
       0.04837988, 0.0483732 , 0.04836597, 0.04837822, 0.04837324,
       0.0483501 , 0.04838554, 0.04837639, 0.04838855, 0.04838834,
       0.04837614, 0.04837197, 0.04837929, 0.04837231, 0.04835925,
       0.04837761, 0.04837763, 0.04835109, 0.04836244, 0.04837116,
       0.04838781, 0.04836421, 0.04838049, 0.04835631, 0.04838604,
       0.04833336, 0.04837774, 0.04834465, 0.04837833, 0.04838322,
       0.04837638, 0.04833533, 0.04838799, 0.04837925, 0.04831679,
       0.04832496, 0.04836529, 0.04837845]), 'rank_test_score': array([124, 125, 119, 122, 112, 121, 116, 111, 123, 120, 110, 128, 108,
       109, 113,  88,  71,  70,  45,  61,  49, 115,  87,  53, 126,  52,
        50,  56,  46, 118,  33,  51, 114,  80, 117, 127, 104,  32,  99,
        77,  84,  22, 105,  82,  38, 102,  97,  76,  47,   3,  72,  21,
        58,   6,  36,  25,  27,  40, 106,  67,  79,  81,  39,   9,  60,
        19,  85,  66,  48,  16,  59, 107,  14,  75,  12,  74,  92,   4,
        37,  34,  95,  83,   5,  86,  10,  89,  64,  24,  29,  11,  73,
        30,  20,  62,  31,   2,  93,  44, 101, 100,  42,  26,  69,  28,
        13,  54,  55,   1,  15,  23,  96,  17,  78,   8,  94,  41,  57,
         7,  63,  90,  43,  35,  98,  68, 103,  91,  18,  65], dtype=int32)}
-1.9167081936346957
OrderedDict([('alpha', 0.0885278888864662), ('degree', 3), ('kernel', 'rbf')])
[CV 1/3] END alpha=0.1841896176692029, degree=2, kernel=rbf;, score=-1.890 total time=   0.1s
[CV 1/3] END alpha=0.09178109432663886, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09442375932121921, degree=4, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 2/3] END alpha=0.0926661744076084, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.09196998895521474, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0885278888864662, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.0009063701623072335, degree=5, kernel=rbf;, score=-1.996 total time=   0.1s
[CV 2/3] END alpha=0.000100064890853516, degree=2, kernel=rbf;, score=-2.002 total time=   0.1s
[CV 2/3] END alpha=0.09442375932121921, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.0926661744076084, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0906900110766055, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0885278888864662, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.0010086052954795222, degree=4, kernel=rbf;, score=-2.002 total time=   0.1s
[CV 1/3] END alpha=0.09166527054363419, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0937919684154715, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.0926661744076084, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0906900110766055, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08976346584263302, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.1841896176692029, degree=2, kernel=rbf;, score=-1.995 total time=   0.1s
[CV 3/3] END alpha=0.0010086052954795222, degree=4, kernel=rbf;, score=-2.149 total time=   0.1s
[CV 3/3] END alpha=0.09178109432663886, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.0937919684154715, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09199723896023969, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0906900110766055, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08976346584263302, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09178109432663886, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.0937919684154715, degree=2, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09199723896023969, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09079576979976718, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08976346584263302, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.016945682119729723, degree=5, kernel=rbf;, score=-1.937 total time=   0.1s
[CV 3/3] END alpha=0.09166527054363419, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09232450082062929, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09199723896023969, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09079576979976718, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.0906633648252734, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.016945682119729723, degree=5, kernel=rbf;, score=-1.903 total time=   0.1s
[CV 1/3] END alpha=0.09181865226169048, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09232450082062929, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09165959705121647, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09079576979976718, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0906633648252734, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.0010086052954795222, degree=4, kernel=rbf;, score=-1.995 total time=   0.1s
[CV 2/3] END alpha=0.09166527054363419, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09232450082062929, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09165959705121647, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08930497634219045, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0906633648252734, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.016945682119729723, degree=5, kernel=rbf;, score=-2.050 total time=   0.1s
[CV 2/3] END alpha=0.09181865226169048, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09164834819812227, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09165959705121647, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08930497634219045, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09371584847201493, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.14359651964868522, degree=5, kernel=rbf;, score=-1.882 total time=   0.1s
[CV 2/3] END alpha=0.09157236270901296, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09164834819812227, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08989839814545728, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.08930497634219045, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09371584847201493, degree=5, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.000839985734622411, degree=6, kernel=rbf;, score=-2.151 total time=   0.1s
[CV 2/3] END alpha=0.005901146995906148, degree=2, kernel=rbf;, score=-1.968 total time=   0.1s
[CV 3/3] END alpha=0.08881217159803124, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.08989839814545728, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09226405457235136, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09371584847201493, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.14359651964868522, degree=5, kernel=rbf;, score=-1.890 total time=   0.1s
[CV 3/3] END alpha=0.09181865226169048, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09164834819812227, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08989839814545728, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09226405457235136, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.08995268908659228, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.000839985734622411, degree=6, kernel=rbf;, score=-2.004 total time=   0.1s
[CV 3/3] END alpha=0.09157236270901296, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08881217159803124, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09187607911387805, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09226405457235136, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08995268908659228, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.14359651964868522, degree=5, kernel=rbf;, score=-1.988 total time=   0.1s
[CV 1/3] END alpha=0.09157236270901296, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.08881217159803124, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09187607911387805, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09086387382410913, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.08995268908659228, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.0013248732368179598, degree=6, kernel=rbf;, score=-2.146 total time=   0.1s
[CV 3/3] END alpha=0.005901146995906148, degree=2, kernel=rbf;, score=-2.105 total time=   0.1s
[CV 2/3] END alpha=0.0922514815657689, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09187607911387805, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09086387382410913, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09237994574075259, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.06838077025519262, degree=2, kernel=rbf;, score=-1.896 total time=   0.1s
[CV 3/3] END alpha=0.09097574280912726, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09016709490115202, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09598181140493603, degree=6, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 3/3] END alpha=0.09086387382410913, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09237994574075259, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.0013248732368179598, degree=6, kernel=rbf;, score=-1.993 total time=   0.1s
[CV 2/3] END alpha=0.09097574280912726, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.0922514815657689, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09598181140493603, degree=6, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 1/3] END alpha=0.09013786013741094, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09237994574075259, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.000839985734622411, degree=6, kernel=rbf;, score=-1.996 total time=   0.1s
[CV 1/3] END alpha=0.005901146995906148, degree=2, kernel=rbf;, score=-1.956 total time=   0.1s
[CV 1/3] END alpha=0.0922514815657689, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09598181140493603, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09013786013741094, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08907824962414532, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0013248732368179598, degree=6, kernel=rbf;, score=-1.998 total time=   0.1s
[CV 1/3] END alpha=0.09097574280912726, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09016709490115202, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08962589886688196, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09013786013741094, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08907824962414532, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.06838077025519262, degree=2, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 1/3] END alpha=0.09166693643501679, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09016709490115202, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08962589886688196, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09193619307915318, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08907824962414532, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=9.989270944916065, degree=4, kernel=rbf;, score=-2.369 total time=   0.1s
[CV 3/3] END alpha=0.09166693643501679, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09184571518704397, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.08962589886688196, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09193619307915318, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09334895093784643, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.06838077025519262, degree=2, kernel=rbf;, score=-1.873 total time=   0.1s
[CV 2/3] END alpha=0.09166693643501679, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09184571518704397, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0923222110654572, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09193619307915318, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09334895093784643, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=9.989270944916065, degree=4, kernel=rbf;, score=-2.443 total time=   0.1s
[CV 1/3] END alpha=0.035986239120480844, degree=2, kernel=rbf;, score=-1.876 total time=   0.1s
[CV 3/3] END alpha=0.09184571518704397, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0923222110654572, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09086738094396041, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09334895093784643, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09842654378113568, degree=2, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.035986239120480844, degree=2, kernel=rbf;, score=-2.006 total time=   0.1s
[CV 1/3] END alpha=0.08809570762799372, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0923222110654572, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09086738094396041, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08684900283090621, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.07278658324828066, degree=6, kernel=rbf;, score=-1.895 total time=   0.1s
[CV 1/3] END alpha=0.010060318362132148, degree=6, kernel=rbf;, score=-1.933 total time=   0.1s
[CV 3/3] END alpha=0.09121114385169674, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.08775338860735361, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.08846131562945175, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08684900283090621, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=9.989270944916065, degree=4, kernel=rbf;, score=-2.528 total time=   0.1s
[CV 2/3] END alpha=0.035986239120480844, degree=2, kernel=rbf;, score=-1.911 total time=   0.1s
[CV 2/3] END alpha=0.08809570762799372, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08775338860735361, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09086738094396041, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08684900283090621, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09842654378113568, degree=2, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 2/3] END alpha=0.09239833429384325, degree=2, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.08809570762799372, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08775338860735361, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.08846131562945175, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09183723870563038, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.07278658324828066, degree=6, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 3/3] END alpha=0.09239833429384325, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09121114385169674, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09230067667678252, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08846131562945175, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09183723870563038, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09842654378113568, degree=2, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 1/3] END alpha=0.09239833429384325, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09121114385169674, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09230067667678252, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09326730644817242, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09183723870563038, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.07278658324828066, degree=6, kernel=rbf;, score=-1.873 total time=   0.1s
[CV 2/3] END alpha=0.010060318362132148, degree=6, kernel=rbf;, score=-1.953 total time=   0.1s
[CV 2/3] END alpha=0.09073940241692059, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09230067667678252, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09326730644817242, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.0880905936847226, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.041608768758921326, degree=6, kernel=rbf;, score=-1.999 total time=   0.1s
[CV 3/3] END alpha=0.010060318362132148, degree=6, kernel=rbf;, score=-2.079 total time=   0.1s
[CV 1/3] END alpha=0.09073940241692059, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09318538813885613, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09326730644817242, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0880905936847226, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.041608768758921326, degree=6, kernel=rbf;, score=-1.907 total time=   0.1s
[CV 1/3] END alpha=2.8824786002630773, degree=4, kernel=rbf;, score=-2.136 total time=   0.1s
[CV 3/3] END alpha=0.09073940241692059, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09318538813885613, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09155147150070883, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0880905936847226, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.0928451573889448, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09535190632401314, degree=6, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 3/3] END alpha=0.09075408778820988, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09318538813885613, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09155147150070883, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09195753340095715, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0928451573889448, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=2.8824786002630773, degree=4, kernel=rbf;, score=-2.224 total time=   0.1s
[CV 2/3] END alpha=0.09075408778820988, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.08831951364731636, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09155147150070883, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09195753340095715, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.041608768758921326, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=2.8824786002630773, degree=4, kernel=rbf;, score=-2.189 total time=   0.1s
[CV 1/3] END alpha=0.09075408778820988, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.08831951364731636, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09410075498342986, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09195753340095715, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09220393379154054, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09093725052782987, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09142634940739434, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.08831951364731636, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09410075498342986, degree=2, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.0928734481648937, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09225111192566632, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09093725052782987, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09575640917597576, degree=3, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 3/3] END alpha=0.09128692678198798, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09399636645201678, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.0928734481648937, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09225111192566632, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09535190632401314, degree=6, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 1/3] END alpha=0.09142634940739434, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09128692678198798, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09410075498342986, degree=2, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 2/3] END alpha=0.0928734481648937, degree=5, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.09220393379154054, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09388802432948103, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09575640917597576, degree=3, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 1/3] END alpha=0.090980380174507, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09399636645201678, degree=3, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 2/3] END alpha=0.09154736944009746, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.0928451573889448, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09535190632401314, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09142634940739434, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09128692678198798, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09399636645201678, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09154736944009746, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09225111192566632, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09093725052782987, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09575640917597576, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.090980380174507, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09149458386214679, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09154736944009746, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09220393379154054, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09388802432948103, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09210131346547776, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.090980380174507, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09149458386214679, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08708630257363735, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09156568074690744, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09388802432948103, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09210131346547776, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09365650699085358, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09149458386214679, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08708630257363735, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.09156568074690744, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09237329266584186, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.09210131346547776, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09365650699085358, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09074399048121304, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08708630257363735, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09190037341607002, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09237329266584186, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09239196057783504, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.09365650699085358, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09074399048121304, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.0938169219032446, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09190037341607002, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09255761419519934, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09239196057783504, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0925529237447036, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09214929798488461, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0938169219032446, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09156568074690744, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09237329266584186, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09239196057783504, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0925529237447036, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09074399048121304, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0938169219032446, degree=5, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09166032889866972, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09042745403095524, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09243965112345495, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.0925529237447036, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09214929798488461, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09214113119411461, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.00046512269353757475, degree=3, kernel=rbf;, score=-1.999 total time=   0.1s
[CV 3/3] END alpha=0.09166032889866972, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09255761419519934, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.09243965112345495, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0881378105373261, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09214929798488461, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09214113119411461, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09190037341607002, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09255761419519934, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.09243965112345495, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 2/3] END alpha=0.0881378105373261, degree=4, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09077684650798173, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09214113119411461, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.00019477479724156136, degree=3, kernel=rbf;, score=-2.001 total time=   0.1s
[CV 3/3] END alpha=0.28230753919972024, degree=6, kernel=rbf;, score=-2.013 total time=   0.1s
[CV 1/3] END alpha=0.0957002083327644, degree=6, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 3/3] END alpha=0.09140491654005266, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.0881378105373261, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09077684650798173, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08442620022188206, degree=3, kernel=rbf;, score=-1.873 total time=   0.1s
[CV 2/3] END alpha=0.09166032889866972, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09042745403095524, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09140491654005266, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.09278274593691205, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09077684650798173, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08442620022188206, degree=3, kernel=rbf;, score=-1.893 total time=   0.1s
[CV 3/3] END alpha=0.00046512269353757475, degree=3, kernel=rbf;, score=-2.156 total time=   0.1s
[CV 1/3] END alpha=0.28230753919972024, degree=6, kernel=rbf;, score=-1.913 total time=   0.1s
[CV 3/3] END alpha=0.09042745403095524, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09140491654005266, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.09278274593691205, degree=3, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.08941376893961347, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08442620022188206, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 1/3] END alpha=0.00046512269353757475, degree=3, kernel=rbf;, score=-2.009 total time=   0.1s
[CV 2/3] END alpha=0.28230753919972024, degree=6, kernel=rbf;, score=-1.902 total time=   0.1s
[CV 2/3] END alpha=0.0957002083327644, degree=6, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.08913834770549157, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09278274593691205, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08941376893961347, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08574068723965349, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.7797926353649971, degree=4, kernel=rbf;, score=-1.992 total time=   0.1s
[CV 3/3] END alpha=0.0927910153174095, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.0957002083327644, degree=6, kernel=rbf;, score=-1.985 total time=   0.1s
[CV 2/3] END alpha=0.08913834770549157, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.08780554321600552, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08941376893961347, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08574068723965349, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.00019477479724156136, degree=3, kernel=rbf;, score=-2.012 total time=   0.1s
[CV 1/3] END alpha=0.0927910153174095, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09250135927813853, degree=4, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 3/3] END alpha=0.08913834770549157, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.08780554321600552, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09180944064028841, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08574068723965349, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.00019477479724156136, degree=3, kernel=rbf;, score=-2.159 total time=   0.1s
[CV 2/3] END alpha=0.0927910153174095, degree=2, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09250135927813853, degree=4, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0918760925551314, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.08780554321600552, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09180944064028841, degree=3, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.0900667429307762, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 1/3] END alpha=0.0009063701623072335, degree=5, kernel=rbf;, score=-2.003 total time=   0.1s
[CV 3/3] END alpha=0.09180821315136961, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.09250135927813853, degree=4, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0918760925551314, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09284747483243747, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09180944064028841, degree=3, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.0900667429307762, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 2/3] END alpha=0.7797926353649971, degree=4, kernel=rbf;, score=-1.980 total time=   0.1s
[CV 2/3] END alpha=0.09180821315136961, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09132734951042526, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0918760925551314, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09284747483243747, degree=5, kernel=rbf;, score=-1.891 total time=   0.1s
[CV 1/3] END alpha=0.09181517509168734, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.0900667429307762, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 3/3] END alpha=0.7797926353649971, degree=4, kernel=rbf;, score=-2.084 total time=   0.1s
[CV 1/3] END alpha=0.09180821315136961, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.09132734951042526, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09011462953940667, degree=5, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09284747483243747, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09181517509168734, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09198106502255657, degree=2, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 2/3] END alpha=0.1841896176692029, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.000100064890853516, degree=2, kernel=rbf;, score=-2.160 total time=   0.1s
[CV 3/3] END alpha=0.09132734951042526, degree=6, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09011462953940667, degree=5, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.09196998895521474, degree=6, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09181517509168734, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09198106502255657, degree=2, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 3/3] END alpha=0.0009063701623072335, degree=5, kernel=rbf;, score=-2.150 total time=   0.1s
[CV 1/3] END alpha=0.000100064890853516, degree=2, kernel=rbf;, score=-2.013 total time=   0.1s
[CV 1/3] END alpha=0.09442375932121921, degree=4, kernel=rbf;, score=-1.875 total time=   0.1s
[CV 3/3] END alpha=0.09011462953940667, degree=5, kernel=rbf;, score=-1.984 total time=   0.1s
[CV 2/3] END alpha=0.09196998895521474, degree=6, kernel=rbf;, score=-1.892 total time=   0.1s
[CV 1/3] END alpha=0.0885278888864662, degree=3, kernel=rbf;, score=-1.874 total time=   0.1s
[CV 3/3] END alpha=0.09198106502255657, degree=2, kernel=rbf;, score=-1.984 total time=   0.1s
